/**
 * Created by jinwyp on 4/28/14.
 */


(function () {
    'use strict';

    /********************  Create New Module For Controllers ********************/
    angular.module('marksimosadmin', ['pascalprecht.translate', 'notifications', 'marksimos.websitecomponent', 'marksimos.commoncomponent']);





    /********************  Use This Module To Set New Controllers  ********************/
    angular.module('marksimosadmin').controller('adminLoginController', ['$scope', '$timeout', '$http', '$window', function($scope, $timeout, $http, $window) {

        $scope.data = {
            admin : {
                email : '',
                password : ''
            }
        };

        $scope.login = function(form){
            if(form.$valid){
                $http.post('/marksimos/api/admin/login', $scope.data.admin).success(function(data, status, headers, config){

                    $window.location.href = "/marksimos/adminhome" ;

                }).error(function(data, status, headers, config){
                    if(status == 400){
                        console.log(data, status);

                        form.password.$valid = false;
                        form.password.$invalid = true;
                    }
                });
            }
        };
    }]);







    angular.module('marksimosadmin').controller('adminHomeController', ['$scope', '$http', '$notification', function($scope, $http, $notification) {

        $scope.css = {
            leftmenu : 11,
            menuTabShow : [false,false,false,false,false,false], //从第二个false 开始第1个菜单
            seminarId : 0,
            runButtonDisabled : false
        };

        $scope.data = {
            currentUser : null,
            newDistributor : {
                username : "",
                email : "",
                password : "",
                mobilePhone : "",
                idcardNumber : "",
                country : null,
                state : "shanghai",
                city : "shanghai",
                district : "",
                street : "",
                num_of_license_granted : 0,
                gameType : ""
            },
            searchDistributor : {
                username :'',
                email :'',
                user_status :'true'
            },
            distributors : [],

            newFacilitator : {
                username : "",
                email : "",
                password : "",
                mobilePhone : "",
                idcardNumber : "",
                country : null,
                state : "shanghai",
                city : "shanghai",
                district : "",
                street : "",
                num_of_license_granted : 0
            },
            searchFacilitator : {
                username :'',
                email :'',
                user_status :'true'
            },
            facilitators : [],

            newStudent : {
                username : "",
                email : "",
                password : "",
                mobilePhone : "",
                country : null,
                state : "shanghai",
                city : "shanghai",
                occupation : "",
                university : "",
                firstname : "",
                lastname : ""
            },
            searchStudent : {
                username :'',
                email :'',
                user_status :'true',
                //add for e4e
                student_type : ""
            },
            students : [],


            newSeminar : {
                description : "",
                country : null,
                state : "shanghai",
                city : "shanghai",
                venue : "",
                simulation_span : 4,
                company_num : 3
            },
            searchSeminar : {
                id :'',
                status :'false'
            },
            seminars : [],


            addStudentToSeminar : {
                seminar_id : 0,
                student_id : "",
                company_id : 0,
                email : ""
            },

            country : [
                {id:"DZ2", name:"Algeria"},
                {id:"AI2", name:"Anguilla"},
                {id:"AG2", name:"Antigua"},
                {id:"AR2", name:"Argentina"},
                {id:"AU2", name:"Australia"},
                {id:"AT2", name:"Austria"},
                {id:"BS2", name:"Bahamas"},
                {id:"BH2", name:"Bahrain"},
                {id:"BB2", name:"Barbados"},
                {id:"BY2", name:"Belarus"},
                {id:"BE2", name:"Belgium"},
                {id:"BM2", name:"Bermuda"},
                {id:"BW2", name:"Botswana"},
                {id:"BR2", name:"Brazil"},
                {id:"VG2", name:"British Virgin Islands"},
                {id:"BN2", name:"Brunei"},
                {id:"BG2", name:"Bulgaria"},
                {id:"CA2", name:"Canada"},
                {id:"KY2", name:"Cayman Islands"},
                {id:"CL2", name:"Chile"},
                {id:"CN2", name:"China"},
                {id:"CO2", name:"Colombia"},
                {id:"HR2", name:"Croatia"},
                {id:"CY2", name:"Cyprus"},
                {id:"CZ2", name:"Czech Republic"},
                {id:"DK2", name:"Denmark"},
                {id:"DM2", name:"Dominica"},
                {id:"DO2", name:"Dominican Republic"},
                {id:"EG2", name:"Egypt"},
                {id:"SV2", name:"El Salvador"},
                {id:"EE2", name:"Estonia"},
                {id:"FI2", name:"Finland"},
                {id:"FR2", name:"France"},
                {id:"GY2", name:"French Guiana"},
                {id:"GE2", name:"Georgia"},
                {id:"DE2", name:"Germany"},
                {id:"GI2", name:"Gibraltar"},
                {id:"GR2", name:"Greece"},
                {id:"GD2", name:"Grenada"},
                {id:"GP2", name:"Guadeloupe"},
                {id:"GT2", name:"Guatemala"},
                {id:"HK2", name:"Hong Kong"},
                {id:"HU2", name:"Hungary"},
                {id:"IS2", name:"Iceland"},
                {id:"IN2", name:"India"},
                {id:"ID2", name:"Indonesia"},
                {id:"IR2", name:"Iran"},
                {id:"IE2", name:"Ireland"},
                {id:"IL2", name:"Israel"},
                {id:"IT2", name:"Italy"},
                {id:"JM2", name:"Jamaica"},
                {id:"JP2", name:"Japan"},
                {id:"JO2", name:"Jordan"},
                {id:"KZ2", name:"Kazakhstan"},
                {id:"KR2", name:"Korea, South"},
                {id:"KG2", name:"Kyrgyzstan"},
                {id:"LV2", name:"Latvia"},
                {id:"LT2", name:"Lithuania"},
                {id:"LU2", name:"Luxembourg"},
                {id:"MO2", name:"Macau"},
                {id:"MY2", name:"Malaysia"},
                {id:"MT2", name:"Malta"},
                {id:"MQ2", name:"Martinique"},
                {id:"MX2", name:"Mexico"},
                {id:"MD2", name:"Moldova"},
                {id:"MC2", name:"Monaco"},
                {id:"MS2", name:"Montserrat"},
                {id:"NL2", name:"Netherlands"},
                {id:"NZ2", name:"New Zealand"},
                {id:"NO2", name:"Norway"},
                {id:"OM2", name:"Oman"},
                {id:"PA2", name:"Panama"},
                {id:"PE2", name:"Peru"},
                {id:"PH2", name:"Philippines"},
                {id:"PL2", name:"Poland"},
                {id:"PT2", name:"Portugal"},
                {id:"PR2", name:"Puerto Rico"},
                {id:"QA2", name:"Qatar"},
                {id:"RE2", name:"Reunion"},
                {id:"RO2", name:"Romania"},
                {id:"RU2", name:"Russian Federation"},
                {id:"LC2", name:"Saint Lucia"},
                {id:"VC2", name:"Saint Vincent and the Grenadines"},
                {id:"SA2", name:"Saudi Arabia"},
                {id:"RS2", name:"Serbia"},
                {id:"SG2", name:"Singapore"},
                {id:"SK2", name:"Slovakia"},
                {id:"SI2", name:"Slovenia"},
                {id:"ZA2", name:"South Africa"},
                {id:"ES2", name:"Spain"},
                {id:"LK2", name:"Sri Lanka"},
                {id:"KN2", name:"St.Kitts and Nevis"},
                {id:"SE2", name:"Sweden"},
                {id:"CH2", name:"Switzerland"},
                {id:"TW2", name:"Taiwan"},
                {id:"TJ2", name:"Tajikistan"},
                {id:"TH2", name:"Thailand"},
                {id:"TT2", name:"Trinidad and Tobago"},
                {id:"TR2", name:"Turkey"},
                {id:"UA2", name:"Ukraine"},
                {id:"AE2", name:"United Arab Emirates"},
                {id:"UK2", name:"United Kingdom"},
                {id:"UI2", name:"Universal Toll Free"},
                {id:"UY2", name:"Uruguay"},
                {id:"US2", name:"USA"},
                {id:"VE2", name:"Venezuela"},
                {id:"VN2", name:"Vietnam"}

            ]

        };

        $scope.data.newDistributor.country = $scope.data.country[20].name;
        $scope.data.newFacilitator.country = $scope.data.country[20].name;
        $scope.data.newStudent.country = $scope.data.country[20].name;
        $scope.data.newSeminar.country = $scope.data.country[20].name;

        $scope.data.newDistributor.country = $scope.data.country[20].name;
        $scope.data.newFacilitator.country = $scope.data.country[20].name;
        $scope.data.newStudent.country = $scope.data.country[20].name;
        $scope.data.newSeminar.country = $scope.data.country[20].name;

        /********************  获取信息  ********************/

        $scope.adminInit = function(){

            $http.get('/marksimos/api/admin/user').success(function(data, status, headers, config){
                $scope.data.currentUser = data;

                if($scope.data.currentUser.role === 1){
                    $scope.getDistributorsInit();
                    $scope.getFacilitatorsInit();
                    $scope.getStudentsInit();
                    $scope.css.menuTabShow = [false, true, true, true, true, true, true];

                }else if($scope.data.currentUser.role === 2){
                    $scope.getFacilitatorsInit();
                    $scope.css.menuTabShow = [false, true, false, true, false, false, false];

                }else if($scope.data.currentUser.role === 3){
                    $scope.getStudentsInit();
                    $scope.getSeminarInit();
                    $scope.css.menuTabShow = [false, true, false, false ,true, true, false];
                }

            }).error(function(data, status, headers, config) {
                console.log(data);
            });

        };

        $scope.getDistributorsInit = function(){
            $http.get('/marksimos/api/admin/distributors').success(function(data, status, headers, config){
                $scope.data.distributors = data;

            }).error(function(data, status, headers, config) {
                console.log(data);
            });
        };

        $scope.getFacilitatorsInit = function() {
            $http.get('/marksimos/api/admin/facilitators').success(function (data, status, headers, config) {
                $scope.data.facilitators = data;
            }).error(function (data, status, headers, config) {
                console.log(data);
            });
        };

        $scope.getStudentsInit = function() {
            $http.get('/marksimos/api/admin/students').success(function (data, status, headers, config) {
                $scope.data.students = data;
            }).error(function (data, status, headers, config) {
                console.log(data);
            });
        };

        function showCompanyName(fieldname) {
            var names = {
                '0': function() {
                    return "A";
                },
                '1': function() {
                    return "B";
                },
                '2': function() {
                    return "C";
                },
                '3': function() {
                    return "D";
                },
                '4': function() {
                    return "E";
                },
                '5': function() {
                    return "F";
                }

            };
            if (typeof names[fieldname] !== 'function') {
                return false;
            }
            return names[fieldname]();
        }

        $scope.getSeminarInit = function() {
            $http.get('/marksimos/api/admin/facilitator/seminar').success(function (data, status, headers, config) {
                angular.forEach(data, function(seminar){
                    seminar.companyMember = [];
                    angular.forEach(seminar.companyAssignment, function(company, key){
                        seminar.companyMember.push({
                            name : showCompanyName(key),
                            students : company
                        });
                    });
                });
                $scope.data.seminars = data;
            }).error(function (data, status, headers, config) {
                console.log(data);
            });
        };



        $scope.adminInit();






        /********************  搜索 Distributor  ********************/
        $scope.searchDistributor = function(form){
            if(form.$valid){
                $http.get('/marksimos/api/admin/distributors', {params : $scope.data.searchDistributor}).success(function(data, status, headers, config){

                    $scope.data.distributors = data;

                }).error(function(data, status, headers, config){
                    console.log(data);
                });
            }
        };
        /********************  创建新的 Distributor  ********************/
        $scope.createNewDistributor = function(form){
            if(form.$valid){
                console.log($scope.data.newDistributor);
                $http.post('/marksimos/api/admin/distributors', $scope.data.newDistributor).success(function(data, status, headers, config){

                    $scope.getDistributorsInit();
                    $scope.css.leftmenu = 21;

                    $notification.success('Save success', 'Create Distributor success');

                }).error(function(data, status, headers, config){
                    console.log(data);
                    $notification.error('Save failed', data.message);
                });
            }
        };


        /********************  搜索 Facilitator  ********************/
        $scope.searchFacilitator = function(form){
            if(form.$valid){
                $http.get('/marksimos/api/admin/facilitators', {params : $scope.data.searchFacilitator}).success(function(data, status, headers, config){
                    $scope.data.facilitators = data;

                }).error(function(data, status, headers, config){
                    console.log(data);
                });
            }
        };
        /********************  创建新的 Facilitator  ********************/
        $scope.createNewFacilitator = function(form){
            if(form.$valid){
                console.log($scope.data.newFacilitator);
                $http.post('/marksimos/api/admin/facilitators', $scope.data.newFacilitator).success(function(data, status, headers, config){

                    $scope.getFacilitatorsInit();
                    $scope.css.leftmenu = 31;

                    $notification.success('Save success', 'Create Facilitator success');

                }).error(function(data, status, headers, config){
                    console.log(data);
                    $notification.error('Save failed', data.message);
                });
            }
        };

        /********************  搜索 Students  ********************/
        $scope.searchStudent = function(form){
            if(form.$valid){
                $http.get('/marksimos/api/admin/students', {params : $scope.data.searchStudent}).success(function(data, status, headers, config){
                    $scope.data.students = data;

                }).error(function(data, status, headers, config){
                    console.log(data);
                });
            }
        };

        /********************  Student 重置密码为hcd1234  ********************/
        $scope.resetPassword =  function(id){
            var postData = {
                student_id:id
            };
            $http.post('/marksimos/api/admin/resetPassword', postData).success(function(data, status, headers, config){
                $scope.getStudentsInit();
                $scope.css.leftmenu = 41;
                $notification.success('Save success', 'Reset Student Password success');

            }).error(function(data, status, headers, config){
                $notification.error('Save failed', data.message);
            });
        };


        /********************  创建新的 Student  ********************/
        $scope.createNewStudent = function(form){
            if(form.$valid){
                $http.post('/marksimos/api/admin/students', $scope.data.newStudent).success(function(data, status, headers, config){

                    $scope.getStudentsInit();
                    $scope.css.leftmenu = 41;

                    $notification.success('Save success', 'Create Student success');

                }).error(function(data, status, headers, config){
                    $notification.error('Save failed', data.message);
                });
            }
        };


        /********************  搜索 Seminars  ********************/
        $scope.searchSeminar = function(form){
            if(form.$valid){
                $http.get('/marksimos/api/admin/facilitator/seminar', {params : $scope.data.searchSeminar}).success(function(data, status, headers, config){
                    $scope.data.seminars = data;

                }).error(function(data, status, headers, config){
                    console.log(data);
                });
            }
        };
        /********************  创建新的 Seminar  ********************/
        $scope.createNewSeminar = function(form){
            if(form.$valid){
                console.log($scope.data.newSeminar);
                $http.post('/marksimos/api/admin/seminar', $scope.data.newSeminar).success(function(data, status, headers, config){

                    $scope.getSeminarInit();
                    $scope.css.leftmenu = 51;

                    $notification.success('Save success', 'Create Seminar success');

                }).error(function(data, status, headers, config){
                    console.log(data);
                    $notification.error('Save failed', data.message);
                });
            }
        };

        /********************  选择公司  ********************/
        $scope.chooseCompany = function(seminar, company){
            seminar.currentCompanyName = company.companyName;
            $scope.data.addStudentToSeminar.seminar_id = seminar.seminarId ;
            $scope.data.addStudentToSeminar.company_id = company.companyId ;
        };
        /********************  Add Student To Seminar  ********************/
        $scope.addStudentToSeminar = function(seminarid, studentemail){

            if($scope.data.addStudentToSeminar.company_id === 0 || angular.isUndefined(studentemail) || studentemail === "" ){
                $scope.css.seminarId = seminarid;
            }else{
                $scope.css.seminarId = 0;
                $scope.data.addStudentToSeminar.email = studentemail;

                $http.post('/marksimos/api/admin/assign_student_to_seminar', $scope.data.addStudentToSeminar).success(function(data, status, headers, config){
                    $scope.getSeminarInit();
                    $notification.success('Save success', 'Add Student to Seminar success');

                    $scope.data.addStudentToSeminar.seminar_id = 0 ;
                    $scope.data.addStudentToSeminar.company_id = 0 ;
                    $scope.data.addStudentToSeminar.student_id = 0 ;

                }).error(function(data, status, headers, config){
                    console.log(data);
                    $notification.error('Save failed', data.message);
                });
            }
        };



        /********************  Init Seminar  ********************/
        $scope.initSeminar = function(seminarid){
            $scope.css.runButtonDisabled = true;
            $http.post('/marksimos/api/admin/init', {seminar_id:seminarid}).success(function(data, status, headers, config){
                $scope.getSeminarInit();
                $notification.success('Save success', 'Init Seminar success');
                $scope.css.runButtonDisabled = false;
            }).error(function(data, status, headers, config){
                $notification.error('Save failed', data.message);
                $scope.css.runButtonDisabled = false;
            });
        };

        /********************  Run Seminar  ********************/
        $scope.runSeminar = function(seminarid, round){
            $scope.css.runButtonDisabled = true;
            $http.post('/marksimos/api/admin/runsimulation/' + seminarid + '/' + round).success(function(data, status, headers, config){
                $scope.getSeminarInit();
                $notification.success('Save success', 'Run Seminar success');
                $scope.css.runButtonDisabled = false;

            }).error(function(data, status, headers, config){
                $notification.error('Save failed', data.message);
                $scope.css.runButtonDisabled = false;
            });
        };


    }]);





    angular.module('marksimosadmin').controller('adminMarksimosReportController', ['$scope', '$http', '$notification', function($scope, $http, $notification) {
        $scope.css = {
            currentReportMenu : 'A1'

        };



        $scope.clickChartMenu = function(report){
            $scope.css.currentReportMenu = report;

        };

    }]);

}());
/**
 * Created by raven on 9/8/14.
 */

/**
 * recommended
 *
 * no globals are left behind
 */


(function () {
    'use strict';



    /********************  Create New Module For Controllers ********************/
    angular.module('marksimoshelp', ['pascalprecht.translate', 'marksimos.model', 'marksimos.websitecomponent',  'marksimos.filter', 'marksimos.translation']);


    /********************  Use This Module To Set New Controllers  ********************/
    angular.module('marksimoshelp').controller('userHelpController',['$rootScope', '$scope', '$translate', '$http', '$q', '$window', 'Help',function($rootScope, $scope, $translate,  $http, $q, $window, Help) {

        $scope.data ={
            allFaq :[],
            currentFaq : {},
            currentFaqCategory : {},
            currentManual : {},
            manualChinese : {},
            manualEnglish : {}
        };

        $scope.css = {
            navTab : 'FAQ',
            language : 'en_US'
        };

        $rootScope.$on('$translateChangeSuccess', function () {
            if($translate.use()=="zh_CN"){
                $scope.data.currentFaq = $scope.data.allFaq[1];
                $scope.data.currentManual = $scope.data.manualChinese;
                $scope.css.language = "zh_CN";

            }else if($translate.use()=="en_US"){
                $scope.data.currentFaq = $scope.data.allFaq[0];
                $scope.data.currentManual = $scope.data.manualEnglish;
                $scope.css.language = "en_US";
            }
            $scope.data.currentFaqCategory = $scope.data.currentFaq.categories[0];
        });


        var app = {
            initOnce : function(){
                this.loadingData();
            },

            loadingData : function(){
                $scope.questionsShown=[1,0,0,0,0,0,0,0];

                Help.getFAQ().then(function(faqResult){
                    $scope.data.allFaq = faqResult;

                    Help.getManualChinese().then(function(manualResult){
                        $scope.data.manualChinese = manualResult;

                        return Help.getManualEnglish();
                    }).then(function(manualResult){
                        $scope.data.manualEnglish = manualResult;

                        if($translate.use()=="zh_CN"){
                            $scope.data.currentFaq = $scope.data.allFaq[1];
                            $scope.data.currentManual = $scope.data.manualChinese;
                            $scope.css.language = "zh_CN";

                        }else if($translate.use()=="en_US"){
                            $scope.data.currentFaq = $scope.data.allFaq[0];
                            $scope.data.currentManual = $scope.data.manualEnglish;
                            $scope.css.language = "en_US";
                        }
                        $scope.data.currentFaqCategory = $scope.data.currentFaq.categories[0];
                    });

                });
            }
        };


        app.initOnce();


        $scope.clickMenuTab = function(menu){
            $scope.css.navTab = menu;
        };

        $scope.chickFAQTab = function(category){
            $scope.data.currentFaqCategory = category;
        };

    }]);



}());

/**
 * Created by jinwyp on 4/28/14.
 */

(function () {
    'use strict';


    /********************  Create New Module For Controllers ********************/
    angular.module('marksimos', ['pascalprecht.translate', 'angularCharts', 'nvd3ChartDirectives', 'cgNotify',  'marksimos.commoncomponent', 'marksimos.websitecomponent', 'marksimos.model', 'marksimos.filter', 'marksimos.translation' ]);



    /********************  Use This Module To Set New Controllers  ********************/
    angular.module('marksimos').controller('chartController', ['$translate', '$scope', '$rootScope', '$document', '$timeout', '$interval', '$http', 'notify', 'chartReport', 'tableReport', 'Company',  function($translate, $scope, $rootScope, $document, $timeout, $interval, $http, notify, chartReport, tableReport, Company ) {

        $rootScope.$on('$translateChangeSuccess', function () {
            app.loadingChartData();

        });


        notify.config({
            duration : 10000
        }) ;
        var notifytemplate = {
            success : '/app/js/websitecomponent/notifysavesuccess.html',
            failure : '/app/js/websitecomponent/notifysavefailure.html'
        };
        $scope.closeAll = function(){
            notify.closeAll();
        };


        $scope.css = {
            menu                     : 'Home',
            chartMenu                : 'A1',
            tableReportTab           : 'SKU',
            tableReportMenu          : 1,
            additionalBudget         : true,
            currentDecisionBrandId   : 0,
            currentDecisionRightMenu : 1,
            currentSearchReportName  : [],
            addNewSku                : false,
            addNewBrand              : false,
            skuErrorField : '',
            skuErrorInfo  : '',
            brandErrorInfo  : '',
            companyErrorInfo  : '',
            periods : [],
            comparisonPage : false,
            dragEvent : {
                pressEvents   : 'touchstart mousedown',
                moveEvents    : 'touchmove mousemove',
                releaseEvents : 'touchend mouseup'
            },
            dragReportFlag : false,
            dragReportPosition : {
                'top' : 2000,
                'left' : 2000
            },
            dragTargetBoxId : '',
            dragSourceReportId : '',
            dragHaveLeftReport : false,
            dragHaveRightReport : false,
            //score
            selectFinalScorePeriod : 0,
            selectScore : 'Original',
            currentPeriod : 0,
            maxPeriodRound:0,
            finalReportPeriods: [],
            isFeedbackShown : false

        };


        $scope.dataChartSimple = {
            series: ['A', 'B', 'C', 'D', 'E', 'F'],
            data : [
                {
                    x : "Round 1",
                    y: [2, 2, 3, 3, 3, 3],
                    tooltip:"this is tooltip"
                },
                {
                    x : "Round 2",
                    y: [2, 2, 3, 3, 3, 3],
                    tooltip:"this is tooltip"
                },
                {
                    x : "Round 3",
                    y: [2, 2, 3, 3, 3, 3],
                    tooltip:"this is tooltip"
                },
                {
                    x : "Round 4",
                    y: [0, 0, 0, 0, 0, 0],
                    tooltip:"this is tooltip"
                }
            ]
        };


        $scope.data = {
            currentTime : {
                hour : 0,
                minute : 0,
                second : 0
            },
            currentStudent : null,
            currentCompany : null,
            currentCompanyNameCharacter : "",
            currentCompanyOtherInfo : {},
            currentCompanyProductPortfolio : {},
            currentCompanySpendingDetails : {},
            currentCompanyFutureProjectionCalculator : [],
            currentBrand : null,
            currentBrandIndex : 0,
            currentModifiedSku : {},
            currentModifiedBrand : {},
            currentModifiedCompany : {
                company_data : {}
            },
            currentSku : null,
            currentSkuIndex : 0,
            reportName : "",
            newBrand : {
                brand_name : "",
                sku_name : "",
                othererrorinfo : ""
            },
            newSku : {
                sku_name : "",
                brand_id : "",
                othererrorinfo : ""
            },

            tableA1CompanyStatus : {
                allCompanyData : [],
                currentCompany : {
                    companyName : 'Company List'
                },
                currentSKU : {},
                currentBrand : {},
                currentGlobal : {}
            },
            tableA2FinancialData : {
                allData : [],
                currentCompany : {},
                currentPeriod : {
                    period : 'Select Period'
                },
                currentBrand : {}
            },
            tableA4ProfitabilityEvolution : {
                allData : [],
                currentSKU : {},
                currentBrand : {},
                currentGlobal : {}
            },
            tableB2CompetitorIntelligence : {
                allData : [],
                currentTable : 1,
                currentTableData : {},
                currentTableUnit : "%",
                chartConfig : chartReport.getChartConfig1(),
                chartData : $scope.dataChartSimple
            },
            tableC3SegmentDistribution : {
                allData : [],
                currentTable : 1,
                currentTableData : {},
                currentTableUnit : "%",
                chartConfig : chartReport.getChartConfig1(),
                chartData : $scope.dataChartSimple
    //            marketShareVolume : [],
    //            marketShareValue : [],
    //            marketSaleVolume : [],
    //            marketSaleValue : [],
    //            averageNetMarketPriceStdPack : [],
    //            valuePerception : [],
    //            imagePerception : []
            },
            tableC5MarketTrends : {
                allData : [],
                currentTable : 1,
                currentTableData : {},
                currentTableUnit : "",
                chartConfig : chartReport.getChartConfig1(),
                chartData : $scope.dataChartSimple
            },
            tableC6MarketIndicators : {
                allData : {}
            },
            tableFinalScore:{
                selectPeriodData : {}
            },



            chartA31InventoryReport : {
                data : [],
    //            color : ['#39b54a', '#ff983d', '#0087f0', '#8781bd', '#f26c4f', '#bd8cbf', '#000000'] // QIFEI 's color
    //            color : ['#004CE5', '#BB0000', '#FFBC01', '#339933', '#990099', '#FF5200', '#000000'] //Windows color
    //            color : ['#999999', '#BB0000', '#99CC00', '#339933', '#990099', '#FF5200', '#000000']
                color : ['#999999',  '#99CC00', '#BB0000', '#339933', '#990099', '#FF5200', '#000000']
            },

            chartB11MarketShareInValue : {
                config : chartReport.getChartConfig1(),
                data : $scope.dataChartSimple
            },
            chartB12MarketShareInVolume : {
                config : chartReport.getChartConfig1(),
                data : $scope.dataChartSimple
            },
            chartB13MindSpaceShare : {
                config : chartReport.getChartConfig1(),
                data : $scope.dataChartSimple
            },
            chartB14ShelfSpaceShare : {
                config : chartReport.getChartConfig1(),
                data : $scope.dataChartSimple
            },

            chartB31TotalInvestment : {
                config : chartReport.getChartConfig1(),
                data : $scope.dataChartSimple
            },
            chartB32NetProfitByCompanies : {
                config : chartReport.getChartConfig1(),
                data : $scope.dataChartSimple
            },
            chartB33ReturnOnInvestment : {
                config : chartReport.getChartConfig1(),
                data : $scope.dataChartSimple
            },
            chartB34InvestmentsVersusBudget : {
                config : chartReport.getChartConfig1(),
                data : $scope.dataChartSimple
            },
            chartB41MarketSalesValue : {
                config : chartReport.getChartConfig1(),
                data : $scope.dataChartSimple
            },
            chartB42MarketSalesVolume : {
                config : chartReport.getChartConfig1(),
                data : $scope.dataChartSimple
            },
            chartB43TotalInventoryAtFactory : {
                config : chartReport.getChartConfig1(),
                data : $scope.dataChartSimple
            },
            chartB44TotalInventoryAtTrade : {
                config : chartReport.getChartConfig1(),
                data : $scope.dataChartSimple
            },

            chartC11SegmentsLeadersByValuePriceSensitive : {
                config : chartReport.getChartConfig2(),
                currentPeriod : 0,
                allData : [],
                data : $scope.dataChartSimple
            },
            chartC12SegmentsLeadersByValuePretenders : {
                config : chartReport.getChartConfig2(),
                allData : [],
                data : $scope.dataChartSimple
            },
            chartC13SegmentsLeadersByValueModerate : {
                config : chartReport.getChartConfig2(),
                allData : [],
                data : $scope.dataChartSimple
            },
            chartC14SegmentsLeadersByValueGoodLife : {
                config : chartReport.getChartConfig2(),
                allData : [],
                data : $scope.dataChartSimple
            },
            chartC15SegmentsLeadersByValueUltimate : {
                config : chartReport.getChartConfig2(),
                allData : [],
                data : $scope.dataChartSimple
            },
            chartC16SegmentsLeadersByValuePragmatic : {
                config : chartReport.getChartConfig2(),
                allData : [],
                data : $scope.dataChartSimple
            },
            chartC21PerceptionMap : {
                allData : [],
                data : [],
                dataChart : [],
                currentPeriod : 0,
    //            color : ['#39b54a', '#ff983d', '#0087f0', '#8781bd', '#f26c4f', '#bd8cbf', '#000000']
                color : ['#004CE5', '#BB0000', '#FFBC01', '#339933', '#990099', '#FF5200', '#000000']
            },
            chartC41GrowthRateInVolume : {
                config : chartReport.getChartConfig1(),
                data : $scope.dataChartSimple
            },
            chartC42GrowthRateInValue : {
                config : chartReport.getChartConfig1(),
                data : $scope.dataChartSimple
            },
            chartC43NetMarketPrice : {
                config : chartReport.getChartConfig1(),
                data : $scope.dataChartSimple
            },
            chartC44SegmentValueShareTotalMarket : {
                config : chartReport.getChartConfig3(),
                data : $scope.dataChartSimple
            }

        };





        $scope.A31ColorFunction = function(){
            return function(d, i){
                return $scope.data.chartA31InventoryReport.color[i];
            };
        };


        $scope.A31ToolTipContent = function(){
            return function(key, x, y, e, graph) {
                return  '<h5>' + y + '</h5>';
            };
        };

        $scope.C21ColorFunction = function(){
            return function(d, i){
                return $scope.data.chartC21PerceptionMap.color[i];
            };
        };


        $scope.C31shapeFunction = function(){
            return function(d) {
                return d.shape;
            };
        };

        // 处理当前的公司名称的颜色
        function C31TooltipContentShowCompanyNameColor(fieldname) {
            var names = {
                'A': function() {
                    return $scope.data.chartC21PerceptionMap.color[0];
                },
                'B': function() {
                    return $scope.data.chartC21PerceptionMap.color[1];
                },
                'C': function() {
                    return $scope.data.chartC21PerceptionMap.color[2];
                },
                'D': function() {
                    return $scope.data.chartC21PerceptionMap.color[3];
                },
                'E': function() {
                    return $scope.data.chartC21PerceptionMap.color[4];
                },
                'F': function() {
                    return $scope.data.chartC21PerceptionMap.color[5];
                }

            };
            if (typeof names[fieldname] !== 'function') {
                return false;
            }
            return names[fieldname]();
        }

        $scope.C31TooltipContent = function(){
            return function(key, x, y, e, graph) {

                var iconColor ;
                var htmlResult = '';

                var arrow0 = 'perception_arrow_right';
                var arrow1 = 'perception_arrow_right';
                var arrow2 = 'perception_arrow_right';
                var arrow3 = 'perception_arrow_right';
                var arrow4 = 'perception_arrow_right';
                var arrow5 = 'perception_arrow_right';
                var arrow6 = 'perception_arrow_right';
                var arrow7 = 'perception_arrow_right';

                if(e.point.tooltips.length > 0){
                    iconColor = C31TooltipContentShowCompanyNameColor(e.point.CompanyName);

                    if(e.point.tooltips[0].compareWithPreviousPeriod === 1){
                        arrow0 = 'perception_arrow_up';
                    }else if(e.point.tooltips[0].compareWithPreviousPeriod === -1){
                        arrow0 = 'perception_arrow_down';
                    }

                    if(e.point.tooltips[1].compareWithPreviousPeriod === 1){
                        arrow1 = 'perception_arrow_up';
                    }else if(e.point.tooltips[1].compareWithPreviousPeriod === -1){
                        arrow1 = 'perception_arrow_down';
                    }

                    if(e.point.tooltips[2].compareWithPreviousPeriod === 1){
                        arrow2 = 'perception_arrow_up';
                    }else if(e.point.tooltips[2].compareWithPreviousPeriod === -1){
                        arrow2 = 'perception_arrow_down';
                    }

                    if(e.point.tooltips[3].compareWithPreviousPeriod === 1){
                        arrow3 = 'perception_arrow_up';
                    }else if(e.point.tooltips[3].compareWithPreviousPeriod === -1){
                        arrow3 = 'perception_arrow_down';
                    }

                    if(e.point.tooltips[4].compareWithPreviousPeriod === 1){
                        arrow4 = 'perception_arrow_up';
                    }else if(e.point.tooltips[4].compareWithPreviousPeriod === -1){
                        arrow4 = 'perception_arrow_down';
                    }

                    if(e.point.tooltips[5].compareWithPreviousPeriod === 1){
                        arrow5 = 'perception_arrow_up';
                    }else if(e.point.tooltips[5].compareWithPreviousPeriod === -1){
                        arrow5 = 'perception_arrow_down';
                    }

                    if(e.point.tooltips[6].compareWithPreviousPeriod === 1){
                        arrow6 = 'perception_arrow_up';
                    }else if(e.point.tooltips[6].compareWithPreviousPeriod === -1){
                        arrow6 = 'perception_arrow_down';
                    }

                    if(e.point.tooltips[7].compareWithPreviousPeriod === 1){
                        arrow7 = 'perception_arrow_up';
                    }else if(e.point.tooltips[7].compareWithPreviousPeriod === -1){
                        arrow7 = 'perception_arrow_down';
                    }

                    htmlResult = '<div class="panel panel-default perception_panel"> <div class="panel-heading"><span class="perception_logo" style="background-color:' + iconColor + '"></span>' + key + ' - ' + e.point.name + '  </div>' +
                        '<ul class="list-group">' +
                        '<li class="list-group-item perception_list"><span class="perception_info">' +  $translate.instant('ReportPerceptionMapHoverTooltipMarketShareValue') + '</span><span class="perception_info_number">' + Math.round(e.point.tooltips[0].value * 10000) / 100 +
                        '%</span><span class=" ' + arrow0 + ' "></span></li>' +
                        '<li class="list-group-item perception_list perception_list_bg"><span class="perception_info">' +  $translate.instant('ReportPerceptionMapHoverTooltipAverageDisplayPrice') + '</span><span class="perception_info_number">' + Math.round(e.point.tooltips[1].value * 100) / 100 +
                        '</span><span class=" ' + arrow1 + ' "></span></li>' +
                        '<li class="list-group-item perception_list"><span class="perception_info">' +  $translate.instant('ReportPerceptionMapHoverTooltipAppliedTechnologyIndex') + '</span><span class="perception_info_number">' + e.point.tooltips[2].value +
                        '</span><span class=" ' + arrow2 + ' "></span></li>' +
                        '<li class="list-group-item perception_list perception_list_bg"><span class="perception_info">' +  $translate.instant('ReportPerceptionMapHoverTooltipIngredientsQualityIndex') + '</span><span class="perception_info_number">' + e.point.tooltips[3].value +
                        '</span><span class=" ' + arrow3 + ' "></span></li>' +
                        '<li class="list-group-item perception_list"><span class="perception_info">' +  $translate.instant('ReportPerceptionMapHoverTooltipAwareness') + '</span><span class="perception_info_number">' + Math.round(e.point.tooltips[4].value * 10000) / 100 +
                        '%</span><span class=" ' + arrow4 + ' "></span></li>' +
                        '<li class="list-group-item perception_list perception_list_bg"><span class="perception_info">' +  $translate.instant('ReportPerceptionMapHoverTooltipShelfSpace') + '</span><span class="perception_info_number">' + Math.round(e.point.tooltips[5].value * 10000) / 100 +
                        '%</span><span class=" ' + arrow5 + ' "></span></li>' +
                        '<li class="list-group-item perception_list"><span class="perception_info">' +  $translate.instant('ReportPerceptionMapHoverTooltipValuePerceptionChange') + '</span><span class="perception_info_number">' + Math.round(e.point.tooltips[6].value * 100) / 100 +
                        '</span><span class=" ' + arrow6 + ' "></span></li>' +
                        '<li class="list-group-item perception_list perception_list_bg"><span class="perception_info">' +  $translate.instant('ReportPerceptionMapHoverTooltipImagePerceptionChange') + '</span><span class="perception_info_number">' + Math.round(e.point.tooltips[7].value * 100) / 100 +
                        '</span><span class=" ' + arrow7 + ' "></span></li>' +
                        '</ul></div>' ;

                }else {
                    iconColor = $scope.data.chartC21PerceptionMap.color[6];
                    htmlResult = '<h5><span class="perception_logo" style="background-color:' + iconColor + '"></span>'  + ' ' + e.point.name + '</h5>';
                }


                return htmlResult;
            };
        };



        /********************  APP 所有功能 运作函数  ********************/

        // 处理当前的公司名称
        function showCompanyName(fieldname) {
            var names = {
                '1': function() {
                    return "A";
                },
                '2': function() {
                    return "B";
                },
                '3': function() {
                    return "C";
                },
                '4': function() {
                    return "D";
                },
                '5': function() {
                    return "E";
                },
                '6': function() {
                    return "F";
                }

            };
            if (typeof names[fieldname] !== 'function') {
                return false;
            }
            return names[fieldname]();
        }

        var app = {

            initOnce : function(){
                this.loadingChartData();
                this.loadingStudentData();
                this.loadingCompanyDecisionData();
                this.loadingCompanyOtherData();
            },

            reRun : function(){
                this.loadingCompanyDecisionData();
                this.loadingCompanyOtherData();
            },

            loadingChartData : function(){
                /********************  Chart A3  ********************/
                chartReport.inventoryReport().then(function(data, status, headers, config){
                    $scope.data.chartA31InventoryReport.data = data;
                });


                /********************  Chart B1  ********************/
                chartReport.marketShareInValue().then(function(data, status, headers, config){
    //        console.log(data);
                    $scope.data.chartB11MarketShareInValue.data = data;
                });
                chartReport.marketShareInVolume().then(function(data, status, headers, config){
    //        console.log(data);
                    $scope.data.chartB12MarketShareInVolume.data = data;
                });
                chartReport.mindSpaceShare().then(function(data, status, headers, config){
    //        console.log(data);
                    $scope.data.chartB13MindSpaceShare.data = data;
                });
                chartReport.shelfSpaceShare().then(function(data, status, headers, config){
    //        console.log(data);
                    $scope.data.chartB14ShelfSpaceShare.data = data;
                });


                /********************  Chart B3  ********************/
                chartReport.totalInvestment().then(function(data, status, headers, config){
    //        console.log(data);
                    $scope.data.chartB31TotalInvestment.data = data;
                });
                chartReport.netProfitByCompanies().then(function(data, status, headers, config){
    //        console.log(data);
                    $scope.data.chartB32NetProfitByCompanies.data = data;
                });
                chartReport.returnOnInvestment().then(function(data, status, headers, config){
    //        console.log(data);
                    $scope.data.chartB33ReturnOnInvestment.data = data;
                });
                chartReport.investmentsVersusBudget().then(function(data, status, headers, config){
                    $scope.data.chartB34InvestmentsVersusBudget.data = data;
                });


                /********************  Chart B4  ********************/
                chartReport.marketSalesValue().then(function(data, status, headers, config){
    //        console.log(data);
                    $scope.data.chartB41MarketSalesValue.data = data;
                });
                chartReport.marketSalesVolume().then(function(data, status, headers, config){
    //        console.log(data);
                    $scope.data.chartB42MarketSalesVolume.data = data;
                });
                chartReport.totalInventoryAtFactory().then(function(data, status, headers, config){
    //        console.log(data);
                    $scope.data.chartB43TotalInventoryAtFactory.data = data;
                });
                chartReport.totalInventoryAtTrade().then(function(data, status, headers, config){
                    $scope.data.chartB44TotalInventoryAtTrade.data = data;
                });


                /********************  Chart C1  ********************/
                chartReport.segmentsLeadersByValuePriceSensitive().then(function(data, status, headers, config){
                    $scope.data.chartC11SegmentsLeadersByValuePriceSensitive.allData = data.data;
                    $scope.data.chartC11SegmentsLeadersByValuePriceSensitive.currentPeriod = $scope.data.chartC11SegmentsLeadersByValuePriceSensitive.allData.length - 4 ;
                    $scope.data.chartC11SegmentsLeadersByValuePriceSensitive.data = $scope.data.chartC11SegmentsLeadersByValuePriceSensitive.allData[$scope.data.chartC11SegmentsLeadersByValuePriceSensitive.currentPeriod + 3];
                });
                chartReport.segmentsLeadersByValuePretenders().then(function(data, status, headers, config){
                    $scope.data.chartC12SegmentsLeadersByValuePretenders.allData = data.data;
                    $scope.data.chartC12SegmentsLeadersByValuePretenders.data = $scope.data.chartC12SegmentsLeadersByValuePretenders.allData[$scope.data.chartC11SegmentsLeadersByValuePriceSensitive.currentPeriod + 3];
                });
                chartReport.segmentsLeadersByValueModerate().then(function(data, status, headers, config){
                    $scope.data.chartC13SegmentsLeadersByValueModerate.allData = data.data;
                    $scope.data.chartC13SegmentsLeadersByValueModerate.data = $scope.data.chartC13SegmentsLeadersByValueModerate.allData[$scope.data.chartC11SegmentsLeadersByValuePriceSensitive.currentPeriod + 3];
                });
                chartReport.segmentsLeadersByValueGoodLife().then(function(data, status, headers, config){
                    $scope.data.chartC14SegmentsLeadersByValueGoodLife.allData = data.data;
                    $scope.data.chartC14SegmentsLeadersByValueGoodLife.data = $scope.data.chartC14SegmentsLeadersByValueGoodLife.allData[$scope.data.chartC11SegmentsLeadersByValuePriceSensitive.currentPeriod + 3];
                });
                chartReport.segmentsLeadersByValueUltimate().then(function(data, status, headers, config){
                    $scope.data.chartC15SegmentsLeadersByValueUltimate.allData = data.data;
                    $scope.data.chartC15SegmentsLeadersByValueUltimate.data = $scope.data.chartC15SegmentsLeadersByValueUltimate.allData[$scope.data.chartC11SegmentsLeadersByValuePriceSensitive.currentPeriod + 3];
                });
                chartReport.segmentsLeadersByValuePragmatic().then(function(data, status, headers, config){
                    $scope.data.chartC16SegmentsLeadersByValuePragmatic.allData = data.data;
                    $scope.data.chartC16SegmentsLeadersByValuePragmatic.data = $scope.data.chartC16SegmentsLeadersByValuePragmatic.allData[$scope.data.chartC11SegmentsLeadersByValuePriceSensitive.currentPeriod + 3];
                });


                /********************  Chart C2  ********************/
                chartReport.perceptionMap().then(function(data, status, headers, config){
                    $scope.data.chartC21PerceptionMap.allData = data.data;
                    $scope.data.chartC21PerceptionMap.currentPeriod = $scope.data.chartC21PerceptionMap.allData.length - 4;
                    $scope.data.chartC21PerceptionMap.data = $scope.data.chartC21PerceptionMap.allData[$scope.data.chartC21PerceptionMap.currentPeriod + 3];
                    $scope.data.chartC21PerceptionMap.dataChart = $scope.data.chartC21PerceptionMap.data.dataSKU;
                });

                /********************  Chart C4  ********************/
                $scope.data.chartC41GrowthRateInVolume.config.title = 'Growth Rate In Volume (Period -3 = 100)';
                $scope.data.chartC42GrowthRateInValue.config.title = 'Growth Rate In Value (Period -3 = 100)';
                $scope.data.chartC43NetMarketPrice.config.title = 'Net Market Price (Period -3 = 100)';
                $scope.data.chartC44SegmentValueShareTotalMarket.config.title = 'Segment Value Share In Total Market (%)';

                chartReport.growthRateInVolume().then(function(data, status, headers, config){
    //        console.log(data);
                    $scope.data.chartC41GrowthRateInVolume.data = data;
                });
                chartReport.growthRateInValue().then(function(data, status, headers, config){
    //        console.log(data);
                    $scope.data.chartC42GrowthRateInValue.data = data;
                });
                chartReport.netMarketPrice().then(function(data, status, headers, config){
    //        console.log(data);
                    $scope.data.chartC43NetMarketPrice.data = data;
                });
                chartReport.segmentValueShareTotalMarket().then(function(data, status, headers, config){
    //        console.log(data);
                    $scope.data.chartC44SegmentValueShareTotalMarket.data = data;
                });
            },

            loadingStudentData : function(){
                Company.getCurrentStudent().then(function(data, status, headers, config){
                    $scope.data.currentStudent = data;

                    var currentDate = new Date();

                    $scope.data.currentTime.hour = 1;
                    $scope.data.currentTime.minute = 59;
                    $scope.data.currentTime.second = 59 ;

    //            var timer = $interval(function() {
    //                currentDate = new Date();
    //                if(currentDate.getHours() < 13 && currentDate.getHours() > 9){
    //                    $scope.data.currentTime.hour = 12 - currentDate.getHours();
    //                    $scope.data.currentTime.minute = 60 - currentDate.getMinutes();
    //                    $scope.data.currentTime.second = 60 - currentDate.getSeconds() ;
    //                }else if(currentDate.getHours() < 19 && currentDate.getHours() >= 13){
    //                    $scope.data.currentTime.hour = 18 - currentDate.getHours();
    //                    $scope.data.currentTime.minute = 60 - currentDate.getMinutes();
    //                    $scope.data.currentTime.second = 60 - currentDate.getSeconds() ;
    //                }else {
    //                    $interval.cancel(timer);
    //                }
    //            }, 3000);





                    $scope.data.currentCompanyNameCharacter = showCompanyName($scope.data.currentStudent.companyId);

                    $scope.css.currentPeriod = $scope.data.currentStudent.currentPeriod;
                    $scope.css.maxPeriodRound = $scope.data.currentStudent.maxPeriodRound;

                    $scope.css.periods = [];

                    $scope.css.finalReportPeriods = [];

                    // 处理显示当前第几回合进度条
                    if(angular.isNumber($scope.data.currentStudent.currentPeriod)){
                        for (var i = -3; i <= $scope.data.currentStudent.maxPeriodRound; i++) {

                            if (i ===  $scope.data.currentStudent.currentPeriod ) {
                                $scope.css.periods.push({
                                    value : i,
                                    currentPeriod : true,
                                    pastPeriod : false
                                });

                            } else if(i <  $scope.data.currentStudent.currentPeriod){
                                $scope.css.periods.push({
                                    value : i,
                                    currentPeriod : false,
                                    pastPeriod : true
                                });
                            }else{
                                $scope.css.periods.push({
                                    value : i,
                                    currentPeriod : false,
                                    pastPeriod : false
                                });
                            }
                        }
                        //get periods of finalScore
                        for (var j = 0; j < $scope.data.currentStudent.currentPeriod; j++) {
                            $scope.css.finalReportPeriods.push(j);
                        }

                    }


                    //get Final Score Data  of current period
                    $scope.css.selectFinalScorePeriod = $scope.data.currentStudent.currentPeriod - 1;

                    Company.getFinalScore($scope.data.currentStudent.currentPeriod - 1).then(function(data, status, headers, config){
                        $scope.data.tableFinalScore.selectPeriodData = data;
                    });
                });
            },

            loadingCompanyDecisionData : function(){
                Company.getCompany().then(function(data, status, headers, config){

                    //记录上一次选中的Brand  并找到对应的Index 供本次查询使用
                    if($scope.data.currentBrand !== null ){
                        angular.forEach(data.d_BrandsDecisions, function(brand){

                            if(brand.d_BrandID === $scope.data.currentBrand.d_BrandID){
                                $scope.data.currentBrandIndex = data.d_BrandsDecisions.indexOf(brand);

                                if($scope.data.currentBrandIndex === -1 ){
                                    $scope.data.currentBrandIndex  = 0;
                                }
                            }
                        });
                    }

                    $scope.data.currentCompany = data;

                    //要处理删除SKU后,同时删除Brand后的问题 currentBrandIndex 要重置为零
                    if( angular.isUndefined($scope.data.currentCompany.d_BrandsDecisions[$scope.data.currentBrandIndex]) ){
                        $scope.data.currentBrandIndex = 0;
                        $scope.data.currentSkuIndex  = 0;
                    }

                    $scope.css.currentDecisionBrandId = $scope.data.currentCompany.d_BrandsDecisions[$scope.data.currentBrandIndex]._id;
                    $scope.data.currentBrand = $scope.data.currentCompany.d_BrandsDecisions[$scope.data.currentBrandIndex];
//                    console.log("Brand :",$scope.data.currentBrand);

                    //记录上一次选中的SKU 并找到对应的Index 供本次查询使用
                    if($scope.data.currentSku !== null ){
                        angular.forEach($scope.data.currentBrand.d_SKUsDecisions, function(sku){

                            if(sku.d_SKUID === $scope.data.currentSku.d_SKUID){
                                $scope.data.currentSkuIndex = $scope.data.currentBrand.d_SKUsDecisions.indexOf(sku);

                                if($scope.data.currentSkuIndex === -1 ){
                                    $scope.data.currentSkuIndex  = 0;
                                }
                            }
                        });
                    }

                    $scope.data.currentSku = $scope.data.currentCompany.d_BrandsDecisions[$scope.data.currentBrandIndex].d_SKUsDecisions[$scope.data.currentSkuIndex];

                    Company.getCompanyFutureProjectionCalculator($scope.data.currentSku.d_SKUID).then(function(data, status, headers, config){
                        $scope.data.currentCompanyFutureProjectionCalculator = data;
                    });

                });
            },

            loadingCompanyOtherData : function(){
                Company.getCompanyOtherInfo().then(function(data, status, headers, config){
                    $scope.data.currentCompanyOtherInfo = {
                        totalAvailableBudget : parseInt(data.totalAvailableBudget * 10000) / 100,
                        totalAvailableBudgetCSS : data.totalAvailableBudget.toFixed(4)  * 100 + '%',
                        totalAvailableBudgetValue : data.totalAvailableBudgetValue.toFixed(0),
                        normalCapacity : parseInt(data.normalCapacity * 10000) / 100,
                        normalCapacityCSS : data.normalCapacity.toFixed(4)  * 100 + '%',
                        normalCapacityValue : data.normalCapacityValue.toFixed(0),
                        overtimeCapacity : parseInt(data.overtimeCapacity * 10000 ) / 100,
                        overtimeCapacityCSS : data.overtimeCapacity.toFixed(4)  * 100 + '%',
                        overtimeCapacityValue : data.overtimeCapacityValue.toFixed(0)
                    };

                });

                Company.getCompanyProductPortfolio().then(function(data, status, headers, config){
                    $scope.data.currentCompanyProductPortfolio = data;
                });

                Company.getCompanySpendingDetails().then(function(data, status, headers, config){
                    $scope.data.currentCompanySpendingDetails = data;
                });
            }

        };


        /********************  Chart C1  ********************/
        $scope.switchTableReportC1Period = function(period){
            $scope.data.chartC11SegmentsLeadersByValuePriceSensitive.currentPeriod = period.period;
            $scope.data.chartC11SegmentsLeadersByValuePriceSensitive.data = $scope.data.chartC11SegmentsLeadersByValuePriceSensitive.allData[$scope.data.chartC11SegmentsLeadersByValuePriceSensitive.currentPeriod + 3];
            $scope.data.chartC12SegmentsLeadersByValuePretenders.data = $scope.data.chartC12SegmentsLeadersByValuePretenders.allData[$scope.data.chartC11SegmentsLeadersByValuePriceSensitive.currentPeriod + 3];
            $scope.data.chartC13SegmentsLeadersByValueModerate.data = $scope.data.chartC13SegmentsLeadersByValueModerate.allData[$scope.data.chartC11SegmentsLeadersByValuePriceSensitive.currentPeriod + 3];
            $scope.data.chartC14SegmentsLeadersByValueGoodLife.data = $scope.data.chartC14SegmentsLeadersByValueGoodLife.allData[$scope.data.chartC11SegmentsLeadersByValuePriceSensitive.currentPeriod + 3];
            $scope.data.chartC15SegmentsLeadersByValueUltimate.data = $scope.data.chartC15SegmentsLeadersByValueUltimate.allData[$scope.data.chartC11SegmentsLeadersByValuePriceSensitive.currentPeriod + 3];
            $scope.data.chartC16SegmentsLeadersByValuePragmatic.data = $scope.data.chartC16SegmentsLeadersByValuePragmatic.allData[$scope.data.chartC11SegmentsLeadersByValuePriceSensitive.currentPeriod + 3];
        };


        /********************  Chart C2  ********************/
        $scope.switchPerceptionMapsData = function(flag){
            if(flag === 'sku'){
                $scope.data.chartC21PerceptionMap.dataChart = $scope.data.chartC21PerceptionMap.data.dataSKU;
            }else{
                $scope.data.chartC21PerceptionMap.dataChart = $scope.data.chartC21PerceptionMap.data.dataBrand;
            }
        };
        $scope.switchTableReportC2Period = function(period){
            $scope.data.chartC21PerceptionMap.currentPeriod = period.period;
            $scope.data.chartC21PerceptionMap.data = period;
            $scope.data.chartC21PerceptionMap.dataChart = $scope.data.chartC21PerceptionMap.data.dataSKU;
        };






        /********************  Table Report A1  ********************/
        tableReport.companyStatus().then(function(data, status, headers, config){
    //        console.log(data);
            $scope.data.tableA1CompanyStatus.allCompanyData = data;
            $scope.data.tableA1CompanyStatus.currentCompany = data[0];
            $scope.data.tableA1CompanyStatus.currentSKU = $scope.data.tableA1CompanyStatus.currentCompany.SKU[0];
            $scope.data.tableA1CompanyStatus.currentBrand = $scope.data.tableA1CompanyStatus.currentCompany.brand[0];
            $scope.data.tableA1CompanyStatus.currentGlobal = $scope.data.tableA1CompanyStatus.currentCompany.global;
        });

        $scope.switchTableReportA1Company = function(company){
            $scope.data.tableA1CompanyStatus.currentCompany = company;
            $scope.data.tableA1CompanyStatus.currentSKU = $scope.data.tableA1CompanyStatus.currentCompany.SKU[0];
            $scope.data.tableA1CompanyStatus.currentBrand = $scope.data.tableA1CompanyStatus.currentCompany.brand[0];
            $scope.data.tableA1CompanyStatus.currentGlobal = $scope.data.tableA1CompanyStatus.currentCompany.global;
        };
        $scope.switchTableReportA1SKU = function(SKU){
            $scope.data.tableA1CompanyStatus.currentSKU = SKU;
        };
        $scope.switchTableReportA1Brand = function(brand){
            $scope.data.tableA1CompanyStatus.currentBrand = brand;
        };


        /********************  Table Report A2  ********************/
        tableReport.financialReport().then(function(data, status, headers, config){
    //        console.log(data);
            $scope.data.tableA2FinancialData.allData = data;
            $scope.data.tableA2FinancialData.currentCompany = data[0];
            $scope.data.tableA2FinancialData.currentPeriod = $scope.data.tableA2FinancialData.currentCompany.periods[$scope.data.tableA2FinancialData.currentCompany.periods.length -1];
            $scope.data.tableA2FinancialData.currentBrand = $scope.data.tableA2FinancialData.currentPeriod.brands[0];
        });
        $scope.switchTableReportPeriod = function(period){
            $scope.data.tableA2FinancialData.currentPeriod = period;
            $scope.data.tableA2FinancialData.currentBrand = $scope.data.tableA2FinancialData.currentPeriod.brands[0];
        };
        $scope.switchTableReportA2Brand = function(brand){
            $scope.data.tableA2FinancialData.currentBrand = brand;
        };


        /********************  Table Report A4  ********************/
        tableReport.profitabilityEvolution().then(function(data, status, headers, config){
    //        console.log(data);
            $scope.data.tableA4ProfitabilityEvolution.allData = data[0];
            $scope.data.tableA4ProfitabilityEvolution.currentSKU = $scope.data.tableA4ProfitabilityEvolution.allData.SKU[0];
            $scope.data.tableA4ProfitabilityEvolution.currentBrand = $scope.data.tableA4ProfitabilityEvolution.allData.brand[0];
            $scope.data.tableA4ProfitabilityEvolution.currentGlobal = $scope.data.tableA4ProfitabilityEvolution.allData.global;
        });
        $scope.switchTableReportA4SKU = function(SKU){
            $scope.data.tableA4ProfitabilityEvolution.currentSKU = SKU;
        };
        $scope.switchTableReportA4Brand = function(brand){
            $scope.data.tableA4ProfitabilityEvolution.currentBrand = brand;
        };

        /********************  Table Report B2  ********************/
        tableReport.competitorIntelligence().then(function(data, status, headers, config){
    //        console.log(data);
            $scope.data.tableB2CompetitorIntelligence.allData = data;
            $scope.data.tableB2CompetitorIntelligence.currentTableData = $scope.data.tableB2CompetitorIntelligence.allData.acquiredProductionAndLogisticsEfficiency;
            $scope.data.tableB2CompetitorIntelligence.chartData = chartReport.formatChartData($scope.data.tableB2CompetitorIntelligence.allData.acquiredProductionAndLogisticsEfficiency);
        });
        $scope.switchTableMenuLevel1B2 = function(menu, field, unit){
            $scope.css.tableReportMenu = menu;
            $scope.switchTableReportB2(1, field, unit);
        };
        $scope.switchTableReportB2 = function(order, field, unit){
            $scope.data.tableB2CompetitorIntelligence.currentTable = order;
            $scope.data.tableB2CompetitorIntelligence.currentTableData = $scope.data.tableB2CompetitorIntelligence.allData[field];
            $scope.data.tableB2CompetitorIntelligence.chartData = chartReport.formatChartData($scope.data.tableB2CompetitorIntelligence.currentTableData);
            $scope.data.tableB2CompetitorIntelligence.currentTableUnit = unit;
        };



        /********************  Table Report C3  ********************/
        tableReport.segmentDistribution().then(function(data, status, headers, config){
    //        console.log(data);
            $scope.data.tableC3SegmentDistribution.allData = data;
            $scope.data.tableC3SegmentDistribution.currentTableData = $scope.data.tableC3SegmentDistribution.allData.marketShareVolume;
            $scope.data.tableC3SegmentDistribution.chartData = chartReport.formatChartData($scope.data.tableC3SegmentDistribution.currentTableData);
        });
        $scope.switchTableReportC3 = function(order, field, unit){
            $scope.data.tableC3SegmentDistribution.currentTable = order;
            $scope.data.tableC3SegmentDistribution.currentTableData = $scope.data.tableC3SegmentDistribution.allData[field];
            $scope.data.tableC3SegmentDistribution.chartData = chartReport.formatChartData($scope.data.tableC3SegmentDistribution.currentTableData);
            $scope.data.tableC3SegmentDistribution.currentTableUnit = unit;
        };

        /********************  Table Report C5  ********************/
        tableReport.marketTrends().then(function(data, status, headers, config){
    //        console.log(data);
            $scope.data.tableC5MarketTrends.allData = data;
            $scope.data.tableC5MarketTrends.currentTableData = $scope.data.tableC5MarketTrends.allData.SKU.averageDisplayPriceStdPack;
            $scope.data.tableC5MarketTrends.chartData = chartReport.formatChartData($scope.data.tableC5MarketTrends.currentTableData);

        });
        $scope.switchTableCategoryC5 = function(category, field, unit){
            $scope.css.tableReportTab = category;
            if(category === 'SKU'){
                $scope.switchTableMenuLevel1C5(1, 'SKU', field, unit);
            }else if(category === 'Brand'){
                $scope.switchTableMenuLevel1C5(1, 'Brand', field, unit);
            }else{
                $scope.switchTableMenuLevel1C5(1, 'Global', field, unit);
            }
        };
        $scope.switchTableMenuLevel1C5 = function(menu, category, field, unit){
            $scope.css.tableReportMenu = menu;
            if(category === 'SKU'){
                $scope.switchTableReportC5(1, 'SKU', field, unit);
            }else if(category === 'Brand'){
                $scope.switchTableReportC5(1, 'brand', field, unit);
            }else{
                $scope.switchTableReportC5(1, 'global', 'averageNetMarketPriceStdPack', unit);
            }
        };
        $scope.switchTableReportC5 = function(order, category, field, unit){
            $scope.data.tableC5MarketTrends.currentTable = order;
            $scope.data.tableC5MarketTrends.currentTableData = $scope.data.tableC5MarketTrends.allData[category][field];
            $scope.data.tableC5MarketTrends.currentTableUnit = unit;
            $scope.data.tableC5MarketTrends.chartData = chartReport.formatChartData($scope.data.tableC5MarketTrends.currentTableData);
        };

        /********************  Table Report C6  ********************/
        tableReport.marketIndicators().then(function(data, status, headers, config){
            $scope.data.tableC6MarketIndicators.allData = data;


        });

















        /********************  切换左部图标菜单  ********************/
        $scope.clickChartMenu = function(chart){
            $scope.css.menu = 'Report';
            $scope.css.chartMenu = chart;
            // 原因 图表渲染的宽度没有撑开 ng-show改为ng-if 就可以撑开了.
        };


        /********************  切换顶部菜单  ********************/
        $scope.switchHeaderMenu = function(menu){
            $scope.css.menu = menu;
        };





        /********************  初始化程序  获取Decision 等信息  ********************/

        app.initOnce();



        /********************  点击添加一个新的Brand 显示添加Brand的表单  ********************/
        $scope.showAddNewBrandForm = function(){
            $scope.css.addNewBrand = true;
            $scope.data.newBrand.brand_name = "";
            $scope.data.newBrand.sku_name = "";
            $scope.data.newBrand.othererrorinfo = "";
        };

        $scope.addNewBrand = function(form){

            if (form.$valid) {

                // 自动给品牌名称增加公司前缀
                $scope.data.newBrand.brand_name = $scope.data.currentCompanyNameCharacter + $scope.data.newBrand.brand_name;

                Company.addBrand($scope.data.newBrand).then(function(data, status, headers, config){

                    app.reRun();

                    notify({
                        message  : 'Save Success !',
                        template : notifytemplate.success,
                        position : 'center'
                    });

                    $scope.css.addNewBrand = false;
                }, function(data){
                    form.brandName.$valid = false;
                    form.brandName.$invalid = true;
                    $scope.data.newBrand.othererrorinfo = data.data.message ;

                });
            }
        };


        /********************  点击添加一个新的SKU 显示添加SKU的表单  ********************/
        $scope.showAddNewSkuForm = function(){
            $scope.css.addNewSku = true;
            $scope.data.newSku.sku_name = "";
            $scope.data.newSku.brand_id = "";
            $scope.data.newSku.othererrorinfo = "";
        };

        $scope.addNewSku = function(form){
            $scope.data.newSku.brand_id = $scope.data.currentBrand.d_BrandID;

            if (form.$valid) {
                Company.addSku($scope.data.newSku).then(function(data, status, headers, config){

                    app.reRun();

                    notify({
                        message  : 'Save Success !',
                        template : notifytemplate.success,
                        position : 'center'
                    });

                    $scope.css.addNewSku = false;
                }, function(data){
                    form.skuName.$valid = false;
                    form.skuName.$invalid = true;
                    $scope.data.newSku.othererrorinfo = data.data.message ;

                });
            }
        };

        /********************  删除一个SKU  注意该SKU必须是本回合添加的SKU才可以删除 ********************/
        $scope.delSku = function(sku){
            Company.delSku(sku.d_SKUID, sku.d_BrandID).then(function(data, status, headers, config){

                app.reRun();

                notify({
                    message  : 'Delete Sku Success !',
                    template : notifytemplate.success,
                    position : 'center'
                });
            }, function(data){
                notify({
                    message  : data.data.message,
                    template : notifytemplate.failure,
                    position : 'center'
                });
            });
        };


        /********************  点击选中Brand 或 SKU  ********************/
        $scope.clickBrand = function(brand){
            $scope.css.currentDecisionBrandId = brand._id;
            $scope.data.currentBrand = brand;
            $scope.css.addNewBrand = false;
            $scope.css.addNewSku = false;
        };

        $scope.clickCurrentSku = function(sku){
            $scope.css.skuErrorField = '';
            $scope.data.currentSku = angular.copy(sku);
            Company.getCompanyFutureProjectionCalculator($scope.data.currentSku.d_SKUID).then(function(data, status, headers, config){
                $scope.data.currentCompanyFutureProjectionCalculator = data;

            });
        };


        /********************  更新 SKU  ********************/
        $scope.leaveSkuInput = function(sku, fieldname, fielddata, segmentOrWeek, weekindex){
            $scope.data.currentModifiedSku = {
                brand_id : sku.d_BrandID,
                sku_id : sku.d_SKUID,
                sku_data : {}
            };
            $scope.data.currentModifiedSku.sku_data[fieldname] = fielddata;

            if(fieldname === 'd_TargetConsumerSegment'){
                sku.d_TargetConsumerSegment = segmentOrWeek;
                $scope.data.currentModifiedSku.sku_data[fieldname] = segmentOrWeek;

            }else if(fieldname === 'd_PromotionalEpisodes'){
                if(!angular.isUndefined(weekindex)){
                    // 针对d_PromotionalEpisodes 字段需要特殊处理
                    $scope.data.currentModifiedSku.sku_data[fieldname][weekindex] = segmentOrWeek;
                }
            }else if(fieldname === 'd_FactoryPrice'){
                // 针对 d_FactoryPrice 字段需要特殊处理
                $scope.data.currentModifiedSku.sku_data[fieldname] = $scope.data.currentSku[fieldname];
                $scope.data.currentModifiedSku.sku_data[fieldname][0] = Number(fielddata);
            }else if(fieldname === 'd_AdditionalTradeMargin'){
                // 针对 d_AdditionalTradeMargin 字段需要特殊处理
                $scope.data.currentModifiedSku.sku_data[fieldname][0] = Number(fielddata) / 100;
            }else if(fieldname === 'd_WholesalesBonusRate'){
                // 针对 d_WholesalesBonusRate 字段需要特殊处理
                $scope.data.currentModifiedSku.sku_data[fieldname][0] = Number(fielddata) / 100;
            }



            Company.updateSku($scope.data.currentModifiedSku).then(function(data, status, headers, config){

                app.reRun();

                notify({
                    message : 'Save Success !',
                    template : notifytemplate.success,
                    position : 'center'
                });
            }, function(data){

                $scope.css.skuErrorField = data.data.modifiedField;

                // 使用命令对象
                function showSkuErrorInfo(fieldname) {
                    var names = {
                        'd_Technology': function() {
                            return data.data;
                        },
                        'd_IngredientsQuality': function() {
                            return data.data;
                        },
                        'd_ProductionVolume': function() {
                            return data.data;
                        },
                        'd_FactoryPrice': function() {
                            return data.data;
                        },
                        'd_Advertising': function() {
                            return data.data;
                        },
                        'd_PromotionalBudget': function() {
                            return data.data;
                        },
                        'd_TradeExpenses': function() {
                            return data.data;
                        },
                        'd_AdditionalTradeMargin': function() {
                            return data.data;
                        },
                        'd_WholesalesBonusMinVolume': function() {
                            return data.data;
                        },
                        'd_WholesalesBonusRate': function() {
                            return data.data;
                        }

                    };
                    if (typeof names[fieldname] !== 'function') {
                        return false;
                    }
                    return names[fieldname]();
                }

                $scope.css.skuErrorInfo = showSkuErrorInfo($scope.css.skuErrorField);


                notify({
                    message : data.data.message,
                    template : notifytemplate.failure,
                    position : 'center'
                });
            });
        };

        /********************  更新 Brand  ********************/
        $scope.updateBrand = function(form){
            $scope.data.currentModifiedBrand = {
                brand_id : $scope.data.currentBrand.d_BrandID,
                brand_data : {
                    d_SalesForce : $scope.data.currentBrand.d_SalesForce
                }
            };

            Company.updateBrand($scope.data.currentModifiedBrand).then(function(data, status, headers, config){
                form.brandSalesForce.$valid = true;
                form.brandSalesForce.$invalid = false;

                app.reRun();

                notify({
                    message : 'Save Success !',
                    template : notifytemplate.success,
                    position : 'center'
                });
            }, function(data){
                console.log(data);

                form.brandSalesForce.$valid = false;
                form.brandSalesForce.$invalid = true;

                $scope.css.brandErrorInfo = data.data;

                notify({
                    message : data.data.message,
                    template : notifytemplate.failure,
                    position : 'center'
                });
            });
        };


        /********************  更新 Company  ********************/
        $scope.updateCompany = function(fieldname, form, formfieldname){

            $scope.data.currentModifiedCompany.company_data = {};
            $scope.data.currentModifiedCompany.company_data[fieldname] = $scope.data.currentCompany[fieldname];

            Company.updateCompany($scope.data.currentModifiedCompany).success(function(data, status, headers, config){
                console.log(data);
                $scope.css.additionalBudget = true;


                form[formfieldname].$valid = true;
                form[formfieldname].$invalid = false;

                app.reRun();

                notify({
                    message : 'Save Success !',
                    template : notifytemplate.success,
                    position : 'center'
                });
            }).error(function(data, status, headers, config){

                form[formfieldname].$valid = false;
                form[formfieldname].$invalid = true;

                $scope.css.companyErrorInfo = data;

                notify({
                    message : data.message,
                    template : notifytemplate.failure,
                    position : 'center'
                });
            });
        };




        /********************  get FinalScore  ********************/

        $scope.changeToReportPage = function(){
            $scope.css.menu = 'Report';

            $timeout(function() {
                angular.element('#reportinput').focus();
            });
        };

        $scope.switchTableReportFinalScore = function(period){
            $scope.css.selectFinalScorePeriod = period ;
            Company.getFinalScore(period)
            .then(function(data, status, headers, config){
                $scope.data.tableFinalScore.selectPeriodData = data;
            });
        };


        /********************  获取 Questionnaire  ********************/
        Company.getQuestionnaire().success(function(data, status, headers, config){
            $scope.questionnaire = data;
            $scope.questionnaire.radio_OverallSatisfactionWithThePrograms={
                info:['ChallengeStrategicThinkingAbility','DevelopAnIntegratedPerspective','TestPersonalAbilityOfBalancingRisks','ChallengeLeadershipAndTeamworkAbility','ChallengeAnalysisAndDecisionMakingAbility','SimulationInteresting']
            };
            $scope.questionnaire.radio_TeachingTeams={
                info:['FeedbackOnSimulationDecisions','ExpandingViewAndInspireThinking','Lectures']
            };
            $scope.questionnaire.radio_Products={
                info:['OverallProductUsageExperience','UserInterfaceExperience','EaseOfNavigation','ClarityOfWordsUsed']
            };
            $scope.questionnaire.radio_TeachingSupports={
                info:['Helpfulness','QualityOfTechnicalSupport']
            };
            $scope.questionnaire.radio_MostBenefits={
                info:["JoinProgram","CompanyInHouse","OpenClass"]
            };
        });
        $scope.showQuestionnaire = function(){
            $scope.css.isFeedbackShown=true;
        };

        /********************  更新 Questionnaire  ********************/
        $scope.updateQuestionnaire = function(fieldname , index, form, formfieldname){

            var currentData={
                'location':fieldname,
                'data':$scope.questionnaire[fieldname]
            };

            Company.updateQuestionnaire(currentData).success(function(data, status, headers, config){
                notify({
                    message : 'Save Success !',
                    template : notifytemplate.success,
                    position : 'center'
                });
            },function(data, status, headers, config){
                notify({
                    message : data.message,
                    template : notifytemplate.failure,
                    position : 'center'
                });
            });
        };





        /********************  Search Report   ********************/

        var reports = [
            {
                name : 'Company Status',
                id : 'A1',
                keywords : [ 'Company', 'Company Status', 'Market Share', 'Market Share Value', 'Market Share Volume', 'Lost Sales Volume', 'Numberical Distribution', 'Volume Weighted Distribution', 'Shelf Space', 'Awareness', 'Average Net Market Price', 'Average Display Price', 'Average Market Price', 'Price Ranking Index', 'Target Consumer Segment', 'Value Perception', 'Image Perception', 'Ingredients Quality Index', 'Applied Technology Index', 'Market Sales Value', 'Consumer Price Promotions', 'Market Net Sales Value', 'Number of Out-of-stock Episodes', 'Market Sales Volume', 'Retailers Purchases Volume', 'Shipments to Wholesalers', 'Production Volume', 'Inventory Volume At Manufacturer', 'Inventory Volume At Wholesalers', 'Inventory Volume At Retailers', 'Stocks Cover At Retailers', 'Stocks Cover At Wholesalers', '公司基本信息', '市场份额', '市场销量', '因缺货损失的销售量', '数值分销率', '加权分销率', '货架空间', '知名度', '平均净市场价', '平均陈列价格', '价格排序指数', '目标细分市场', '价值感知', '形象感知', '成分质量指数', '应用的技术指数', '市场销售额', '消费者价格促销', '市场净销售额', '缺货周数', '市场销售量', '零售商购买量', '经销商购买量', '产量', '厂商持有的库存量', '经销商持有的库存量', '零售商持有的库存量', '零售商的库存维持期', '经销商的库存维持期' ]
            },
            {
                name : 'Financial Report',
                id : 'A2',
                keywords : [ 'Financial', 'Financial Report', '"Sales Value', 'Share In Brand Total Sales Value', 'Cost of Goods Sold', 'Obsolete Goods Cost', 'Discontinued Goods Cost', 'Inventory Holding Cost', 'Total Material Cost', 'Gross Profit', 'Gross Profit Margin', 'Share In Brand Gross Profit/Losses', 'Advertising', 'Consumer Promotion Cost', 'Trade Investment', 'Sales Force Cost', 'Additional Trade Margin Cost', 'Volume Discount Cost', 'Total Trade and Marketing Expenses', 'Trade and Marketing Expenses as a (%) of Sales', 'Share of Trade and Marketing Expenses in Brand Total', 'General Expenses', 'Amortisation', 'Operating Profit', 'Operating Profit Margin', 'Share in Brand Operating Profit/Loss', 'Interests', 'Taxes', 'Exceptional Cost/Profit', 'Net Profit', 'Net Profit Margin', 'Share in Brand Net Profit/Loss', 'Production Cost', 'Inventory Value', '财务报告', '销售额', '占该品牌总销售额的份额', '售出商品成本', '处理商品成本', '停产商品成本', '库存持有成本', '总材料成本', '毛利额', '毛利率', '占该品牌 毛利/负毛利 的份额', '广告费用', '促销成本', '零售终端费用', '销售团队成本', '额外零售终端返利', '经销商进货折扣成本', '总的通路和营销费用', '通路和营销费用占销售额的百分比', '占该品牌通路和营销总额的份额', '一般性开支', '摊销费用', '运营利润', '运营利润率', '占该品牌 运营利润/运营亏损 的份额', '利息', '税', '额外开支/利润', '净利润', '净利率', '占该品牌 净利润/净亏损 的份额', '生产成本', '库存价值' ]
            },
            {
                name : 'Inventory Report',
                id : 'A3',
                keywords : [ 'Inventory', 'Inventory Report', 'Close to expire Inventory', 'Previous Inventory', 'Fresh Inventory', 'Total Stock', '库存报告', '将要过期的库存', '以前的库存', '新库存' ]
            },
            {
                name : 'Profitability Evolution',
                id : 'A4',
                keywords : [ 'Evolution', 'Profitability Evolution', 'Manufacturer Sales Value', 'Cost of Goods Sold', 'Inventory Holding', 'Obsolete Goods', 'Discontinued Goods Cost', 'Gross Profit', 'Advertising', 'Consumer Promotions Cost', 'Trade Investment', 'Sales Force Cost', 'Volume Discount Cost', 'Additional Trade Margin Cost', 'Total Trade and Marketing Expenses', 'General Expenses', 'Amortisation', 'Operating Profit', 'Interests', 'Exceptional Cost/Profit', 'Taxes', 'Net Profit', 'Surcharge for supplementary InvestmentBudget', 'Share In Brand Total Sales Value', 'Share In Brand Gross Profit/Losses', 'Share of Trade and Marketing Expenses In Brand Total', 'Share In Brand Operating Profit/Losses', 'Share In Brand Net Profit/Losses', 'Gross Profit Margin', 'Trade and Marketing Expenses as a(%) of Sales', 'General Expenses as a(%) of Sales', 'Operating Profit Margin', 'Net Profit Margin', 'Return on Investment', 'Average Net Market Price', 'Average Wholesales Price', 'Average Manufacturer Price', 'Average Production Cost', 'Market Sales Value', 'Consumer Price Promotions', 'Market Net Sales Value', 'Additional Retailers Margin', 'Wholesalers Bonus Rate', 'Minimal Purchase Qualifying for Bonus', 'Production Cost', 'Inventory Value', '盈利变化', '厂商销售额', '售出商品成本', '库存持有成本', '处理商品成本', '停产商品成本', '毛利额', '广告费用', '促销成本', '零售终端费用', '销售团队成本', '经销商进货折扣成本', '额外零售终端返利', '总的通路和营销费用', '一般性开支', '摊销费用', '运营利润', '利息', '额外开支/利润', '税', '净利润', '追加投资预算产生的额外费用', '净利额', '占该品牌总销售额的份额', '占该品牌 毛利/负毛利 的份额', '占公司通路和营销总费用的份额', '占该品牌 运营利润/运营亏损 的份额', '占该品牌 净利润/净亏损 的份额', '毛利率', '通路和营销费用占销售额的百分比', '一般费用占销售额的百分比', '运营利润率', '净利率', '投资回报率', '平均净市场价', '平均批发价', '平均出厂价', '平均生产成本', '市场销售额', '消费者价格促销', '市场净销售额', '给零售商的额外折扣', '经销商进货折扣率', '享受进货折扣的最低订货量', '生产成本', '库存价值' ]
            },
            {
                name : 'Market Share',
                id : 'B1',
                keywords : [ 'Market Share', 'Market Share in Value', 'Market Share in Volume', 'Mind Space Share', 'Shelf Space Share', '市场份额', '市场份额 （按销售额计%)', '市场份额 （按销量计%)', '思维空间份额', '货架空间份额' ]
            },
            {
                name : 'Competitor Intelligence',
                id : 'B2',
                keywords : [ 'Intelligence', 'Competitor Intelligence', 'Competitor', 'Technology', 'Acquired Production and Logistics Efficiency', 'Acquired Production Planning Flexibility', 'Available Technology Level', 'Marketing & Sales', 'Additional Trade Margin Cost', 'Advertising', 'Consumer Promotions Cost', 'Retailers Purchase Volume', 'Sales Force Cost', 'Shipments to Wholesalers', 'Trade Investments', 'Volume Discount Cost', 'Operations', 'Capacity Utilisation Rate', 'Inventory Volume at Manufacturer', 'Inventory Volume at Retailers', 'Inventory Volume at Wholesalers', 'Next Period Available Prod.Capacity', 'Production Volume', 'Investments', 'Investment to Improve Technology Level', 'Investment to Increase Production Efficiency', '竞争对手情报', '技术', '当前拥有的生产效率', '当前拥有的生产灵活度', '最高技术水平', '市场营销和销售', '额外零售终端返利', '广告费用', '促销成本', '零售商购买量', '销售团队成本', '经销商购买量', '零售终端费用', '经销商进货折扣成本', '操作', '产能利用率', '厂商持有的库存量', '零售商持有的库存量', '经销商持有的库存量', '下一阶段产能', '产量', '投资', '技术水平投资', '生产效率投资' ]
            },
            {
                name : 'Investment & Profits',
                id : 'B3',
                keywords : [ 'Investment and Profits', 'Investment', 'Profit', 'Total Investment', 'Net Profit By Companies', 'Return on Investment', 'Investment Versus Budget', '投资与利润', '预计的当期投资总额', '公司净利额', '投资回报率', '投资占预算比例' ]
            },
            {
                name : 'Market Sales & Inventory',
                id : 'B4',
                keywords : [ 'Market Sales & Inventory Report', 'Market Sales', 'Inventory', 'Market Sales Value', 'Market Sales Volume', 'Total Inventory at Factory', 'Total Inventory at Trade', '销售与库存状况', '市场销售额', '市场销售量', '工厂中的库存量', '渠道中的库存量' ]
            },
            {
                name : 'Segment Leader Top5',
                id : 'C1',
                keywords : [ 'Segment', 'Segment Leader', 'Segment Leader Top 5', '细分市场领导者' ]
            },
            {
                name : 'Perception Map',
                id : 'C2',
                keywords : [ 'Perception', 'Perception Map', 'Value Perception', 'Image Perception', '感知图', '价值感知', '形象感知' ]
            },
            {
                name : 'Segment Distributions',
                id : 'C3',
                keywords : [ 'Distributions', 'Segment Distributions', 'Market Share Value', 'Market Share Volume', 'Market Sales Value', 'Market Sales Volume', 'Average Net Market Price', 'Value Perception', 'Image Perception', '细分市场数据', '市场份额', '市场销售额', '市场销售量', '平均净市场价', '价值感知', '形象感知' ]
            },
            {
                name : 'Market Evolution',
                id : 'C4',
                keywords : [ 'Evolution', 'Market Evolution', 'Growth Rate', 'Growth Rate In Volume', 'Growth Rate In Value', 'Net Market Price', 'Segment Value Share In Total Market', '市场演变趋势', '基于销量的增长率', '基于销售额的增长率', '净市场价', '细分市场占总市场的销售份额（' ]
            },
            {
                name : 'Market Trends',
                id : 'C5',
                keywords : [ 'Trends', 'Market Trends', 'Market Figures', 'Average Display Price', 'Average Net Market Price', 'Brand Awareness', 'Image Perception', 'Market Net Sales Value', 'Market Net Sales Volume', 'Market Share', 'Market Share', 'Miscellaneous', 'Lost Sales Volume', 'Numerical Distribution', 'Total Inventory at Trade', 'Price Ranking Index', 'Shelf Space', 'Value Share', 'Value Share by Segment', 'Volume Share', 'Volume Share by Segment', '市场趋势', '市场数据', '平均陈列价格', '平均净市场价', '品牌知名度', '形象感知', '市场净销售额', '市场销量', '市场份额', '其他', '因缺货损失的销售量', '数值分销率', '渠道中的库存量', '价格排序指数', '货架空间', '占细分市场销售额' ]
            },
            {
                name : 'Market Indicator',
                id : 'C6',
                keywords : [ 'Indicator', 'Market Indiciator', 'Corporate Tax Rate', 'Inflation Rate', 'Deposit Rate', 'Borrowing Rate', 'Additional Investment Budget Surcharge Rate', 'Inventory Holding Cost', 'Obsolete Goods Cost', 'Discontinued Goods Cost', '宏观市场参数', '公司税率', '通货膨胀率', '存款利率', '借贷利率', '其他投资预算附加费率', '库存持有成本', '过期商品成本', '停产商品成' ]
            }
        ];

        $scope.searchReport = function(){

            $scope.css.currentSearchReportName = [];
            if($scope.data.reportName !== ''){

                angular.forEach(reports, function(child){

                    var flagHaveThisReport = false;
                    //判断是否该报告已经被搜索到了, 如果没搜索到在继续循环关键字.
                    if($scope.css.currentSearchReportName.length > 0){

                        angular.forEach($scope.css.currentSearchReportName, function(reportid){
                            if(reportid === child.id){
                                flagHaveThisReport = true;
                            }
                        });
                    }

                    if(!flagHaveThisReport){
                        angular.forEach(child.keywords, function(keyword){

                            if(!flagHaveThisReport){
                                if(keyword.toLowerCase().indexOf($scope.data.reportName) > -1){
                                    $scope.css.currentSearchReportName.push(child.id);
                                    flagHaveThisReport = true;
                                }
                            }
                        });

                    }

                });
            }
        };









        /********************  Report Comparison   ********************/
        $scope.showComparisonPage = function(){
            /*Score 页面跳转到Report页面*/
            $scope.css.menu = 'Report';

            $scope.css.comparisonPage = !$scope.css.comparisonPage;
        };

        $scope.startDragReport = function(reportid, event1){
            $scope.css.dragSourceReportId = reportid;
            $scope.css.dragTargetBoxId = '';
            $scope.css.dragReportFlag = true;

            // Prevent default dragging of selected content
            event1.preventDefault();

            var moveSourceDom = angular.element(event1.currentTarget);

            var movingDom = angular.element('.dragReportMovingBox');
            movingDom.empty().append(moveSourceDom.clone());

            $scope.css.dragReportPosition.top = event.clientY + 10;
            $scope.css.dragReportPosition.left = event.clientX - 120;


            $document.on($scope.css.dragEvent.moveEvents, onReportMove);
            $document.on($scope.css.dragEvent.releaseEvents, onReportRelease);
        };

        function onReportMove(event) {
            $scope.$apply(function () {
                $scope.css.dragReportPosition.top = event.clientY + 10;
                $scope.css.dragReportPosition.left = event.clientX - 120;
            });
        }

        function onReportRelease() {
            $scope.$apply(function () {
                var targetDom = {};
                var targetDomContent = {};
                if($scope.css.dragTargetBoxId !== ''){

                    if($scope.css.dragTargetBoxId === 'comparisonBoxLeft'){
                        $scope.css.dragHaveLeftReport = $scope.css.dragSourceReportId;
                    }else{
                        $scope.css.dragHaveRightReport = $scope.css.dragSourceReportId;
                    }
                }

                $scope.css.dragReportFlag = false;
                $scope.css.dragSourceReportId = '';
                $scope.css.dragTargetBoxId = '';

            });

            $document.off($scope.css.dragEvent.moveEvents, onReportMove);
            $document.off($scope.css.dragEvent.releaseEvents, onReportRelease);
        }

        $scope.enterComparisonBox = function(targetboxid){

            if(targetboxid === ''){
                $scope.css.dragTargetBoxId = '';
            }else{
                $scope.css.dragTargetBoxId = 'comparisonBox' +  targetboxid;
            }

        };

    }]);





}());

/**
 * Created by jinwyp on 4/28/14.
 */

/**
 * recommended
 *
 * no globals are left behind
 */


(function () {
    'use strict';



    /********************  Create New Module For Controllers ********************/
    angular.module('marksimoslogin', ['pascalprecht.translate', 'marksimos.model', 'marksimos.websitecomponent',  'marksimos.filter', 'marksimos.translation']);



    /********************  Use This Module To Set New Controllers  ********************/
    angular.module('marksimoslogin').controller('userLoginController', ['$scope', '$http', '$window', 'Student', function  ($scope, $http, $window, Student) {
        $scope.css = {
            newUser : {
                passwordPrompt : false
            }
        };

        $scope.data = {
            newUser : {
                email : '',
                password : ''
            }
        };


        $scope.login = function(form){
            if(form.$valid){
                Student.login($scope.data.newUser).success(function(data, status, headers, config){

                    $window.location.href = "/marksimos/intro" ;

                }).error(function(data, status, headers, config){
                    form.password.$valid = false;
                    form.password.$invalid = true;
                    $scope.css.newUser.passwordPrompt = true;
                    console.log(data);
                });
            }
        };

    }]);




    angular.module('marksimoslogin').controller('userIntroController',['$scope', '$http', '$window', 'Student',  'Company', function($scope, $http, $window, Student, Company) {

        $scope.css = {
            showBox : 'seminar'
        };

        $scope.data = {
            brandNumber : 0,
            skuNumber : 0,
            currentStudent : null,
            currentStudentSeminar : null,
            currentCompany : null,
            seminars : [],
            selectSeminar : {
                seminar_id : 0
            }
        };

        $scope.initSeminar = function() {


            Student.getStudent().then(function(data, status, headers, config){
                $scope.data.currentStudent = data;
            });

            Student.getSeminar().then(function(data, status, headers, config){
                $scope.data.seminars = data;
            });
        };

        $scope.initSeminar();



        $scope.chooseSeminar = function(seminarid){

            $scope.data.selectSeminar.seminar_id = seminarid;

            if($scope.data.selectSeminar.seminar_id !== 0 ){
                $http.get('/marksimos/api/choose_seminar', {params : $scope.data.selectSeminar}).success(function(data, status, headers, config){
                    $scope.css.showBox = 'whoami';


                    Company.getCurrentStudent().then(function(data, status, headers, config){
                        $scope.data.currentStudentSeminar = data;
                    });

                    Company.getCompany().then(function(data, status, headers, config){
                        angular.forEach(data.d_BrandsDecisions, function(brand){
                            $scope.data.brandNumber++;

                            angular.forEach(brand.d_SKUsDecisions, function(sku){
                                $scope.data.skuNumber++;
                            });
                        });

                        $scope.data.currentCompany = data;
                    });

                }).error(function(data, status, headers, config){
                    console.log(data);
                });
            }
        };

        $scope.whoamiNext = function(){
            $window.location.href = "/marksimos/home" ;
        };

    }]);






}());
/**
 * Created by jinwyp on 5/20/14.
 */

/**
 * recommended
 *
 * no globals are left behind
 */


(function () {
    'use strict';


    /********************  Create New Module For Directive ********************/
    angular.module('marksimos.commoncomponent', ['marksimos.templates', 'pascalprecht.translate']);


    /********************  Use This Module To Set New Controllers  ********************/

    /********************  Form Input ********************/
    angular.module('marksimos.commoncomponent').directive('usernameInput', function() {
        return {
            scope: {
                labeltext : '@',
                data : '=',
                placeholdertext : '@',
                formname : '=',
                required : '=',
                requirederrorinfo : '@',
                minlength : '=',
                minlengtherrorinfo : '@',
                maxlength : '=',
                maxlengtherrorinfo : '@'

            },
            restrict: 'AE',
            templateUrl: 'formusernameinput.html',
            link: function (scope, element, attrs) {

                if(angular.isUndefined(scope.required)  ){
                    scope.required = true;
                    scope.requirederrorinfo = 'username is required';
                }

                if(angular.isUndefined(scope.minlength)  ){
                    scope.minlength = 6;
                    scope.minlengtherrorinfo = 'username must be at least 6 characters';
                }

                if(angular.isUndefined(scope.required)  ){
                    scope.maxlength = 20;
                    scope.maxlengtherrorinfo = 'username is a maximum of 20 characters';
                }

            }
        };
    });


    angular.module('marksimos.commoncomponent').directive('emailInput', function() {
        return {
            scope: {
                labeltext : '@',
                data : '=',
                placeholdertext : '@',
                formname : '=',
                required : '=',
                requirederrorinfo : '@',
                emailerrorinfo : '@',
                maxlength : '=',
                maxlengtherrorinfo : '@'

            },
            restrict: 'AE',
            templateUrl: 'formemailinput.html',
            link: function (scope, element, attrs) {

                if(angular.isUndefined(scope.required)  ){
                    scope.required = true;
                    scope.requirederrorinfo = 'Email is required';
                    scope.emailerrorinfo = "";
                }


                if(angular.isUndefined(scope.required)  ){
                    scope.maxlength = 50;
                    scope.maxlengtherrorinfo = 'Email is a maximum of 50 characters';
                }

            }
        };
    });


    angular.module('marksimos.commoncomponent').directive('passwordInput', function() {
        return {
            scope: {
                labeltext : '@',
                data : '=',
                placeholdertext : '@',
                formname : '=',
                required : '=',
                requirederrorinfo : '@',
                minlength : '=',
                minlengtherrorinfo : '@',
                maxlength : '=',
                maxlengtherrorinfo : '@'

            },
            restrict: 'AE',
            templateUrl: 'formpasswordinput.html',
            link: function (scope, element, attrs) {

                if(angular.isUndefined(scope.required)  ){
                    scope.required = true;
                    scope.requirederrorinfo = 'Password is required';
                }

                if(angular.isUndefined(scope.minlength)  ){
                    scope.minlength = 6;
                    scope.minlengtherrorinfo = 'Password must be at least 6 characters';
                }

                if(angular.isUndefined(scope.required)  ){
                    scope.maxlength = 20;
                    scope.maxlengtherrorinfo = 'Password is a maximum of 20 characters';
                }

            }
        };
    });


    angular.module('marksimos.commoncomponent').directive('phoneInput', function() {
        return {
            scope: {
                labeltext : '@',
                data : '=',
                placeholdertext : '@',
                formname : '=',
                required : '=',
                requirederrorinfo : '@',
                minlength : '=',
                minlengtherrorinfo : '@',
                maxlength : '=',
                maxlengtherrorinfo : '@'
            },
            restrict: 'AE',
            templateUrl: 'formphoneinput.html',
            link: function (scope, element, attrs) {

                if(angular.isUndefined(scope.required)  ){
                    scope.required = true;
                    scope.requirederrorinfo = 'Cell Phone Number is required';
                }

                if(angular.isUndefined(scope.minlength)  ){
                    scope.minlength = 11;
                    scope.minlengtherrorinfo = 'Cell Phone Number must be at least 11 characters';
                }

                if(angular.isUndefined(scope.required)  ){
                    scope.maxlength = 13;
                    scope.maxlengtherrorinfo = 'Cell Phone Number is a maximum of 13 characters';
                }

            }
        };
    });


    angular.module('marksimos.commoncomponent').directive('idcardInput', function() {
        return {
            scope: {
                labeltext : '@',
                data : '=',
                placeholdertext : '@',
                formname : '=',
                required : '=',
                requirederrorinfo : '@',
                minlength : '=',
                minlengtherrorinfo : '@',
                maxlength : '=',
                maxlengtherrorinfo : '@'

            },
            restrict: 'AE',
            templateUrl: 'formidcardinput.html',
            link: function (scope, element, attrs) {

                if(angular.isUndefined(scope.required)  ){
                    scope.required = true;
                    scope.requirederrorinfo = 'ID Card is required';
                }

                if(angular.isUndefined(scope.minlength)  ){
                    scope.minlength = 17;
                    scope.minlengtherrorinfo = 'ID Card must be at least 17 characters';
                }

                if(angular.isUndefined(scope.required)  ){
                    scope.maxlength = 24;
                    scope.maxlengtherrorinfo = 'ID Card is a maximum of 24 characters';
                }

            }
        };
    });


    angular.module('marksimos.commoncomponent').directive('licenceInput', function() {
        return {
            scope: {
                labeltext : '@',
                data : '=',
                placeholdertext : '@',
                formname : '=',
                required : '=',
                requirederrorinfo : '@',
                numbererrorinfo : '@',
                min : '=',
                minerrorinfo : '@',
                max : '=',
                maxerrorinfo : '@',
                maxlength : '=',
                maxlengtherrorinfo : '@'

            },
            restrict: 'AE',
            templateUrl: 'formlicenceinput.html',
            link: function (scope, element, attrs) {

                if(angular.isUndefined(scope.required)  ){
                    scope.required = true;
                    scope.requirederrorinfo = 'Number is required';
                    scope.numbererrorinfo = 'Must be numeric character';
                }

                if(angular.isUndefined(scope.min)  ){
                    scope.min = 1;
                    scope.minerrorinfo = 'Number must be greater than 0';
                }

                if(angular.isUndefined(scope.max)  ){
                    scope.max = 1000;
                    scope.maxerrorinfo = 'Number must be less than 1000';
                }

                if(angular.isUndefined(scope.required)  ){
                    scope.maxlength = 100;
                    scope.maxlengtherrorinfo = 'Number is a maximum of 100 characters';
                }

            }
        };
    });


    angular.module('marksimos.commoncomponent').directive('roundInput', function() {
        return {
            scope: {
                labeltext : '@',
                data : '=',
                placeholdertext : '@',
                formname : '=',
                required : '=',
                requirederrorinfo : '@',
                numbererrorinfo : '@',
                min : '=',
                minerrorinfo : '@',
                max : '=',
                maxerrorinfo : '@',
                maxlength : '=',
                maxlengtherrorinfo : '@'

            },
            restrict: 'AE',
            templateUrl: 'formroundinput.html',
            link: function (scope, element, attrs) {

                if(angular.isUndefined(scope.required)  ){
                    scope.required = true;
                    scope.requirederrorinfo = 'Number is required';
                    scope.numbererrorinfo = 'Must be numeric character';
                }

                if(angular.isUndefined(scope.min)  ){
                    scope.min = 1;
                    scope.minerrorinfo = 'Number must be greater than 0';
                }

                if(angular.isUndefined(scope.max)  ){
                    scope.max = 9;
                    scope.maxerrorinfo = 'Number must be less than 9';
                }

                if(angular.isUndefined(scope.required)  ){
                    scope.maxlength = 100;
                    scope.maxlengtherrorinfo = 'Number is a maximum of 100 characters';
                }

            }
        };
    });


    angular.module('marksimos.commoncomponent').directive('textFormInput', function() {
        return {
            scope: {
                type        : '@',
                name        : '@',
                label       : '@',
                labelclass  : '@',
                inputclass  : '@',
                inputgroupprefix  : '@',
                placeholder : '@',
                data        : '=',

                required          : '=',
                requirederrorinfo : '@',

                minlength          : '@',
                minlengtherrorinfo : '@',
                maxlength          : '@',
                maxlengtherrorinfo : '@',

                numbererrorinfo : '@',
                min             : '@',
                max             : '@',

                othererrorinfo : '='


            },
            restrict: 'AE',
            require: '^form',
            template: function(tElement, tAttrs) {
                var labelclass = tAttrs.labelclass || 'col-sm-4';
                var inputclass = tAttrs.inputclass || 'col-sm-3';

                var type = tAttrs.type || 'text';

                var required, requirederrorinfo, minlength, minlengtherrorinfo, maxlength, maxlengtherrorinfo, min, max, numbererrorinfo;

                required = tAttrs.hasOwnProperty('required') ? 'ng-required="' + tAttrs.required + '"' : "";
                requirederrorinfo = tAttrs.hasOwnProperty('requirederrorinfo') ? tAttrs.requirederrorinfo  : "field is required";

                if (type === 'checkbox'){

                    var tplcheckbox = '<div class="form-group" ng-class="{ \'has-success\':form.$dirty && form.$valid , \'has-error\': form.$dirty && form.$invalid}">' +
                                        '<label class="' + labelclass + ' control-label" for="' + tAttrs.name + '" >' + tAttrs.label + '</label>' +
                                            '<div class="' + inputclass + '">' +
                                                '<div class="checkbox">' +
                                                '<label>' +
                                                    '<input type="' + type + '" id="ID' + tAttrs.name +'" name="' + tAttrs.name +'" ng-model="data" ' + required + '>' +
                                                '</label>' +
                                            '</div>' +
                                        '</div>' +
                                        '</div>';

                    return tplcheckbox;

                }else if(type === 'number'){
                    min = tAttrs.hasOwnProperty('min') ? 'min="' + tAttrs.min + '"' : "";
                    max = tAttrs.hasOwnProperty('max') ? 'max="' + tAttrs.max + '"' : "";
                    numbererrorinfo = tAttrs.hasOwnProperty('numbererrorinfo') ? tAttrs.numbererrorinfo  : 'must be in range ' + tAttrs.min + ' to '+ tAttrs.max;

                    minlength = "";
                    minlengtherrorinfo = "";
                    maxlength = "";
                    maxlengtherrorinfo = "";

                }else{
                    min = "";
                    max = "";
                    numbererrorinfo = "";

                    minlength = tAttrs.hasOwnProperty('minlength') ? 'ng-minlength="' + tAttrs.minlength + '"' : "";
                    minlengtherrorinfo = tAttrs.hasOwnProperty('minlengtherrorinfo') ? tAttrs.minlengtherrorinfo  : 'field must be at least ' + tAttrs.minlength + ' characters';

                    maxlength = tAttrs.hasOwnProperty('maxlength') ? 'ng-maxlength="' + tAttrs.maxlength + '"' : "";
                    maxlengtherrorinfo = tAttrs.hasOwnProperty('maxlengtherrorinfo') ? tAttrs.maxlengtherrorinfo  : 'field is a maximum of ' + tAttrs.maxlength + ' characters';
                }

                var tpltext = '<div class="form-group has-feedback" ng-class="{ \'has-success\':form.$dirty && form.$valid , \'has-error\': form.$dirty && form.$invalid}">' +
                                '<label class="' + labelclass + ' control-label" for="' + tAttrs.name + '" >' + tAttrs.label + '</label>' +
                                '<div class=" ' + inputclass + '">'  +
                                    '<span class="form-input-prefix" ng-if="inputgroupprefix">{{inputgroupprefix}}</span>' +
                                    '<input type="' + type + '" class="form-control" id="ID' + tAttrs.name +'" name="' + tAttrs.name +'" placeholder="{{placeholder}}" ng-model="data" ' + required + minlength + maxlength + min + max + '>' +
                                    '<span ng-if="form.$dirty && form.$valid" class="glyphicon glyphicon-ok form-control-feedback"></span>' +
                                    '<span ng-if="form.$dirty && form.$invalid" class="glyphicon glyphicon-remove form-control-feedback"></span>' +
                                '</div>' +
                                '<label class="control-label" ng-if="form.$dirty && form.$error.required && !form.$error.number"><i class="fa fa-times-circle-o"></i> ' + requirederrorinfo + ' </label>' +
                                '<label class="control-label" ng-if="form.$dirty && form.$error.minlength" ><i class="fa fa-times-circle-o"></i>' + minlengtherrorinfo + '</label>' +
                                '<label class="control-label" ng-if="form.$dirty && form.$error.maxlength" ><i class="fa fa-times-circle-o"></i>' + maxlengtherrorinfo + '</label>' +
                                '<label class="control-label" ng-if="form.$dirty && form.$error.number" ><i class="fa fa-times-circle-o"></i>must be a number</label>' +
                                '<label class="control-label" ng-if="form.$dirty && form.$error.min || form.$dirty && form.$error.max " ><i class="fa fa-times-circle-o"></i>' + numbererrorinfo + '</label>' +
                                '<label class="control-label" ng-if="form.$invalid" ><i class="fa fa-times-circle-o"></i>{{othererrorinfo}}</label>' +

                                '</div>';

                return tpltext;

            },

            compile: function ( tElement, tAttrs) {

                return function (scope, element, attributes, formController) {
                    scope.form = formController[scope.name];

                    scope.inputgroupprefix = angular.isUndefined(scope.inputgroupprefix) ? ""  : scope.inputgroupprefix;
                };
            }
        };
    });



    // Prevent the backspace key from navigating back.
    angular.module('marksimos.commoncomponent').directive('preventBackspaceNavigateBack', ['$document', function($document) {
        return {
            restrict : 'A',
            link  : function (element, attrs) {

                $(document).unbind('keydown').bind('keydown', function (event) {

                    var doPrevent = true;
                    if (event.keyCode === 8) {

                        var d = event.srcElement || event.target;

                        // 注释, 此处很Bug 会很纠结
                        if ((d.tagName.toUpperCase() === 'INPUT' &&
                            (
                                d.type.toUpperCase() === 'TEXT' ||
                                d.type.toUpperCase() === 'PASSWORD' ||
                                d.type.toUpperCase() === 'NUMBER' ||
                                d.type.toUpperCase() === 'FILE' ||
                                d.type.toUpperCase() === 'EMAIL' ||
                                d.type.toUpperCase() === 'SEARCH' ||
                                d.type.toUpperCase() === 'DATE' )
                            ) ||
                            d.tagName.toUpperCase() === 'TEXTAREA') {
                            doPrevent = d.readOnly || d.disabled;
                        }else {
                            doPrevent = true;
                        }

                        if (doPrevent) {
                            event.preventDefault();
                        }
                    }

                });

            }

        };
    }]
    );



}());
/**
 * Created by jinwyp on 6/26/14.
 */

/**
 * recommended
 *
 * no globals are left behind
 */


(function () {
    'use strict';

    angular.module('marksimos.config', []);



    /********************  解决提交请求$http 时出现 "Provisional headers are shown angular"(实际上并没有采用,而是后端出的问题导致了该问题) ********************/
    /********************  http://stackoverflow.com/questions/21630534/node-js-angular-js-caution-provisional-headers-are-shown ********************/


    angular.module('marksimos.config').config(['$httpProvider', function ($httpProvider) {
        //Reset headers to avoid OPTIONS request (aka preflight)
        $httpProvider.defaults.headers.common = {};
        $httpProvider.defaults.headers.post = {};
        $httpProvider.defaults.headers.put = {};
        $httpProvider.defaults.headers.patch = {};
    }]);



}());
angular.module("marksimos.templates", []).run(["$templateCache", function($templateCache) {$templateCache.put("formemailinput.html","<div class=\"form-group\" ng-class=\"{\'has-success\':formname.email.$dirty && formname.email.$valid, \'has-error\': formname.email.$dirty && formname.email.$invalid}\"><label for=\"inputEmail\" class=\"col-sm-2 control-label\">{{labeltext}}</label><div class=\"col-sm-4\"><input type=\"email\" class=\"form-control\" id=\"inputEmail\" name=\"email\" placeholder=\"{{placeholdertext}}\" ng-model=\"data\" ng-required=\"{{required}}\" ng-maxlength=\"{{maxlength}}\"></div><label class=\"control-label\" ng-show=\"formname.email.$dirty && formname.email.$error.required\"><i class=\"fa fa-times-circle-o\"></i> {{requirederrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.email.$dirty && formname.email.$error.email\"><i class=\"fa fa-times-circle-o\"></i> {{emailerrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.email.$dirty && formname.email.$error.maxlength\"><i class=\"fa fa-times-circle-o\"></i> {{maxlengtherrorinfo}}</label></div>");
$templateCache.put("formidcardinput.html","<div class=\"form-group\" ng-class=\"{\'has-success\':formname.idcard.$dirty && formname.idcard.$valid, \'has-error\': formname.idcard.$dirty && formname.idcard.$invalid}\"><label for=\"inputIdcard\" class=\"col-sm-2 control-label\">{{labeltext}}</label><div class=\"col-sm-4\"><input type=\"text\" class=\"form-control\" id=\"inputIdcard\" name=\"idcard\" placeholder=\"{{placeholdertext}}\" ng-model=\"data\" ng-required=\"{{required}}\" ng-minlength=\"{{minlength}}\" ng-maxlength=\"{{maxlength}}\"></div><label class=\"control-label\" ng-show=\"formname.idcard.$dirty && formname.idcard.$error.required\"><i class=\"fa fa-times-circle-o\"></i> {{requirederrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.idcard.$dirty && formname.idcard.$error.minlength\"><i class=\"fa fa-times-circle-o\"></i> {{minlengtherrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.idcard.$dirty && formname.idcard.$error.maxlength\"><i class=\"fa fa-times-circle-o\"></i> {{maxlengtherrorinfo}}</label></div>");
$templateCache.put("formlicenceinput.html","<div class=\"form-group\" ng-class=\"{\'has-success\':formname.licence.$dirty && formname.licence.$valid, \'has-error\': formname.licence.$dirty && formname.licence.$invalid}\"><label for=\"inputLicence\" class=\"col-sm-2 control-label\">{{labeltext}}</label><div class=\"col-sm-4\"><input type=\"number\" class=\"form-control\" id=\"inputLicence\" name=\"licence\" placeholder=\"{{placeholdertext}}\" ng-model=\"data\" ng-required=\"{{required}}\" min=\"{{min}}\" max=\"{{max}}\" ng-maxlength=\"{{maxlength}}\"></div><label class=\"control-label\" ng-show=\"formname.licence.$dirty && formname.licence.$error.required\"><i class=\"fa fa-times-circle-o\"></i> {{requirederrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.licence.$dirty && formname.licence.$error.number\"><i class=\"fa fa-times-circle-o\"></i> {{numbererrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.licence.$dirty && formname.licence.$error.min\"><i class=\"fa fa-times-circle-o\"></i> {{minerrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.licence.$dirty && formname.licence.$error.max\"><i class=\"fa fa-times-circle-o\"></i> {{maxerrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.licence.$dirty && formname.licence.$error.minlength\"><i class=\"fa fa-times-circle-o\"></i> {{minlengtherrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.licence.$dirty && formname.licence.$error.maxlength\"><i class=\"fa fa-times-circle-o\"></i> {{maxlengtherrorinfo}}</label></div>");
$templateCache.put("formpasswordinput.html","<div class=\"form-group\" ng-class=\"{\'has-success\':formname.password.$dirty && formname.password.$valid, \'has-error\': formname.password.$dirty && formname.password.$invalid}\"><label for=\"inputPassword\" class=\"col-sm-2 control-label\">{{labeltext}}</label><div class=\"col-sm-4\"><input type=\"password\" class=\"form-control\" id=\"inputPassword\" name=\"password\" placeholder=\"{{placeholdertext}}\" ng-model=\"data\" ng-required=\"{{required}}\" ng-minlength=\"{{minlength}}\" ng-maxlength=\"{{maxlength}}\"></div><label class=\"control-label\" ng-show=\"formname.password.$dirty && formname.password.$error.required\"><i class=\"fa fa-times-circle-o\"></i> {{requirederrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.password.$dirty && formname.password.$error.minlength\"><i class=\"fa fa-times-circle-o\"></i> {{minlengtherrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.password.$dirty && formname.password.$error.maxlength\"><i class=\"fa fa-times-circle-o\"></i> {{maxlengtherrorinfo}}</label></div>");
$templateCache.put("formphoneinput.html","<div class=\"form-group\" ng-class=\"{\'has-success\':formname.phone.$dirty && formname.phone.$valid, \'has-error\': formname.phone.$dirty && formname.phone.$invalid}\"><label for=\"inputPhone\" class=\"col-sm-2 control-label\">{{labeltext}}</label><div class=\"col-sm-4\"><input type=\"text\" class=\"form-control\" id=\"inputPhone\" name=\"phone\" placeholder=\"{{placeholdertext}}\" ng-model=\"data\" ng-required=\"{{required}}\" ng-minlength=\"{{minlength}}\" ng-maxlength=\"{{maxlength}}\"></div><label class=\"control-label\" ng-show=\"formname.phone.$dirty && formname.phone.$error.required\"><i class=\"fa fa-times-circle-o\"></i> {{requirederrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.phone.$dirty && formname.phone.$error.minlength\"><i class=\"fa fa-times-circle-o\"></i> {{minlengtherrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.phone.$dirty && formname.phone.$error.maxlength\"><i class=\"fa fa-times-circle-o\"></i> {{maxlengtherrorinfo}}</label></div>");
$templateCache.put("formroundinput.html","<div class=\"form-group\" ng-class=\"{\'has-success\':formname.round.$dirty && formname.round.$valid, \'has-error\': formname.round.$dirty && formname.round.$invalid}\"><label for=\"inputRound\" class=\"col-sm-2 control-label\">{{labeltext}}</label><div class=\"col-sm-4\"><input type=\"number\" class=\"form-control\" id=\"inputRound\" name=\"round\" placeholder=\"{{placeholdertext}}\" ng-model=\"data\" ng-required=\"{{required}}\" min=\"{{min}}\" max=\"{{max}}\" ng-maxlength=\"{{maxlength}}\"></div><label class=\"control-label\" ng-show=\"formname.round.$dirty && formname.round.$error.required\"><i class=\"fa fa-times-circle-o\"></i> {{requirederrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.round.$dirty && formname.round.$error.number\"><i class=\"fa fa-times-circle-o\"></i> {{numbererrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.round.$dirty && formname.round.$error.min\"><i class=\"fa fa-times-circle-o\"></i> {{minerrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.round.$dirty && formname.round.$error.max\"><i class=\"fa fa-times-circle-o\"></i> {{maxerrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.round.$dirty && formname.round.$error.minlength\"><i class=\"fa fa-times-circle-o\"></i> {{minlengtherrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.round.$dirty && formname.round.$error.maxlength\"><i class=\"fa fa-times-circle-o\"></i> {{maxlengtherrorinfo}}</label></div>");
$templateCache.put("formusernameinput.html","<div class=\"form-group\" ng-class=\"{\'has-success\':formname.username.$dirty && formname.username.$valid, \'has-error\': formname.username.$dirty && formname.username.$invalid}\"><label for=\"inputUserName\" class=\"col-sm-2 control-label\">{{labeltext}}</label><div class=\"col-sm-4\"><input type=\"text\" class=\"form-control\" id=\"inputUserName\" name=\"username\" placeholder=\"{{placeholdertext}}\" ng-model=\"data\" ng-required=\"{{required}}\" ng-minlength=\"{{minlength}}\" ng-maxlength=\"{{maxlength}}\"></div><label class=\"control-label\" ng-show=\"formname.username.$dirty && formname.username.$error.required\"><i class=\"fa fa-times-circle-o\"></i> {{requirederrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.username.$dirty && formname.username.$error.minlength\"><i class=\"fa fa-times-circle-o\"></i> {{minlengtherrorinfo}}</label> <label class=\"control-label\" ng-show=\"formname.username.$dirty && formname.username.$error.maxlength\"><i class=\"fa fa-times-circle-o\"></i> {{maxlengtherrorinfo}}</label></div>");
$templateCache.put("tablereportcompanystatusbrand.html","<table class=\"table table-striped table-bordered table-hover \"><thead><tr><th>{{\'ReportCompanyStatusSKUQuarter\' | translate}}</th><th ng-repeat=\"quarter in data\">{{\'ReportCompanyStatusSKUQuarter\' | translate}} {{quarter.period}}</th></tr></thead><tbody><tr><td>{{\'ReportCompanyStatusBrandMarketShareValue\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketShareValue | number : 2}}%</td></tr><tr><td>{{\'ReportCompanyStatusBrandMarketShareVolume\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketShareVolume | number : 2}}%</td></tr><tr><td>{{\'ReportCompanyStatusBrandMarketSalesVolumeStd\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketSalesVolumeStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusBrandLostSalesVolumeDueToOOSStd\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.lostSalesVolumeDueToOOSStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusBrandNumericalDistribution\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.numbericalDistribution | number : 2}}%</td></tr><tr><td>{{\'ReportCompanyStatusBrandVolumeWeightedDistribution\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.volumeWeightedDistribution | number : 2}}%</td></tr><tr><td>{{\'ReportCompanyStatusBrandShelfSpace\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.shelfSpace | number : 2}}%</td></tr><tr><td>{{\'ReportCompanyStatusBrandAwareness\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.awareness | number : 2}}%</td></tr><tr><td>{{\'ReportCompanyStatusBrandAverageNetMarketPrice\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.averageNetMarketPriceStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusBrandAverageDisplayPrice\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.averageDisplayPriceStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusBrandPriceRankingIndex\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.priceRankingIndex | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusBrandValuePerception\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.valuePerception | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusBrandImagePerception\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.imagePerception | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusBrandIngredientsQualityIndex\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.ingredientsQualityIndex | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusBrandAppliedTechnologyIndex\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.appliedTechnologyIndex | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportCompanyStatusBrandMarketSalesValue\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketSalesValue | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusBrandConsumerPricePromotions\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.consumerPricePromotions | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusBrandMarketNetSalesValue\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketNetSalesValue | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportCompanyStatusBrandLostSalesVolumeDueToOOS\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.lostSalesVolumeDueToOOSStdPack | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportCompanyStatusBrandMarketSalesVolume\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketSalesVolumeStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusBrandRetailersPurchasesVolume\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.retailersPurchasesVolumeStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusBrandShipmentsToWholesalers\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.shipmentsToWholesalersStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusBrandProductionVolume\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.productionVolumeStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusBrandInventoryVolumeAtManufacturer\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.inventoryVolumeAtManufacturerStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusBrandInventoryVolumeAtWholesalers\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.inventoryVolumeAtWholesalersStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusBrandInventoryVolumeAtRetailers\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.inventoryVolumeAtRetailersStdPack | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportCompanyStatusBrandStocksCoverAtRetailers\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.stocksCoverAtRetailersWeeks | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusBrandStocksCoverAtWholesalers\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.stocksCoverAtWholesalersWeeks | number : 2}}</td></tr></tbody></table>");
$templateCache.put("tablereportcompanystatusglobal.html","<table class=\"table table-striped table-bordered table-hover\"><thead><tr><th>{{\'ReportCompanyStatusSKUQuarter\' | translate}}</th><th ng-repeat=\"quarter in data\">{{\'ReportCompanyStatusSKUQuarter\' | translate}} {{quarter.period}}</th></tr></thead><tbody><tr><td>{{\'ReportCompanyStatusGlobalMarketShareValue\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketShareValue | number : 2}}%</td></tr><tr><td>{{\'ReportCompanyStatusGlobalMarketShareVolume\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketShareVolume | number : 2}}%</td></tr><tr><td>{{\'ReportCompanyStatusGlobalMarketSalesVolumeStd\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketSalesVolumeStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusGlobalLostSalesVolumeDueToOOSStd\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.lostSalesVolumeDueToOOSStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusGlobalNumericalDistribution\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.numbericalDistribution | number : 2}}%</td></tr><tr><td>{{\'ReportCompanyStatusGlobalVolumeWeightedDistribution\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.volumeWeightedDistribution | number : 2}}%</td></tr><tr><td>{{\'ReportCompanyStatusGlobalShelfSpace\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.shelfSpace | number : 2}}%</td></tr><tr><td>{{\'ReportCompanyStatusGlobalMindSpaceShare\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.mindSpaceShare | number : 2}}%</td></tr><tr><td>{{\'ReportCompanyStatusGlobalAverageNetMarketPrice\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.averageNetMarketPriceStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusGlobalAverageDisplayPrice\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.averageDisplayPriceStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusGlobalIngredientsQualityIndex\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.ingredientsQualityIndex | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusGlobalAppliedTechnologyIndex\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.appliedTechnologyIndex | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportCompanyStatusGlobalMarketSalesValue\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketSalesValue | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusGlobalConsumerPricePromotions\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.consumerPricePromotions | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusGlobalMarketNetSalesValue\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketNetSalesValue | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportCompanyStatusGlobalLostSalesVolumeDueToOOS\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.lostSalesVolumeDueToOOSStdPack | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportCompanyStatusGlobalMarketSalesVolume\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketSalesVolumeStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusGlobalRetailersPurchasesVolume\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.retailersPurchasesVolume | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusGlobalShipmentsToWholesalers\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.shipmentsToWholesalers | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusGlobalProductionVolume\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.productionVolume | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusGlobalInventoryVolumeAtManufacturer\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.inventoryVolumeAtManufacturer | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusGlobalInventoryVolumeAtWholesalers\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.inventoryVolumeAtWholesalers | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusGlobalInventoryVolumeAtRetailers\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.inventoryVolumeAtRetailers | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportCompanyStatusGlobalStocksCoverAtRetailers\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.stocksCoverAtRetailersWeeks | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusGlobalStocksCoverAtWholesalers\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.stocksCoverAtWholesalersWeeks | number : 2}}</td></tr></tbody></table>");
$templateCache.put("tablereportcompanystatussku.html","<table class=\"table table-striped table-bordered table-hover\"><thead><tr><th>{{\'ReportCompanyStatusSKUQuarter\' | translate}}</th><th ng-repeat=\"quarter in data\">{{\'ReportCompanyStatusSKUQuarter\' | translate}} {{quarter.period}}</th></tr></thead><tbody><tr><td>{{\'ReportCompanyStatusSKUMarketShareValue\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketShareValue | number : 2}}%</td></tr><tr><td>{{\'ReportCompanyStatusSKUMarketShareVolume\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketShareVolume | number : 2}}%</td></tr><tr><td>{{\'ReportCompanyStatusSKUMarketSalesVolumeStd\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketSalesVolumeStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusSKULostSalesVolumeDueToOOSStd\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.lostSalesVolumeDueToOOSStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusSKUNumericalDistribution\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.numbericalDistribution | number : 2}}%</td></tr><tr><td>{{\'ReportCompanyStatusSKUVolumeWeightedDistribution\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.volumeWeightedDistribution | number : 2}}%</td></tr><tr><td>{{\'ReportCompanyStatusSKUShelfSpace\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.shelfSpace | number : 2}}%</td></tr><tr><td>{{\'ReportCompanyStatusSKUAwareness\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.awareness | number : 2}}%</td></tr><tr><td>{{\'ReportCompanyStatusSKUAverageNetMarketPrice\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.averageNetMarketPriceStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusSKUAverageDisplayPrice\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.averageDisplayPriceStdPack | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusSKUPriceRankingIndex\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.priceRankingIndex | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusSKUTargetConsumerSegment\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.targetConsumerSegment }}</td></tr><tr><td>{{\'ReportCompanyStatusSKUTargetConsumerSegmentExpectedValuePerception\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.targetConsumerSegmentExpectedValuePerception | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusSKUValuePerception\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.valuePerception | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusSKUTargetConsumerSegmentExpectedImagePerception\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.targetConsumerSegmentExpectedImagePerception | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusSKUImagePerception\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.imagePerception | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportCompanyStatusSKUIngredientsQualityIndex\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.ingredientsQualityIndex}}</td></tr><tr><td>{{\'ReportCompanyStatusSKUAppliedTechnologyIndex\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.appliedTechnologyIndex}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportCompanyStatusSKUMarketSalesValue\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketSalesValue | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusSKUConsumerPricePromotions\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.consumerPricePromotions | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusSKUMarketNetSalesValue\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketNetSalesValue | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportCompanyStatusSKULostSalesVolumeDueToOOS\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.lostSalesVolumeDueToOOS | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportCompanyStatusSKUMarketSalesVolume\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketSalesVolume | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusSKURetailersPurchasesVolume\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.retailersPurchasesVolume | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusSKUShipmentsToWholesalers\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.shipmentsToWholesalers | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusSKUProductionVolume\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.productionVolume | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusSKUInventoryVolumeAtManufacturer\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.inventoryVolumeAtManufacturer | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusSKUInventoryVolumeAtWholesalers\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.inventoryVolumeAtWholesalers | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusSKUInventoryVolumeAtRetailers\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.inventoryVolumeAtRetailers | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportCompanyStatusSKUStocksCoverAtRetailers\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.stocksCoverAtRetailersWeeks | number : 2}}</td></tr><tr><td>{{\'ReportCompanyStatusSKUStocksCoverAtWholesalers\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.stocksCoverAtWholesalersWeeks | number : 2}}</td></tr></tbody></table>");
$templateCache.put("tablereportcompetitorintelligence.html","<table class=\"table table-striped table-bordered table-hover\"><thead><tr><th>{{\'ReportCompanyStatusSKUQuarter\' | translate}}</th><th ng-repeat=\"quarter in data[0].data\">{{\'ReportCompanyStatusSKUQuarter\' | translate}} {{quarter.name}}</th></tr></thead><tbody><tr ng-repeat=\"company in data\"><td>{{\'HomePageSecondMenuBarLabelsCompany\' | translate}} {{company.companyName}}</td><td ng-repeat=\"quarter in company.data\">{{quarter.value * plus | number : 2}}{{unit}}</td></tr></tbody></table><div class=\"pull-right\"><div class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-class=\"{\'active\': display==\'line\'}\" ng-click=\"display=\'line\'\">{{\'ReportTabLabelTableChartDisplayLine\' | translate}}</button> <button type=\"button\" class=\"btn btn-default\" ng-class=\"{\'active\': display==\'bar\'}\" ng-click=\"display=\'bar\'\">{{\'ReportTabLabelTableChartDisplayBar\' | translate}}</button> <button type=\"button\" class=\"btn btn-default\" ng-class=\"{\'active\': display==\'bar\'}\" ng-click=\"display=\'point\'\">{{\'ReportTabLabelTableChartDisplayPoint\' | translate}}</button></div></div><div ac-chart=\"display\" ac-data=\"chartdata\" ac-config=\"chartconfig\" class=\"chartBox\"></div><p class=\"text-center\">{{\'ReportMarketSalesAndInventoryChartBottomTextPeriod\' | translate}}</p>");
$templateCache.put("tablereportfinalscore.html","<table class=\"table table-bordered\"><thead><tr><th>&nbsp;</th><th>{{\'FinalScorePageWeightFactor\' | translate}}</th><th ng-repeat=\"company in data.scores\"><span class=\"company {{\'company_\'+company.companyId}}\">&nbsp;</span> {{\'FinalScorePageCompany\' | translate}} {{company.companyName}}</th></tr></thead><tbody><tr><td>{{\'FinalScorePageIncrementalMarketShare\' | translate}}</td><td class=\"td_info\">50</td><td ng-repeat=\"score in data.scores\" ng-show=\"selectScore==\'Rescaled\'\">{{score.scaledSOM | number :2}}</td><td ng-repeat=\"score in data.scores\" ng-show=\"selectScore==\'Original\'\">{{score.originalSOM | number :2}}</td></tr><tr><td>{{\'FinalScorePageCumulatedNetProfit\' | translate}}</td><td class=\"td_info\">50</td><td ng-repeat=\"score in data.scores\" ng-show=\"selectScore==\'Rescaled\'\">{{score.scaledProfit | number :2}}</td><td ng-repeat=\"score in data.scores\" ng-show=\"selectScore==\'Original\'\">{{score.originalProfit | number :2}}</td></tr><tr><td>{{\'FinalScorePageSpendingVersusBudgets\' | translate}}</td><td class=\"td_info\">0</td><td ng-repeat=\"score in data.scores\" ng-show=\"selectScore==\'Rescaled\'\">{{score.scaledBudget | number :2}}</td><td ng-repeat=\"score in data.scores\" ng-show=\"selectScore==\'Original\'\">{{score.originalBudget | number :2}}</td></tr><tr class=\"tr_warning\" ng-show=\"selectScore==\'Rescaled\'\"><td>{{\'FinalScorePageFinalScore\' | translate}}</td><td>&nbsp;</td><td ng-repeat=\"score in data.scores\">{{score.finalScore | number :2}}</td></tr></tbody></table>");
$templateCache.put("tablereportfinancialreportallbrand.html","<table class=\"table table-striped table-bordered table-hover\"><thead><tr><th>Brands</th><th ng-repeat=\"brand in data\">{{brand.brandName}}</th></tr></thead><tbody><tr><td>{{\'ReportFinancialReportAllBrandSalesValue\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.salesValue | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandChangeVersusPreviousPeriodSalesValue\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.changeVersusPreviousPeriodSalesValue | number : 2}}%</td></tr><tr><td>{{\'ReportFinancialReportAllBrandShareInCompanyTotalSalesValue\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.shareInCompanyTotalSalesValue | number : 2}}%</td></tr><tr><td>{{\'ReportFinancialReportAllBrandCostOfGoodsSold\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.costOfGoodsSold | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandObsoleteGoodsCost\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.obsoleteGoodsCost | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandDiscontinuedGoodsCost\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.discontinuedGoodsCost | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandInventoryHoldingCost\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.inventoryHoldingCost | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandTotalMaterialCost\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.totalMaterialCosts | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"brand in data\"></td></tr><tr><td>{{\'ReportFinancialReportAllBrandGrossProfit\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.grossProfit | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandChangeVersusPreviousperiodGrossProfit\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.changeVersusPreviousPeriodGrossProfit | number : 2}}%</td></tr><tr><td>{{\'ReportFinancialReportAllBrandGrossProfitMargin\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.grossProfitMargin | number : 2}}%</td></tr><tr><td>{{\'ReportFinancialReportAllBrandShareInCompanyGrossProfitLosses\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.shareInCompanyGrossProfitLosses | number : 2}}%</td></tr><tr><td></td><td ng-repeat=\"brand in data\"></td></tr><tr><td>{{\'ReportFinancialReportAllBrandAdvertising\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.advertising | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandConsumerPromotionCost\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.consumerPromotionsCost | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandTradeInvestment\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.tradeInvestment | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandSalesForceCost\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.salesForceCost | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandAdditionalTradeMarginCost\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.additionalTradeMarginCost | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandVolumeDiscountCost\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.volumeDiscountCost | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandTotalTradeAndMarketingExpenses\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.totalTradeAndMarketingExpenses | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandTradeAndMarketingExpensesasaOfSales\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.tradeAndMarketingExpensesAsAPercentageOfSales | number : 2}}%</td></tr><tr><td>{{\'ReportFinancialReportAllBrandShareOfTradeAndMarketingExpensesInBrandTotal\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.shareOfTradeAndMarketingExpensesInBrandTotal | number : 2}}%</td></tr><tr><td></td><td ng-repeat=\"brand in data\"></td></tr><tr><td>{{\'ReportFinancialReportAllBrandGeneralExpenses\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.generalExpenses | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandAmortisation\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.amortisation | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"brand in data\"></td></tr><tr><td>{{\'ReportFinancialReportAllBrandOperatingProfit\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.operatingProfit | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandChangeVersusPreviousPeriodOperatingProfit\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.changeVersusPreviousPeriodOperatingProfit | number : 2}}%</td></tr><tr><td>{{\'ReportFinancialReportAllBrandOperatingProfitMargin\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.operatingProfitMargin | number : 2}}%</td></tr><tr><td>{{\'ReportFinancialReportAllBrandShareInBrandOperatingProfitLoss\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.shareInBrandOperatingProfitLosses | number : 2}}%</td></tr><tr><td></td><td ng-repeat=\"brand in data\"></td></tr><tr><td>{{\'ReportFinancialReportAllBrandInterests\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.interests | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandTaxes\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.taxes | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandExceptionalCostProfit\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.exceptionalCostsProfits | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"brand in data\"></td></tr><tr><td>{{\'ReportFinancialReportAllBrandNetProfit\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.netProfit | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandChangeVersusPreviousPeriodNetProfit\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.changeVersusPreviousPeriodNetProfit | number : 2}}%</td></tr><tr><td>{{\'ReportFinancialReportAllBrandNetProfitMargin\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.netProfitMargin | number : 2}}%</td></tr><tr><td>{{\'ReportFinancialReportAllBrandShareInCompanyNetProfitLoss\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.shareInBrandNetProfitLosses | number : 2}}%</td></tr><tr><td></td><td ng-repeat=\"brand in data\"></td></tr><tr><td>{{\'ReportFinancialReportAllBrandProductionCost\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.productionCost | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportAllBrandInventoryValue\' | translate}}</td><td ng-repeat=\"brand in data\">{{brand.inventoryValue | number : 2}}</td></tr></tbody></table>");
$templateCache.put("tablereportfinancialreportbrand.html","<table class=\"table table-striped table-bordered table-hover\"><thead><tr><th>SKUs</th><th ng-repeat=\"sku in data\">{{sku.SKUName}}</th></tr></thead><tbody><tr><td>{{\'ReportFinancialReportBrandSalesValue\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.salesValue | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandChangeVersusPreviousPeriodSalesValue\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.changeVersusPreviousPeriodSalesValue | number : 2}}%</td></tr><tr><td>{{\'ReportFinancialReportBrandShareInBrandTotalSalesValue\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.shareInBrandTotalSalesValue | number : 2}}%</td></tr><tr><td>{{\'ReportFinancialReportBrandCostOfGoodsSold\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.costOfGoodsSold | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandObsoleteGoodsCost\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.obsoleteGoodsCost | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandDiscontinuedGoodsCost\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.discontinuedGoodsCost | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandInventoryHoldingCost\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.inventoryHoldingCost | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandTotalMaterialCost\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.totalMaterialCosts | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"sku in data\"></td></tr><tr><td>{{\'ReportFinancialReportBrandGrossProfit\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.grossProfit | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandChangeVersusPreviousPeriodGrossProfit\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.changeVersusPreviousPeriodGrossProfit | number : 2}}%</td></tr><tr><td>{{\'ReportFinancialReportBrandGrossProfitMargin\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.grossProfitMargin | number : 2}}%</td></tr><tr><td>{{\'ReportFinancialReportBrandShareInBrandGrossProfitLosses\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.shareInBrandGrossProfitLosses | number : 2}}%</td></tr><tr><td></td><td ng-repeat=\"sku in data\"></td></tr><tr><td>{{\'ReportFinancialReportBrandAdvertising\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.advertising | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandConsumerPromotionCost\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.consumerPromotionsCost | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandTradeInvestment\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.tradeInvestment | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandSalesForceCost\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.salesForceCost | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandAdditionalTradeMarginCost\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.additionalTradeMarginCost | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandVolumeDiscountCost\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.volumeDiscountCost | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandTotalTradeAndMarketingExpenses\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.totalTradeAndMarketingExpenses | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandTradeAndMarketingExpensesasaOfSales\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.tradeAndMarketingExpensesAsAPercentageOfSales | number : 2}}%</td></tr><tr><td>{{\'ReportFinancialReportBrandShareOfTradeAndMarketingExpensesInBrandTotal\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.shareOfTradeAndMarketingExpensesInBrandTotal | number : 2}}%</td></tr><tr><td></td><td ng-repeat=\"sku in data\"></td></tr><tr><td>{{\'ReportFinancialReportBrandGeneralExpenses\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.generalExpenses | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandAmortisation\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.amortisation | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"sku in data\"></td></tr><tr><td>{{\'ReportFinancialReportBrandOperatingProfit\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.operatingProfit | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandChangeVersusPreviousPeriodOperatingProfit\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.changeVersusPreviousPeriodOperatingProfit | number : 2}}%</td></tr><tr><td>{{\'ReportFinancialReportBrandOperatingProfitMargin\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.operatingProfitMargin | number : 2}}%</td></tr><tr><td>{{\'ReportFinancialReportBrandShareInBrandOperatingProfitLoss\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.shareInBrandOperatingProfitLosses | number : 2}}%</td></tr><tr><td></td><td ng-repeat=\"sku in data\"></td></tr><tr><td>{{\'ReportFinancialReportBrandInterests\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.interests | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandTaxes\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.taxes | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandExceptionalCostProfit\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.exceptionalCostsProfits | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"sku in data\"></td></tr><tr><td>{{\'ReportFinancialReportBrandNetProfit\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.netProfit | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandChangeVersusPreviousPeriodNetProfit\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.changeVersusPreviousPeriodNetProfit | number : 2}}%</td></tr><tr><td>{{\'ReportFinancialReportBrandNetProfitMargin\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.netProfitMargin | number : 2}}%</td></tr><tr><td>{{\'ReportFinancialReportBrandShareInBrandNetProfitLoss\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.shareInBrandNetProfitLosses | number : 2}}%</td></tr><tr><td></td><td ng-repeat=\"sku in data\"></td></tr><tr><td>{{\'ReportFinancialReportBrandProductionCost\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.productionCost | number : 2}}</td></tr><tr><td>{{\'ReportFinancialReportBrandInventoryValue\' | translate}}</td><td ng-repeat=\"sku in data\">{{sku.inventoryValue | number : 2}}</td></tr></tbody></table>");
$templateCache.put("tablereportmarketindicator.html","<table class=\"table table-striped table-bordered table-hover\"><thead><tr><th>Name</th><th>Value</th></tr></thead><tbody><tr><td>{{\'ReportMarketIndicatorCorporateTaxRate\' | translate}}</td><td>{{data.corporateTaxRate | number : 2}}{{unit}}</td></tr><tr><td>{{\'ReportMarketIndicatorInflationRate\' | translate}}</td><td>{{data.inflationRate | number : 2}}{{unit}}</td></tr><tr><td>{{\'ReportMarketIndicatorDepositRate\' | translate}}</td><td>{{data.depositRate | number : 2}}{{unit}}</td></tr><tr><td>{{\'ReportMarketIndicatorBorrowingRate\' | translate}}</td><td>{{data.borrowingRate | number : 2}}{{unit}}</td></tr><tr><td>{{\'ReportMarketIndicatorAdditionalInvestmentBudgetSurchargeRate\' | translate}}</td><td>{{data.additionalInvestmentBudgetSurchargeRate | number : 2}}{{unit}}</td></tr><tr><td>{{\'ReportMarketIndicatorInventoryHoldingCost\' | translate}}</td><td>{{data.inventoryHoldingCost | number : 2}}{{unit}}</td></tr><tr><td>{{\'ReportMarketIndicatorObsoleteGoodsCost\' | translate}}</td><td>{{data.obsoleteGoodsCost | number : 2}}{{unit}}</td></tr><tr><td>{{\'ReportMarketIndicatorDiscontinuedGoodsCost\' | translate}}</td><td>{{data.discontinuedGoodsCost | number : 2}}{{unit}}</td></tr></tbody></table>");
$templateCache.put("tablereportmarkettrendsbrand.html","<table class=\"table table-striped table-bordered table-hover\"><thead><tr><th>{{\'ReportCompanyStatusSKUQuarter\' | translate}}</th><th ng-repeat=\"quarter in data[0].data\">{{\'ReportCompanyStatusSKUQuarter\' | translate}} {{quarter.name}}</th></tr></thead><tbody><tr ng-repeat=\"brand in data\"><td>{{brand.brandName}}</td><td ng-repeat=\"quarter in brand.data\">{{quarter.value * plus | number : 2}}{{unit}}</td></tr></tbody></table><div class=\"pull-right\"><div class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-class=\"{\'active\': display==\'line\'}\" ng-click=\"display=\'line\'\">{{\'ReportTabLabelTableChartDisplayLine\' | translate}}</button> <button type=\"button\" class=\"btn btn-default\" ng-class=\"{\'active\': display==\'bar\'}\" ng-click=\"display=\'bar\'\">{{\'ReportTabLabelTableChartDisplayBar\' | translate}}</button> <button type=\"button\" class=\"btn btn-default\" ng-class=\"{\'active\': display==\'bar\'}\" ng-click=\"display=\'point\'\">{{\'ReportTabLabelTableChartDisplayPoint\' | translate}}</button></div></div><div ac-chart=\"display\" ac-data=\"chartdata\" ac-config=\"chartconfig\" class=\"chartBox chartBox2\"></div><p class=\"text-center\">{{\'ReportMarketSalesAndInventoryChartBottomTextPeriod\' | translate}}</p>");
$templateCache.put("tablereportmarkettrendsglobal.html","<table class=\"table table-striped table-bordered table-hover\"><thead><tr><th>{{\'ReportCompanyStatusSKUQuarter\' | translate}}</th><th ng-repeat=\"quarter in data[0].data\">{{\'ReportCompanyStatusSKUQuarter\' | translate}} {{quarter.name}}</th></tr></thead><tbody><tr ng-repeat=\"company in data\"><td>{{\'HomePageSecondMenuBarLabelsCompany\' | translate}} {{company.companyName}}</td><td ng-repeat=\"quarter in company.data\">{{quarter.value * plus | number : 2}}{{unit}}</td></tr></tbody></table><div class=\"pull-right\"><div class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-class=\"{\'active\': display==\'line\'}\" ng-click=\"display=\'line\'\">{{\'ReportTabLabelTableChartDisplayLine\' | translate}}</button> <button type=\"button\" class=\"btn btn-default\" ng-class=\"{\'active\': display==\'bar\'}\" ng-click=\"display=\'bar\'\">{{\'ReportTabLabelTableChartDisplayBar\' | translate}}</button> <button type=\"button\" class=\"btn btn-default\" ng-class=\"{\'active\': display==\'bar\'}\" ng-click=\"display=\'point\'\">{{\'ReportTabLabelTableChartDisplayPoint\' | translate}}</button></div></div><div ac-chart=\"display\" ac-data=\"chartdata\" ac-config=\"chartconfig\" class=\"chartBox\"></div><p class=\"text-center\">{{\'ReportMarketSalesAndInventoryChartBottomTextPeriod\' | translate}}</p>");
$templateCache.put("tablereportmarkettrendssku.html","<table class=\"table table-striped table-bordered table-hover\"><thead><tr><th>{{\'ReportCompanyStatusSKUQuarter\' | translate}}</th><th ng-repeat=\"quarter in data[0].data\">{{\'ReportCompanyStatusSKUQuarter\' | translate}} {{quarter.name}}</th></tr></thead><tbody><tr ng-repeat=\"sku in data\"><td>{{sku.SKUName}} {{sku.PackSize | skupacksize | translate}}</td><td ng-repeat=\"quarter in sku.data\">{{quarter.value * plus | number : 2}}{{unit}}</td></tr></tbody></table><div class=\"pull-right\"><div class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-class=\"{\'active\': display==\'line\'}\" ng-click=\"display=\'line\'\">{{\'ReportTabLabelTableChartDisplayLine\' | translate}}</button> <button type=\"button\" class=\"btn btn-default\" ng-class=\"{\'active\': display==\'bar\'}\" ng-click=\"display=\'bar\'\">{{\'ReportTabLabelTableChartDisplayBar\' | translate}}</button> <button type=\"button\" class=\"btn btn-default\" ng-class=\"{\'active\': display==\'bar\'}\" ng-click=\"display=\'point\'\">{{\'ReportTabLabelTableChartDisplayPoint\' | translate}}</button></div></div><div ac-chart=\"display\" ac-data=\"chartdata\" ac-config=\"chartconfig\" class=\"chartBox chartBox2\"></div><p class=\"text-center\">{{\'ReportMarketSalesAndInventoryChartBottomTextPeriod\' | translate}}</p>");
$templateCache.put("tablereportprofitabilityevolutionbrand.html","<table class=\"table table-striped table-bordered table-hover \"><thead><tr><th>{{\'ReportProfitabilityEvolutionSKUQuarter\' | translate}}</th><th ng-repeat=\"quarter in data \">{{\'ReportProfitabilityEvolutionSKUQuarter\' | translate}} {{quarter.period}}</th></tr></thead><tbody><tr><td>{{\'ReportProfitabilityEvolutionBrandManufacturerSalesValue\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.manufacturerSalesValue | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data \"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandCostOfGoodsSold\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.costOfGoodsSold | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandInventoryHolding\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.inventoryHoldingCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandObsoleteGoods\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.obsoleteGoodsCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandDiscontinuedGoodsCost\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.discontinuedGoodsCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandGrossProfit\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.grossProfit | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data \"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandAdvertising\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.advertising | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandConsumerPromotionsCost\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.consumerPromotionsCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandTradeInvestment\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.tradeInvestment | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandSalesForceCost\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.salesForceCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandVolumeDiscountCost\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.volumeDiscountCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandAdditionalTradeMarginCost\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.additionalTradeMarginCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandTotalTradeAndMarketingExpenses\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.totalTradeAndMarketingExpenses | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data \"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandGeneralExpenses\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.generalExpenses | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandAmortisation\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.amortisation | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandOperatingProfit\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.operatingProfit | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data \"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandInterests\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.interests | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandExceptionalCostProfit\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.exceptionalCostsProfits | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandTaxes\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.taxes | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandNetProfit\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.netProfit | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data \"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandSurchargeForSupplementaryInvestmentBudget\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.surchargeForSupplementaryInvestmentBudget | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandNetResult\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.netResult | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data \"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandShareInCompanyTotalSalesValue\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.shareInCompanyTotalSalesValue | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandShareInCompanyGrossProfitLosses\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.shareInCompanyGrossProfitLosses | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandShareOfTradeAndMarketingExpensesInCompanyTotal\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.shareOfTradeAndMarketingExpensesInCompanyTotal | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandShareInCompanyOperatingProfitLosses\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.shareInCompanyOperatingProfitLosses | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandShareInCompanyNetProfitLosses\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.shareInCompanyNetProfitLosses | number : 2}}%</td></tr><tr><td></td><td ng-repeat=\"quarter in data \"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandGrossProfitMargin\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.grossProfitMargin | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandTradeAndMarketingExpensesasaOfSales\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.tradeAndMarketingExpensesAsAPercentageOfSales | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandGeneralExpensesasaOfSales\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.generalExpensesAsAPercentageOfSales | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandOperatingProfitMargin\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.operatingProfitMargin | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandNetProfitMargin\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.netProfitMargin | number : 2}}%</td></tr><tr><td></td><td ng-repeat=\"quarter in data \"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandReturnOnInvestment\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.returnOnInvestment | number : 2}}%</td></tr><tr><td></td><td ng-repeat=\"quarter in data \"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandAverageNetMarketPrice\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.averageNetMarketPrice | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandAverageWholesalesPrice\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.averageWholesalesPrice | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandAverageManufacturerPrice\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.averageManufacturerPrice | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandAverageProductionCost\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.averageProductionCost | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data \"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandMarketSalesValue\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.marketSalesValue | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandConsumerPricePromotions\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.consumerProcePromotion | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandMarketNetSalesValue\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.marketNetSalesValue | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data \"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandProductionCost\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.productionCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionBrandInventoryValue\' | translate}}</td><td ng-repeat=\"quarter in data \">{{quarter.inventoryValue | number : 2}}</td></tr></tbody></table>");
$templateCache.put("tablereportprofitabilityevolutionglobal.html","<table class=\"table table-striped table-bordered table-hover\"><thead><tr><th>{{\'ReportProfitabilityEvolutionSKUQuarter\' | translate}}</th><th ng-repeat=\"quarter in data\">{{\'ReportProfitabilityEvolutionSKUQuarter\' | translate}} {{quarter.period}}</th></tr></thead><tbody><tr><td>{{\'ReportProfitabilityEvolutionGlobalManufacturerSalesValue\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.manufacturerSalesValue | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalCostOfGoodsSold\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.costOfGoodsSold | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalInventoryHolding\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.inventoryHoldingCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalObsoleteGoods\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.obsoleteGoodsCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalDiscontinuedGoodsCost\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.discontinuedGoodsCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalGrossProfit\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.grossProfit | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalAdvertising\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.advertising | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalConsumerPromotionsCost\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.consumerPromotionsCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalTradeInvestment\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.tradeInvestment | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalSalesForceCost\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.salesForceCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalVolumeDiscountCost\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.volumeDiscountCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalAdditionalTradeMarginCost\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.additionalTradeMarginCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalTotalTradeAndMarketingExpenses\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.totalTradeAndMarketingExpenses | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalOverhead\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.overhead | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalInvestmentToImproveTechnologyLevel\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.investmentToImproveTechnologyLevel | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalInvestmentToIncreaseProductionEfficiency\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.investmentToIncreaseProductionEfficiency | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalProductionCapacityDisposalCost\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.productionCapacityDisposalCosts | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalOvertimeShiftsCost\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.overtimeShiftsCosts | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalTotalGeneralExpenses\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.generalExpenses | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalAmortisation\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.amortisation | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalOperatingProfit\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.operatingProfit | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalInterests\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.interests | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalExceptionalCostProfit\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.exceptionalCostsProfits | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalTaxes\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.taxes | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalNetProfit\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.netProfit | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalSurchargeForSupplementaryInvestmentBudget\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.surchargeForSupplementaryInvestmentBudget | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalNetResult\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.netResult | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalGrossProfitMargin\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.grossProfitMargin | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalTradeAndMarketingExpensesasaOfSales\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.tradeAndMarketingExpensesAsAPercentageOfSales | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalGeneralExpensesasaOfSales\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.generalExpensesAsAPercentageOfSales | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalOperatingProfitMargin\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.operatingProfitMargin | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalNetProfitMargin\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.netProfitMargin | number : 2}}%</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalReturnOnInvestment\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.returnOnInvestment | number : 2}}%</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalAverageNetMarketPrice\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.averageNetMarketPrice | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalAverageWholesalesPrice\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.averageWholesalesPrice | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalAverageManufacturerPrice\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.averageManufacturerPrice | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalAverageProductionCost\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.averageProductionCost | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalMarketSalesValue\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketSalesValue | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalConsumerPricePromotions\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.consumerProcePromotion | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalMarketNetSalesValue\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketNetSalesValue | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalProductionCost\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.productionCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalInventoryValue\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.inventoryValue | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalCapacityUtilisationRate\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.capacityUtilisationRate | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalChangeInProductionCapacity\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.changeInProductionCapacityStdPack | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalNextPeriodAvailableProdCapacity\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.nextPeriodAvailableProdCapacity | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalAvailableTechnologyLevel\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.availableTechnologyLevel | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalExtraBudgetRequiredToIncreaseTechnologyLevelBy1Step\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.extraBudgetRequiredToIncreaseTechnologyLevelBy1Step | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalExtraBudgetRequiredToIncreaseTechnologyLevelBy2Steps\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.extraBudgetRequiredToIncreaseTechnologyLevelBy2Step | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalAcquiredProductionAndLogisticsEfficiency\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.acquiredProductionAndLogisticsEfficiency | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalExtraBudgetRequiredToIncreaseEfficiencyBy2points\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.extraBudgetRequiredToIncreaseEfficiencyBy2Points | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalExtraBudgetRequiredToIncreaseEfficiencyBy5points\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.extraBudgetRequiredToIncreaseEfficiencyBy5Points | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalAcquiredProductionPlanningFlexibility\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.acquiredProductionPlanningFlexibility | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalExtraBudgetRequiredToIncreaseFlexibilityBy2points\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.extraBudgetRequiredToIncreaseFlexibilityBy2Points | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionGlobalExtraBudgetRequiredToIncreaseFlexibilityBy5points\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.extraBudgetRequiredToIncreaseFlexibilityBy5Points | number : 2}}</td></tr></tbody></table>");
$templateCache.put("tablereportprofitabilityevolutionsku.html","<table class=\"table table-striped table-bordered table-hover\"><thead><tr><th>{{\'ReportProfitabilityEvolutionSKUQuarter\' | translate}}</th><th ng-repeat=\"quarter in data\">{{\'ReportProfitabilityEvolutionSKUQuarter\' | translate}} {{quarter.period}}</th></tr></thead><tbody><tr><td>{{\'ReportProfitabilityEvolutionSKUManufacturerSalesValue\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.manufacturerSalesValue | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUCostOfGoodsSold\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.costOfGoodsSold | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUInventoryHolding\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.inventoryHoldingCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUObsoleteGoods\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.obsoleteGoodsCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUDiscontinuedGoodsCost\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.discontinuedGoodsCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUGrossProfit\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.grossProfit | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUAdvertising\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.advertising | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUConsumerPromotionsCost\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.consumerPromotionsCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUTradeInvestment\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.tradeInvestment | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUSalesForceCost\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.salesForceCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUVolumeDiscountCost\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.volumeDiscountCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUAdditionalTradeMarginCost\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.additionalTradeMarginCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUTotalTradeAndMarketingExpenses\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.totalTradeAndMarketingExpenses | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUGeneralExpenses\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.generalExpenses | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUAmortisation\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.amortisation | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUOperatingProfit\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.operatingProfit | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUInterests\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.interests | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUExceptionalCostProfit\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.exceptionalCostsProfits | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUTaxes\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.taxes | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUNetProfit\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.netProfit | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUSurchargeForSupplementaryInvestmentBudget\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.surchargeForSupplementaryInvestmentBudget | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUNetResult\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.netResult | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUShareInBrandTotalSalesValue\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.shareInBrandTotalSalesValue | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUShareInBrandGrossProfitLosses\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.shareInBrandGrossProfitLosses | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUShareOfTradeAndMarketingExpensesInBrandTotal\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.shareOfTradeAndMarketingExpensesInBrandTotal | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUShareInBrandOperatingProfitLosses\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.shareInBrandOperatingProfitLosses | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUShareInBrandNetProfitLosses\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.shareInBrandNetProfitLosses | number : 2}}%</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUGrossProfitMargin\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.grossProfitMargin | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUTradeAndMarketingExpensesasaOfSales\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.tradeAndMarketingExpensesAsAPercentageOfSales | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUGeneralExpensesasaOfSales\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.generalExpensesAsAPercentageOfSales | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUOperatingProfitMargin\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.operatingProfitMargin | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUNetProfitMargin\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.netProfitMargin | number : 2}}%</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUReturnOnInvestment\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.returnOnInvestment | number : 2}}%</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUAverageNetMarketPrice\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.averageNetMarketPrice | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUAverageWholesalesPrice\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.averageWholesalesPrice | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUAverageManufacturerPrice\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.averageManufacturerPrice | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUAverageProductionCost\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.averageProductionCost | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUMarketSalesValue\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketSalesValue | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUConsumerPricePromotions\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.consumerProcePromotion | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUMarketNetSalesValue\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.marketNetSalesValue | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUAdditionalRetailersMargin\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.additionalRetailerMargin | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUWholesalersBonusRate\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.wholesalersBonusRate | number : 2}}%</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUMinimalPurchaseQualifyingForBonus\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.minimalPurchaseQualifyingForBonusStdPack | number : 2}}</td></tr><tr><td></td><td ng-repeat=\"quarter in data\"></td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUProductionCost\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.productionCost | number : 2}}</td></tr><tr><td>{{\'ReportProfitabilityEvolutionSKUInventoryValue\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.inventoryValue | number : 2}}</td></tr></tbody></table>");
$templateCache.put("tablereportsegmentdistribution.html","<table class=\"table table-striped table-bordered table-hover\"><thead><tr><th>{{\'ReportCompanyStatusSKUQuarter\' | translate}}</th><th ng-repeat=\"quarter in data\">{{\'ReportCompanyStatusSKUQuarter\' | translate}} {{quarter.period}}</th></tr></thead><tbody><tr><td>{{\'HomePageSegmentLabelPriceSensitive\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.priceSensitive * plus | number : 2}}{{unit}}</td></tr><tr><td>{{\'HomePageSegmentLabelPretenders\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.pretenders * plus| number : 2}}{{unit}}</td></tr><tr><td>{{\'HomePageSegmentLabelModerate\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.moderate * plus| number : 2}}{{unit}}</td></tr><tr><td>{{\'HomePageSegmentLabelGoodLife\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.goodLife * plus| number : 2}}{{unit}}</td></tr><tr><td>{{\'HomePageSegmentLabelUltimate\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.ultimate * plus| number : 2}}{{unit}}</td></tr><tr><td>{{\'HomePageSegmentLabelPragmatic\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.pragmatic * plus| number : 2}}{{unit}}</td></tr><tr><td>{{\'HomePageSegmentLabelAllSegments\' | translate}}</td><td ng-repeat=\"quarter in data\">{{quarter.allSegments * plus| number : 2}}{{unit}}</td></tr></tbody></table><div class=\"pull-right\"><div class=\"btn-group-vertical btn-group-xs\"><button type=\"button\" class=\"btn btn-default\" ng-class=\"{\'active\': display==\'line\'}\" ng-click=\"display=\'line\'\">{{\'ReportTabLabelTableChartDisplayLine\' | translate}}</button> <button type=\"button\" class=\"btn btn-default\" ng-class=\"{\'active\': display==\'bar\'}\" ng-click=\"display=\'bar\'\">{{\'ReportTabLabelTableChartDisplayBar\' | translate}}</button> <button type=\"button\" class=\"btn btn-default\" ng-class=\"{\'active\': display==\'bar\'}\" ng-click=\"display=\'point\'\">{{\'ReportTabLabelTableChartDisplayPoint\' | translate}}</button></div></div><div ac-chart=\"display\" ac-data=\"chartdata\" ac-config=\"chartconfig\" class=\"chartBox\"></div><p class=\"text-center\">{{\'ReportMarketSalesAndInventoryChartBottomTextPeriod\' | translate}}</p>");
$templateCache.put("adminheader.html","<a href=\"index.html\" class=\"logo\">MarkSimos Admin</a><nav class=\"navbar navbar-static-top\" role=\"navigation\"><a href=\"#\" class=\"navbar-btn sidebar-toggle\" data-toggle=\"offcanvas\" role=\"button\"><span class=\"sr-only\">Toggle navigation</span> <span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span></a><div class=\"navbar-right\"><ul class=\"nav navbar-nav\"><li class=\"dropdown messages-menu\"><a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fa fa-envelope\"></i> <span class=\"label label-success\">4</span></a><ul class=\"dropdown-menu\"><li class=\"header\">You have 4 messages</li><li><ul class=\"menu\"><li><a href=\"#\"><div class=\"pull-left\"><img src=\"/libs/AdminLTE/img/avatar3.png\" class=\"img-circle\" alt=\"User Image\"></div><h4>Support Team <small><i class=\"fa fa-clock-o\"></i> 5 mins</small></h4><p>Why not buy a new awesome theme?</p></a></li><li><a href=\"#\"><div class=\"pull-left\"><img src=\"/libs/AdminLTE/img/avatar2.png\" class=\"img-circle\" alt=\"user image\"></div><h4>AdminLTE Design Team <small><i class=\"fa fa-clock-o\"></i> 2 hours</small></h4><p>Why not buy a new awesome theme?</p></a></li><li><a href=\"#\"><div class=\"pull-left\"><img src=\"/libs/AdminLTE/img/avatar.png\" class=\"img-circle\" alt=\"user image\"></div><h4>Developers <small><i class=\"fa fa-clock-o\"></i> Today</small></h4><p>Why not buy a new awesome theme?</p></a></li><li><a href=\"#\"><div class=\"pull-left\"><img src=\"/libs/AdminLTE/img/avatar2.png\" class=\"img-circle\" alt=\"user image\"></div><h4>Sales Department <small><i class=\"fa fa-clock-o\"></i> Yesterday</small></h4><p>Why not buy a new awesome theme?</p></a></li><li><a href=\"#\"><div class=\"pull-left\"><img src=\"/libs/AdminLTE/img/avatar.png\" class=\"img-circle\" alt=\"user image\"></div><h4>Reviewers <small><i class=\"fa fa-clock-o\"></i> 2 days</small></h4><p>Why not buy a new awesome theme?</p></a></li></ul></li><li class=\"footer\"><a href=\"#\">See All Messages</a></li></ul></li><li class=\"dropdown notifications-menu\"><a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fa fa-warning\"></i> <span class=\"label label-warning\">10</span></a><ul class=\"dropdown-menu\"><li class=\"header\">You have 10 notifications</li><li><ul class=\"menu\"><li><a href=\"#\"><i class=\"ion ion-ios7-people info\"></i> 5 new members joined today</a></li><li><a href=\"#\"><i class=\"fa fa-warning danger\"></i> Very long description here that may not fit into the page and may cause design problems</a></li><li><a href=\"#\"><i class=\"fa fa-users warning\"></i> 5 new members joined</a></li><li><a href=\"#\"><i class=\"ion ion-ios7-cart success\"></i> 25 sales made</a></li><li><a href=\"#\"><i class=\"ion ion-ios7-person danger\"></i> You changed your username</a></li></ul></li><li class=\"footer\"><a href=\"#\">View all</a></li></ul></li><li class=\"dropdown tasks-menu\"><a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fa fa-tasks\"></i> <span class=\"label label-danger\">9</span></a><ul class=\"dropdown-menu\"><li class=\"header\">You have 9 tasks</li><li><ul class=\"menu\"><li><a href=\"#\"><h3>Design some buttons <small class=\"pull-right\">20%</small></h3><div class=\"progress xs\"><div class=\"progress-bar progress-bar-aqua\" style=\"width: 20%\" role=\"progressbar\" aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\"><span class=\"sr-only\">20% Complete</span></div></div></a></li><li><a href=\"#\"><h3>Create a nice theme <small class=\"pull-right\">40%</small></h3><div class=\"progress xs\"><div class=\"progress-bar progress-bar-green\" style=\"width: 40%\" role=\"progressbar\" aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\"><span class=\"sr-only\">40% Complete</span></div></div></a></li><li><a href=\"#\"><h3>Some task I need to do <small class=\"pull-right\">60%</small></h3><div class=\"progress xs\"><div class=\"progress-bar progress-bar-red\" style=\"width: 60%\" role=\"progressbar\" aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\"><span class=\"sr-only\">60% Complete</span></div></div></a></li><li><a href=\"#\"><h3>Make beautiful transitions <small class=\"pull-right\">80%</small></h3><div class=\"progress xs\"><div class=\"progress-bar progress-bar-yellow\" style=\"width: 80%\" role=\"progressbar\" aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\"><span class=\"sr-only\">80% Complete</span></div></div></a></li></ul></li><li class=\"footer\"><a href=\"#\">View all tasks</a></li></ul></li><li class=\"dropdown user user-menu\"><a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"glyphicon glyphicon-user\"></i> <span>{{currentuser.name}} <i class=\"caret\"></i></span></a><ul class=\"dropdown-menu\"><li class=\"user-header bg-light-blue\"><img src=\"/libs/AdminLTE/img/avatar3.png\" class=\"img-circle\" alt=\"User Image\"><p>{{currentuser.name}} - Web Developer <small>Member since Nov. 2012</small></p></li><li class=\"user-body\"><div class=\"col-xs-4 text-center\"><a href=\"#\">Followers</a></div><div class=\"col-xs-4 text-center\"><a href=\"#\">Sales</a></div><div class=\"col-xs-4 text-center\"><a href=\"#\">Friends</a></div></li><li class=\"user-footer\"><div class=\"pull-left\"><a class=\"btn btn-default btn-flat\">Profile</a></div><div class=\"pull-right\"><a class=\"btn btn-default btn-flat\" ng-click=\"clickLogout()\">Sign out</a></div></li></ul></li></ul></div></nav>");
$templateCache.put("adminmenu.html","<aside class=\"left-side sidebar-offcanvas\"><section class=\"sidebar\"><div class=\"user-panel\"><div class=\"pull-left image\"><img src=\"/libs/AdminLTE/img/avatar3.png\" class=\"img-circle\" alt=\"User Image\"></div><div class=\"pull-left info\"><p>Hello {{currentuser.name}} !</p><a href=\"#\"><i class=\"fa fa-circle text-success\"></i> Online</a></div></div><ul class=\"sidebar-menu\"><li ng-class=\"{\'active\':css.menuexpand[1]}\" ng-if=\"showtab[1]\"><a ng-click=\"clickMenu(1)\"><i class=\"fa fa-dashboard\"></i> <span>Dashboard</span></a></li><li class=\"treeview\" ng-class=\"{\'active\':css.menuexpand[2]}\" ng-if=\"showtab[2]\"><a ng-click=\"clickTab(2)\"><i class=\"fa fa-edit\"></i> <span>Distributor Management</span> <i class=\"fa pull-right\" ng-class=\"{\'fa-angle-left\':!css.menuexpand[2], \'fa-angle-down\':css.menuexpand[2]}\"></i></a><ul class=\"treeview-menu\" ng-show=\"css.menuexpand[2]\"><li><a ng-click=\"clickMenu(21)\"><i class=\"fa fa-angle-double-right\"></i> Distributor List</a></li><li><a ng-click=\"clickMenu(22)\"><i class=\"fa fa-angle-double-right\"></i> Create Distributor</a></li></ul></li><li class=\"treeview\" ng-class=\"{\'active\':css.menuexpand[3]}\" ng-if=\"showtab[3]\"><a ng-click=\"clickTab(3)\"><i class=\"fa fa-edit\"></i> <span>Facilitator Management</span> <i class=\"fa pull-right\" ng-class=\"{\'fa-angle-left\':!css.menuexpand[3], \'fa-angle-down\':css.menuexpand[3]}\"></i></a><ul class=\"treeview-menu\" ng-show=\"css.menuexpand[3]\"><li><a ng-click=\"clickMenu(31)\"><i class=\"fa fa-angle-double-right\"></i> Facilitator List</a></li><li><a ng-click=\"clickMenu(32)\"><i class=\"fa fa-angle-double-right\"></i> Create Facilitator</a></li></ul></li><li class=\"treeview\" ng-class=\"{\'active\':css.menuexpand[4]}\" ng-if=\"showtab[4]\"><a ng-click=\"clickTab(4)\"><i class=\"fa fa-laptop\"></i> <span>Student Management</span> <i class=\"fa pull-right\" ng-class=\"{\'fa-angle-left\':!css.menuexpand[4], \'fa-angle-down\':css.menuexpand[4]}\"></i></a><ul class=\"treeview-menu\" ng-show=\"css.menuexpand[4]\"><li><a ng-click=\"clickMenu(41)\"><i class=\"fa fa-angle-double-right\"></i> Student List</a></li><li><a ng-click=\"clickMenu(42)\"><i class=\"fa fa-angle-double-right\"></i> Create Student</a></li></ul></li><li class=\"treeview\" ng-class=\"{\'active\':css.menuexpand[5]}\" ng-if=\"showtab[5]\"><a ng-click=\"clickTab(5)\"><i class=\"fa fa-table\"></i> <span>Seminar Management</span> <i class=\"fa pull-right\" ng-class=\"{\'fa-angle-left\':!css.menuexpand[5], \'fa-angle-down\':css.menuexpand[5]}\"></i></a><ul class=\"treeview-menu\" ng-show=\"css.menuexpand[5]\"><li><a ng-click=\"clickMenu(51)\"><i class=\"fa fa-angle-double-right\"></i> Seminar List</a></li><li><a ng-click=\"clickMenu(52)\"><i class=\"fa fa-angle-double-right\"></i> Create Seminar</a></li></ul></li><li class=\"treeview\" ng-class=\"{\'active\':css.menuexpand[6]}\" ng-if=\"showtab[6]\"><a ng-click=\"clickTab(6)\"><i class=\"fa fa-table\"></i> <span>Licence Management</span> <i class=\"fa pull-right\" ng-class=\"{\'fa-angle-left\':!css.menuexpand[6], \'fa-angle-down\':css.menuexpand[6]}\"></i></a><ul class=\"treeview-menu\" ng-show=\"css.menuexpand[6]\"><li><a ng-click=\"clickMenu(61)\"><i class=\"fa fa-angle-double-right\"></i> Licence List</a></li><li><a ng-click=\"clickMenu(62)\"><i class=\"fa fa-angle-double-right\"></i> Create Licence</a></li></ul></li></ul></section></aside>");
$templateCache.put("notifysavefailure.html","<div class=\"alert alert-danger cg-notify-message\" role=\"alert\" ng-click=\"$close()\">{{$message}}</div>");
$templateCache.put("notifysavesuccess.html","<div class=\"alert alert-info cg-notify-message\" role=\"alert\" ng-click=\"$close()\">{{$message}}</div>");
$templateCache.put("userheader.html","<div class=\"row header\"><nav class=\"navbar navbar-inverse\" role=\"navigation\"><div class=\"container-fluid\"><div class=\"navbar-header\"><button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\"><span class=\"sr-only\">Toggle navigation</span> <span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span></button> <a class=\"navbar-brand\" href=\"/marksimos/\"><img src=\"/app/css/images/logoheader.png\" alt=\"MarkSimosLogo\"> MarkSimos</a></div><div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\"><ul class=\"nav navbar-nav\" ng-if=\"showmenu\"><li ng-class=\"{\'active\':currentMenu==\'Home\'}\"><a ng-click=\"clickMenu(\'Home\')\">{{\'HomePageMenuBarLabelsHome\' | translate}}</a></li><li ng-class=\"{\'active\':currentMenu==\'Report\'}\"><a ng-click=\"clickMenu(\'Report\')\">{{\'HomePageMenuBarLabelsReport\' | translate}}</a></li><li ng-class=\"{\'active\':currentMenu==\'Decision\'}\"><a ng-click=\"clickMenu(\'Decision\')\">{{\'HomePageMenuBarLabelsDecision\' | translate}}<span class=\"num\" ng-if=\"currentRound\">R{{currentRound}}</span></a></li><li ng-class=\"{\'active\':currentMenu==\'Score\'}\"><a ng-click=\"clickMenu(\'Score\')\">{{\'HomePageMenuBarLabelsScore\' | translate}} <span class=\"num\">0</span></a></li></ul><ul class=\"nav navbar-nav navbar-right\"><li class=\"dropdown\"><a class=\"dropdown-toggle\" data-toggle=\"dropdown\">{{\'HomePageMenuBarLabelsLanguage\' | translate}} <b class=\"caret\"></b></a><ul class=\"dropdown-menu mk_dropdownlist\"><li><a ng-click=\"changeLanguage(\'en_US\')\">English</a></li><li class=\"divider mk_dropdowndivider\"></li><li><a ng-click=\"changeLanguage(\'zh_CN\')\">中文</a></li></ul></li><li><a href=\"/marksimos/help\" target=\"_blank\">{{\'HomePageMenuBarLabelsHelp\' | translate}}</a></li><li><a href=\"/marksimos.html\" target=\"_blank\">{{\'HomePageMenuBarLabelsAbout\' | translate}}</a></li><li ng-if=\"showlogout\"><a ng-click=\"clickLogout()\">{{\'HomePageMenuBarLabelsLogout\' | translate}}</a></li></ul></div></div></nav></div>");}]);
/**
 * Created by jinwyp on 6/26/14.
 */


/**
 * recommended
 *
 * no globals are left behind
 */



(function () {
    'use strict';



    /********************  Create New Module For Filters ********************/

    angular.module('marksimos.filter', []);





    /********************  Use This Module To Set New Filters  ********************/


    /********************  Normal Html Template Filters  ********************/

    angular.module('marksimos.filter').filter('usersegment', userSegmentFilter);
    angular.module('marksimos.filter').filter('skupacksize', skuPackSizeFilter);

    angular.module('marksimos.filter').directive('filterpercentage', percentageInputFilter);
    angular.module('marksimos.filter').directive('filternumber', numberInputFilter);


    function userSegmentFilter () {
        return function(input) {
            var names = {
                '0': function() {
                    return 'HomePageSegmentLabelPriceSensitive';
                },
                '1': function() {
                    return 'HomePageSegmentLabelPretenders';
                },
                '2': function() {
                    return 'HomePageSegmentLabelModerate';
                },
                '3': function() {
                    return 'HomePageSegmentLabelGoodLife';
                },
                '4': function() {
                    return 'HomePageSegmentLabelUltimate';
                },
                '5': function() {
                    return 'HomePageSegmentLabelPragmatic';
                }
            };

            // conditional based on optional argument
            if(angular.isNumber(input)){
                if (typeof names[input] === 'function') {
                    return names[input]();
                }
            }

            return input;

        };
    }


    function skuPackSizeFilter () {
        return function(input) {

            // conditional based on optional argument
            // 这里是翻译语言的字段名称, 并不是真正的值

            var names = {
                '0': function() {
                    return 'DecisionPageDecisionTabPackagingSizeSmall';
                },
                '1': function() {
                    return 'DecisionPageDecisionTabPackagingSizeStandard';
                },
                '2': function() {
                    return 'DecisionPageDecisionTabPackagingSizeLarge';
                }
            };


            if(angular.isNumber(input)){
                if (typeof names[input] === 'function') {
                    return names[input]();
                }
            }

            return input;

        };
    }




    /********************  NgModel Filters  ********************/

    function percentageInputFilter () {
        return {
            require: 'ngModel',
            restrict: 'A',
            link: function (scope, element, attr, ngModel) {

                function showFormatText(number) {
                    if(angular.isNumber(number)){
                        return parseInt( number * 10000) / 100 ;
                    }
                    return number;
                }

                function formatInput(number) {

                    if(angular.isNumber(Number(number))){
                        return number / 100 ;
                    }
                    return number;
                }

                ngModel.$formatters.push(showFormatText);
                ngModel.$parsers.push(formatInput);

            }
        };
    }


    function numberInputFilter () {
        return {
            require: 'ngModel',
            restrict: 'A',
            link: function (scope, element, attr, ngModel) {

                function showFormatText(number) {
                    if(angular.isNumber(number)){
                        return parseInt( number * 100) / 100 ;
                    }
                    return number;
                }

                function formatInput(number) {

                    if(angular.isNumber(Number(number))){
                        return number  ;
                    }
                    return number;
                }

                ngModel.$formatters.push(showFormatText);
                ngModel.$parsers.push(formatInput);

            }
        };
    }


})();







/**
 * Created by jinwyp on 5/29/14.
 */

/**
 * recommended
 *
 * no globals are left behind
 */

(function () {
    'use strict';


    /********************  Create New Module For Model ********************/

    angular.module('marksimos.model', ['pascalprecht.translate', 'marksimos.translation']);


    /********************  Use This Module To Set New Factory  ********************/


    angular.module('marksimos.model').factory('Student', ['$http', studentModel]);
    angular.module('marksimos.model').factory('Company', ['$http', companyModel]);
    angular.module('marksimos.model').factory('Language', ['$http', languageStorage]);

    angular.module('marksimos.model').factory('chartReport', ['$http', '$rootScope', '$translate', chartReportModel]);
    angular.module('marksimos.model').factory('tableReport', ['$http', tableReportModel]);

    angular.module('marksimos.model').factory('Help', ['$http', helpModel]);


    var apiPath = '/marksimos/api/';

    var errorHandler = function(err){
        console.log("Error 404 , Type : API ", err );
    };

    function studentModel ($http){

        var factory = {
            login : function(user){
                return $http.post(apiPath + 'login', user);
            },
            logOut : function(){
                return $http.get(apiPath + 'logout');
            },

            getStudent : function(){
                return $http.get(apiPath + 'user').then(function(result){

                    return result.data;
                })["catch"](function(err){
                    console.log(err);
                });
            },

            getSeminar : function(){
                return $http.get(apiPath + 'student/seminar').then(function(result){

                    return result.data;
                })["catch"](function(err){
                    console.log(err);
                });
            }
        };

        return factory;
    }



    function companyModel ($http){

        var factory = {
            getCurrentStudent : function(){
                return $http.get(apiPath + 'studentinfo').then(function(result){
//                console.log(result.data);

                    return result.data;
                })["catch"](errorHandler);
            },

            getCompany : function(){
                return $http.get(apiPath + 'company').then(function(result){
//                console.log(result.data);

                    return result.data;
                })["catch"](errorHandler);
            },
            getCompanyOtherInfo : function(){
                return $http.get(apiPath + 'company/otherinfo').then(function(result){
//                console.log(result.data);

                    return result.data;
                })["catch"](errorHandler);
            },
            getCompanyFutureProjectionCalculator : function(id){
                return $http.get(apiPath + 'future_projection_calculator/' + id).then(function(result){
//                console.log(result.data);

                    return result.data;
                })["catch"](errorHandler);
            },
            getCompanyProductPortfolio : function(){
                return $http.get(apiPath + 'product_portfolio').then(function(result){
//                console.log(result.data);

                    return result.data;
                })["catch"](errorHandler);
            },
            getCompanySpendingDetails : function(){
                return $http.get(apiPath + 'spending_details').then(function(result){
//                console.log(result.data);

                    return result.data;
                })["catch"](errorHandler);
            },


            addSku : function(postdata){
                return $http.post(apiPath + 'sku/decision/', postdata);
            },

            updateSku : function(postdata){
                return $http.put(apiPath + 'sku/decision/', postdata);
            },

            delSku : function(skuid, brandid){
                return $http['delete'](apiPath + 'sku/decision/' + brandid + '/' + skuid);
            },


            addBrand : function(postdata){
                return $http.post(apiPath + 'brand/decision/', postdata);
            },

            updateBrand : function(postdata){
                return $http.put(apiPath + 'brand/decision', postdata);
            },

            updateCompany : function(postdata){
                return $http.put(apiPath + 'company/decision', postdata);
            },

            getFinalScore : function(period){
                return $http.get(apiPath + 'finalscore/' + period).then(function(result){

                    result.data.highest_score = _.max(result.data.scores, function(companyScore){
                        return companyScore.finalScore;
                    }).finalScore;

                    for(var i=0;i<result.data.scores.length;i++){
                        result.data.scores[i].companyName = String.fromCharCode( 64 + result.data.scores[i].companyId);
                    }
                    return result.data;
                })["catch"](errorHandler);
            },

            getQuestionnaire : function(){
                return $http.get(apiPath + 'questionnaire');
            },

            updateQuestionnaire : function(postdata){
                return $http.put(apiPath + 'questionnaire', postdata);
            }

        };
        return factory;
    }



    function languageStorage ($http){

        var factory = {
            set: function (name, value) {
                console.log(name, value);
                // store `value` under `name` somehow
            },
            get: function (name) {

                $http.get(apiPath + 'studentinfo').then(function(result){
//                console.log(result.data);

                    return result.data.websiteLanguage;
                    console.log(name, result.data.websiteLanguage);
                });
                // request value of `name` somehow
            }
        };

        return factory;
    }



    function chartReportModel ($http, $rootScope, $translate){

        // 'FMCG': [
        //   0:  'FreshInventory',
        //   1:  'PreviousInventory',
        //   2:  'CloseToEXpireInventory'
        // ],
        // 'DURABLES': [
        //   0:  'Latest Stock',
        //   1:  'one-year old Stock',
        //   2:  'Two-year old Stock',
        //   3:  'Three-year old Stock',
        //   4:  'Oldest Stock'
        // ]

        // segmentNames: [
        // 0 - 'priceSensitive',
        // 1 - 'pretenders',
        // 2 - 'moderate',
        // 3 - 'goodLife',
        // 4 - 'ultimate',
        // 5 - 'pragmatic',
        // 6 - 'allSegments'
        // ],

        var translateText = {
            'ReportInventoryReportLabelCloseToExpireInventory' : '',
            'ReportInventoryReportLabelPreviousInventory'      : '',
            'ReportInventoryReportLabelFreshInventory'         : '',
            'HomePageSecondMenuBarLabelsCompany'               : '',
            'HomePageSegmentLabelPriceSensitive'               : '',
            'HomePageSegmentLabelPretenders'                   : '',
            'HomePageSegmentLabelModerate'                     : '',
            'HomePageSegmentLabelGoodLife'                     : '',
            'HomePageSegmentLabelUltimate'                     : '',
            'HomePageSegmentLabelPragmatic'                    : '',
            'HomePageSegmentLabelAllSegments'                  : ''
        };

        function showTranslateTextInventoryReport(fieldname) {
            var names = {
                '0': function() {
                    return translateText.ReportInventoryReportLabelFreshInventory;
                },
                '1': function() {
                    return translateText.ReportInventoryReportLabelPreviousInventory;
                },
                '2': function() {
                    return translateText.ReportInventoryReportLabelCloseToExpireInventory;
                }
            };
            if (typeof names[fieldname] !== 'function') {
                return false;
            }
            return names[fieldname]();
        }

        function showTranslateTextCompanyName(fieldname) {
            var names = {
                'A': function() {
                    return translateText.HomePageSecondMenuBarLabelsCompany + 'A';
                },
                'B': function() {
                    return translateText.HomePageSecondMenuBarLabelsCompany + 'B';
                },
                'C': function() {
                    return translateText.HomePageSecondMenuBarLabelsCompany + 'C';
                },
                'D': function() {
                    return translateText.HomePageSecondMenuBarLabelsCompany + 'D';
                },
                'E': function() {
                    return translateText.HomePageSecondMenuBarLabelsCompany + 'E';
                },
                'F': function() {
                    return translateText.HomePageSecondMenuBarLabelsCompany + 'F';
                }
            };
            if (typeof names[fieldname] !== 'function') {
                return false;
            }
            return names[fieldname]();
        }

        function showTranslateTextConsumerSegmentName(fieldname) {
            var names = {
                '0': function() {
                    return translateText.HomePageSegmentLabelPriceSensitive;
                },
                '1': function() {
                    return translateText.HomePageSegmentLabelPretenders;
                },
                '2': function() {
                    return translateText.HomePageSegmentLabelModerate;
                },
                '3': function() {
                    return translateText.HomePageSegmentLabelGoodLife;
                },
                '4': function() {
                    return translateText.HomePageSegmentLabelUltimate;
                },
                '5': function() {
                    return translateText.HomePageSegmentLabelPragmatic;
                },
                '6': function() {
                    return translateText.HomePageSegmentLabelAllSegments;
                },
                'priceSensitive': function() {
                    return translateText.HomePageSegmentLabelPriceSensitive;
                },
                'pretenders': function() {
                    return translateText.HomePageSegmentLabelPretenders;
                },
                'moderate': function() {
                    return translateText.HomePageSegmentLabelModerate;
                },
                'goodLife': function() {
                    return translateText.HomePageSegmentLabelGoodLife;
                },
                'ultimate': function() {
                    return translateText.HomePageSegmentLabelUltimate;
                },
                'pragmatic': function() {
                    return translateText.HomePageSegmentLabelPragmatic;
                },
                'allSegments': function() {
                    return translateText.HomePageSegmentLabelAllSegments;
                }
            };
            if (typeof names[fieldname] !== 'function') {
                return false;
            }
            return names[fieldname]();
        }


        function showTranslateTextSegmentName() {
            return translateText.ReportPerceptionMapAxisLabelSegment ;
        }


        var chartResult = {
            series: [],
            data: []
        };


        var chartConfig1 = {
            title: '',
            tooltips: true,
            labels: false,
            legend: {
                display: true,
                position: 'right' //could be 'left, right'
            },
            innerRadius: 0, // applicable on pieCharts, can be a percentage like '50%'
            lineLegend: 'traditional', // can be also 'lineEnd' or 'traditional', defaults to 'lineEnd'
            lineCurveType: 'monotone' // can be also 'linear', 'step', 'basis', 'bundle', 'cardinal', 'monotone', defaults to 'linear'
//        mouseover: function() {},
//        mouseout: function() {},
//        click: function() {}
        };

        var chartConfig2 = {
            title: '',
            tooltips: true,
            labels: false,
            legend: {
                display: false,
                position: 'right' //could be 'left, right'
            },
            innerRadius: 0, // applicable on pieCharts, can be a percentage like '50%'
            lineLegend: 'traditional', // can be also 'lineEnd' or 'traditional', defaults to 'lineEnd'
            lineCurveType: 'linear' // can be also 'linear', 'step', 'basis', 'bundle', 'cardinal', 'monotone', defaults to 'linear'
//        mouseover: function() {},
//        mouseout: function() {},
//        click: function() {}
        };

        var chartConfig3 = {
            title: '',
            tooltips: true,
            labels: false,
            legend: {
                display: true,
                position: 'right' //could be 'left, right'
            },
            innerRadius: 0, // applicable on pieCharts, can be a percentage like '50%'
            lineLegend: 'traditional', // can be also 'lineEnd' or 'traditional', defaults to 'lineEnd'
            lineCurveType: 'linear' // can be also 'linear', 'step', 'basis', 'bundle', 'cardinal', 'monotone', defaults to 'linear'
//        mouseover: function() {},
//        mouseout: function() {},
//        click: function() {}
        };




        var chartFormatTool1 = function(chartHttpData, decimalNumber){
            // 使用angular-chart 插件的数据格式

            chartResult.series = [];
            chartResult.data = [];

            if(angular.isUndefined(chartHttpData.periods)){
                // 如果periods 没有定义则是普通的图表,不带有系列的图表 目前仅仅有C44 和 B34
                angular.forEach(chartHttpData.chartData, function(value, key) {
                    if(angular.isUndefined(value.segmentName)){
                        // 判断是否是Segment Leader Top5 的图表还是SKUName的图表

                        if(chartResult.series.indexOf(value.SKUName.substring(0,1)) == -1 ){
                            chartResult.series.push(value.SKUName.substring(0,1));
                        }
                    }else{
                        // C44 segment_value_share_total_market
                        chartResult.series.push(showTranslateTextConsumerSegmentName(value.segmentName));
                    }
                });

                angular.forEach(chartHttpData.chartData, function(value, key) {
                    var oneBarData = {
                        x : 0, //Round Name
                        y : []
                    };

                    if(angular.isUndefined(value.segmentName) ){
                        // 这里处理原本处理C1 但已不用, C1处理已放到 chartFormatTool2
                        oneBarData.x = value.SKUName;

                        var index = chartResult.series.indexOf(value.SKUName.substring(0,1));
                        // 插入空数据占位, 用来显示不同颜色
                        if( index !== -1){

                            for (var i = 0; i <= index; i++) {
                                if(i == index){
                                    if(decimalNumber === 0){
                                        oneBarData.y.push(Math.round(value.valueSegmentShare * 100) / 100 );
                                    }else{
                                        oneBarData.y.push(Math.round(value.valueSegmentShare * 10000) / Math.pow(10, Number(decimalNumber)) );
                                    }

                                }else{
                                    oneBarData.y.push(0);
                                }
                            }
                        }

                    }else{
                        // 这里处理C44
                        oneBarData.x = showTranslateTextConsumerSegmentName(value.segmentName);

                        if(decimalNumber === 0){
                            oneBarData.y.push(Math.round(value.value * 100) / 100 );
                        }else{
                            oneBarData.y.push( Math.round(value.value * 10000) / Math.pow(10, Number(decimalNumber)) );
                        }
                    }

                    chartResult.data.push(oneBarData);
                });
                return angular.copy(chartResult);


            }else if(angular.isArray(chartHttpData.periods) ){
                // 如果periods 有定义 则是带有系列的图表 包括图表 B1 B3 和 C4
                angular.forEach(chartHttpData.periods, function(value, key) {

                    var oneLineData = {
//                    x : "period" + value.toString(), //Round Name
                        x : value.toString(), //Round Name
                        y : angular.copy(chartHttpData.chartData[key])
                    };

                    angular.forEach(oneLineData.y, function(value, key) {
                        if(decimalNumber === 0){
                            oneLineData.y[key] = Math.round(value * 100) / 100;
                        }else{
                            oneLineData.y[key] = Math.round(value * 10000 )/Math.pow(10, Number(decimalNumber));
                        }
                    });

                    chartResult.data.push(oneLineData);
                });

                // 判断是 company的图表还是 消费者群体的图表
                if(angular.isUndefined(chartHttpData.companyNames)){
                    angular.forEach(chartHttpData.segmentNames, function(value, key) {
                        chartResult.series.push(showTranslateTextConsumerSegmentName(value));
                    });

                }else{
                    angular.forEach(chartHttpData.companyNames, function(value, key) {
                        chartResult.series.push(showTranslateTextCompanyName(value));
                    });
                }

                return angular.copy(chartResult);

            }else{
                console.log('chart Data format is wrong !');
                return '';
            }
        };


        var chartFormatTool2 = function(chartHttpData, decimalNumber){
            // 使用angular-chart 插件的数据格式 Bar Chart  For Segment Leader Top Chart

            chartResult.series = ['justoneseries'];
            chartResult.data = [];


            function showSkuColor(fieldname) {

                var colorsRGB =  [
                    'rgb(0,76,229)',
                    'rgb(187,0,0)',
                    'rgb(255,188,1)',
                    'rgb(51,153,51)',
                    'rgb(153,0,153)',
                    'rgb(255,82,0)'
                ];

                var names = {
                    'A': function() {
                        return colorsRGB[0];
                    },
                    'B': function() {
                        return colorsRGB[1];
                    },
                    'C': function() {
                        return colorsRGB[2];
                    },
                    'D': function() {
                        return colorsRGB[3];
                    },
                    'E': function() {
                        return colorsRGB[4];
                    },
                    'F': function() {
                        return colorsRGB[5];
                    }

                };
                if (typeof names[fieldname] !== 'function') {
                    return false;
                }
                return names[fieldname]();
            }

            if(angular.isArray(chartHttpData)){

                angular.forEach(chartHttpData, function(period, keyperiod) {
                    var periodData = {
                        period : period.period,
                        data : []
                    };

                    angular.forEach(period.chartData, function(value, key) {
                        var oneBarData = {
                            x : "", //SKU Name
                            y : [],
                            color : 'rgb(57,181,74)'
                        };

                        if(angular.isUndefined(value.segmentName) ){
                            oneBarData.x = value.SKUName;

                            if(decimalNumber === 0){
                                oneBarData.y.push(Math.round(value.valueSegmentShare * 100) / 100 );
                            }else{
                                oneBarData.y.push(Math.round(value.valueSegmentShare * 10000) / Math.pow(10, Number(decimalNumber)) );
                            }

                            oneBarData.color = showSkuColor(value.SKUName.substring(0,1));
                        }

                        periodData.data.push(oneBarData);
                    });

                    chartResult.data.push(periodData);
                });

            }
            return angular.copy(chartResult);

        };



        var chartFormatTool3 = function(chartHttpData){
            // 使用angular-chart 插件的数据格式  FOR Report B2 Competitor Intelligence , C3 Segment Distributions , C5 Market Trends
            chartResult.series = [];
            chartResult.data = [];

            if(angular.isUndefined(chartHttpData[0].data)){
                // 这里处理C3  tableC3 Segment Distribution
                angular.forEach(chartHttpData[0], function(value, key) {
                    if(key !== 'period' && key !=='$$hashKey'){
                        chartResult.series.push(showTranslateTextConsumerSegmentName(key));
                    }
                });

                angular.forEach(chartHttpData, function(period, key) {

                    var oneBarData = {
                        x : 0, //Round Name
                        y : []
                    };

                    oneBarData.x = period.period;
                    angular.forEach(period, function(value, key) {
                        if(key !== 'period' && key !=='$$hashKey'){
                            oneBarData.y.push(Math.round(value * 10000 ) / 10000);
                        }
                    });

                    chartResult.data.push(oneBarData);
                });

            }else{
                // 这里处理B2  tableB2 Competitor Intelligence 或 C5 Market Trends
                angular.forEach(chartHttpData[0].data, function(period, key) {

                    var oneBarData = {
                        x : 0, //Round Name
                        y : []
                    };

                    oneBarData.x = period.name;
                    chartResult.data.push(oneBarData);
                });

                angular.forEach(chartHttpData, function(value, key) {
                    if(!angular.isUndefined(value.SKUName)){
                        chartResult.series.push(value.SKUName);
                    }
                    if(!angular.isUndefined(value.brandName)){
                        chartResult.series.push(value.brandName);
                    }
                    if(!angular.isUndefined(value.companyName)){
                        chartResult.series.push(showTranslateTextCompanyName(value.companyName));
                    }


                    angular.forEach(value.data, function(period, key) {
                        chartResult.data[key].y.push(Math.round(period.value * 100 ) / 100);
                    });

                });
            }
            return angular.copy(chartResult);
        };



        var chartFormatTool4 = function(chartHttpData) {
            // 使用angular-nvd3 插件的数据格式 Stacked Multi Bar Chart

            chartResult.series = [];
            chartResult.data = [];

            if(angular.isArray(chartHttpData.SKUs) ){
                angular.forEach(chartHttpData.SKUs[0].inventoryData, function(value, key) {
                    var oneSeries = {
                        "key": showTranslateTextInventoryReport(value.inventoryName),
                        "values": []
                    };
                    if(key !== 0){
                        chartResult.data.push(oneSeries);
                        chartResult.series.push(showTranslateTextInventoryReport(value.inventoryName));
                    }

                });

                angular.forEach(chartHttpData.SKUs, function(value, key) {
//                    var oneLineData1 = []; // Close To EXpire Inventory
//                    oneLineData1.push( value.SKUName );
//                    oneLineData1.push( angular.copy(Math.round(value.inventoryData[0].inventoryValue * 100) / 100 ) );

                    var oneLineData2 = []; // Previous Inventory
                    oneLineData2.push( value.SKUName );
                    oneLineData2.push( angular.copy(Math.round(value.inventoryData[1].inventoryValue * 100) / 100 ) );

                    var oneLineData3 = []; // Fresh Inventory
                    oneLineData3.push( value.SKUName );
                    oneLineData3.push( angular.copy(Math.round(value.inventoryData[2].inventoryValue * 100) / 100 ) );

//                    chartResult.data[0].values.push(oneLineData1);
                    chartResult.data[0].values.push(oneLineData2);
                    chartResult.data[1].values.push(oneLineData3);

                });
                return angular.copy(chartResult.data);
            }

        };


        var chartFormatTool5 = function(chartHttpData) {
            // 使用angular-nvd3 插件的数据格式   only for C2 Perception Maps Scatter Chart 散点图
//        chartResult.series = [];
//        chartResult.data = [];

            chartResult.series = [];
            chartResult.data = [];

            if(angular.isArray(chartHttpData.periods) ){
                // 处理 exogenous
                var oneSegment = {
                    "key" : showTranslateTextSegmentName(),
                    "values" : []
                };

                angular.forEach(chartHttpData.exogenous, function(value, key) {
                    var oneLineData = {
                        'x' : Math.round(value.valuePerception * 100) / 100,
                        'y' : Math.round(value.imagePerception * 100) / 100,
                        'size' : 0.5,
                        'name' : showTranslateTextConsumerSegmentName(value.segmentName),
                        'tooltips' : [],
                        'shape' : 'diamond'
                    };

                    oneSegment.values.push(oneLineData);
                });

                // 处理 periods 数据
                angular.forEach(chartHttpData.periods, function(period, keyperiod) {
                    var perioddata = {
                        period : period.period,
                        dataSKU : [],
                        dataBrand : []
                    };

                    angular.forEach(period.allCompanyData, function(value, key) {
                        var oneCompanySku = {
                            "key" : showTranslateTextCompanyName(value.companyName),
                            "values" : []
                        };

                        var oneCompanyBrand = {
                            "key" : showTranslateTextCompanyName(value.companyName),
                            "values" : []
                        };

                        angular.forEach(value.SKUs, function(valueSku, keySku) {
                            var oneLineSku1 = {
                                'x' : Math.round(valueSku.valuePerception * 100 + Math.random() * 10 + Math.random()  ) / 100,
                                'y' : Math.round(valueSku.imagePerception * 100 + Math.random() * 10 + Math.random()  ) / 100,
                                'size' : 0.6,
                                'SKUName' : valueSku.SKUName,
                                'name' : valueSku.SKUName,
                                'CompanyName' : value.companyName,
                                'tooltips' : valueSku.tooltips,
                                'shape' : 'circle'
                            };

                            oneCompanySku.values.push(oneLineSku1);
                        });

                        angular.forEach(value.brands, function(valueBrand, keyBrand) {
                            var oneLineBrand1 = {
                                'x' : Math.round(valueBrand.valuePerception * 100) / 100,
                                'y' : Math.round(valueBrand.imagePerception * 100) / 100,
                                'size' : 0.6,
                                'BrandName' : valueBrand.brandName,
                                'name' : valueBrand.brandName,
                                'CompanyName' : value.companyName,
                                'tooltips' : [],
                                'shape' : 'circle'
                            };

                            oneCompanyBrand.values.push(oneLineBrand1);
                        });

                        perioddata.dataSKU.push(oneCompanySku);
                        perioddata.dataBrand.push(oneCompanyBrand);
                    });

                    perioddata.dataSKU.push(oneSegment);
                    perioddata.dataBrand.push(oneSegment);

                    chartResult.data.push(perioddata);

                });


                return angular.copy(chartResult);
            }
        };


        var factory = {

            getChartConfig1 : function(){
                return angular.copy(chartConfig1);
            },
            getChartConfig2 : function(){
                return angular.copy(chartConfig2);
            },
            getChartConfig3 : function(){
                return angular.copy(chartConfig3);
            },
            // Chart For Report B2, C3, C5
            formatChartData : function(data){

                return chartFormatTool3(data);
            },


            // Chart A3
            inventoryReport : function(){
                return $translate(['ReportInventoryReportLabelCloseToExpireInventory',
                    'ReportInventoryReportLabelPreviousInventory',
                    'ReportInventoryReportLabelFreshInventory',
                    'HomePageSecondMenuBarLabelsCompany',
                    'ReportPerceptionMapAxisLabelSegment',
                    'HomePageSegmentLabelPriceSensitive',
                    'HomePageSegmentLabelPretenders',
                    'HomePageSegmentLabelModerate',
                    'HomePageSegmentLabelGoodLife',
                    'HomePageSegmentLabelUltimate',
                    'HomePageSegmentLabelPragmatic',
                    'HomePageSegmentLabelAllSegments'
                ]).then(function (translations) {

                    translateText.ReportInventoryReportLabelCloseToExpireInventory = translations.ReportInventoryReportLabelCloseToExpireInventory;
                    translateText.ReportInventoryReportLabelPreviousInventory = translations.ReportInventoryReportLabelPreviousInventory;
                    translateText.ReportInventoryReportLabelFreshInventory = translations.ReportInventoryReportLabelFreshInventory;
                    translateText.HomePageSecondMenuBarLabelsCompany = translations.HomePageSecondMenuBarLabelsCompany;
                    translateText.ReportPerceptionMapAxisLabelSegment = translations.ReportPerceptionMapAxisLabelSegment;
                    translateText.HomePageSegmentLabelPriceSensitive = translations.HomePageSegmentLabelPriceSensitive;
                    translateText.HomePageSegmentLabelPretenders = translations.HomePageSegmentLabelPretenders;
                    translateText.HomePageSegmentLabelModerate = translations.HomePageSegmentLabelModerate;
                    translateText.HomePageSegmentLabelGoodLife = translations.HomePageSegmentLabelGoodLife;
                    translateText.HomePageSegmentLabelUltimate = translations.HomePageSegmentLabelUltimate;
                    translateText.HomePageSegmentLabelPragmatic = translations.HomePageSegmentLabelPragmatic;
                    translateText.HomePageSegmentLabelAllSegments = translations.HomePageSegmentLabelAllSegments;

                    return  $http.get(apiPath + 'chart/inventory_report');
                }).then(function(result){
//                console.log(result.data);
                    return chartFormatTool4(result.data);
                })["catch"](errorHandler);
            },

            // Chart B1
            marketShareInValue : function(){
                return $http.get(apiPath + 'chart/market_share_in_value').then(function(result){
//                console.log(result.data);
                    return chartFormatTool1(result.data, 2);
                })["catch"](errorHandler);
            },

            marketShareInVolume : function(){
                return $http.get(apiPath + 'chart/market_share_in_volume').then(function(result){
//                console.log(result.data);
                    return chartFormatTool1(result.data, 2);
                })["catch"](errorHandler);
            },

            mindSpaceShare : function(){
                return $http.get(apiPath + 'chart/mind_space_share').then(function(result){
//                console.log(result.data);
                    return chartFormatTool1(result.data, 2);
                })["catch"](errorHandler);
            },

            shelfSpaceShare : function(){
                return $http.get(apiPath + 'chart/shelf_space_share').then(function(result){
//                console.log(result.data);
                    return chartFormatTool1(result.data, 2);
                })["catch"](errorHandler);
            },


            // Chart B3
            totalInvestment : function(){
                return $http.get(apiPath + 'chart/total_investment').then(function(result){
//                console.log(result.data);
                    return chartFormatTool1(result.data, 0);
                })["catch"](errorHandler);
            },

            netProfitByCompanies : function(){
                return $http.get(apiPath + 'chart/net_profit_by_companies').then(function(result){
//                console.log(result.data);
                    return chartFormatTool1(result.data, 0);
                })["catch"](errorHandler);
            },

            returnOnInvestment : function(){
                return $http.get(apiPath + 'chart/return_on_investment').then(function(result){
//                console.log(result.data);
                    return chartFormatTool1(result.data, 0);
                })["catch"](errorHandler);
            },

            investmentsVersusBudget : function(){
                return $http.get(apiPath + 'chart/investments_versus_budget').then(function(result){
//                console.log(result.data);
                    return chartFormatTool1(result.data, 0);
                })["catch"](errorHandler);
            },


            // Chart B4
            marketSalesValue : function(){
                return $http.get(apiPath + 'chart/market_sales_value').then(function(result){
//                console.log(result.data);
                    return chartFormatTool1(result.data, 0);
                })["catch"](errorHandler);
            },

            marketSalesVolume : function(){
                return $http.get(apiPath + 'chart/market_sales_volume').then(function(result){
//                console.log(result.data);
                    return chartFormatTool1(result.data, 0);
                })["catch"](errorHandler);
            },

            totalInventoryAtFactory : function(){
                return $http.get(apiPath + 'chart/total_inventory_at_factory').then(function(result){
//                console.log(result.data);
                    return chartFormatTool1(result.data, 0);
                })["catch"](errorHandler);
            },

            totalInventoryAtTrade : function(){
                return $http.get(apiPath + 'chart/total_inventory_at_trade').then(function(result){
//                console.log(result.data);
                    return chartFormatTool1(result.data, 0);
                })["catch"](errorHandler);
            },


            // Chart C1
            segmentsLeadersByValuePriceSensitive : function(){
                return $http.get(apiPath + 'chart/segments_leaders_by_value_price_sensitive').then(function(result){
//                console.log(result.data);
                    return chartFormatTool2(result.data, 2);
                })["catch"](errorHandler);
            },

            segmentsLeadersByValuePretenders : function(){
                return $http.get(apiPath + 'chart/segments_leaders_by_value_pretenders').then(function(result){
//                console.log(result.data);
                    return chartFormatTool2(result.data, 2);
                })["catch"](errorHandler);
            },

            segmentsLeadersByValueModerate : function(){
                return $http.get(apiPath + 'chart/segments_leaders_by_value_moderate').then(function(result){
//                console.log(result.data);
                    return chartFormatTool2(result.data, 2);
                })["catch"](errorHandler);
            },

            segmentsLeadersByValueGoodLife : function(){
                return $http.get(apiPath + 'chart/segments_leaders_by_value_good_life').then(function(result){
//                console.log(result.data);
                    return chartFormatTool2(result.data, 2);
                })["catch"](errorHandler);
            },

            segmentsLeadersByValueUltimate : function(){
                return $http.get(apiPath + 'chart/segments_leaders_by_value_ultimate').then(function(result){
//                console.log(result.data);
                    return chartFormatTool2(result.data, 2);
                })["catch"](errorHandler);
            },

            segmentsLeadersByValuePragmatic : function(){
                return $http.get(apiPath + 'chart/segments_leaders_by_value_pragmatic').then(function(result){
//                console.log(result.data);
                    return chartFormatTool2(result.data, 2);
                })["catch"](errorHandler);
            },


            // Chart C2
            perceptionMap : function(){
                return $http.get(apiPath + 'chart/perception_map').then(function(result){
                    return chartFormatTool5(result.data);
                })["catch"](errorHandler);
            },


            // Chart C4
            growthRateInVolume : function(){
                return $http.get(apiPath + 'chart/growth_rate_in_volume').then(function(result){
//                console.log(result.data);
                    return chartFormatTool1(result.data, 0);
                })["catch"](errorHandler);
            },

            growthRateInValue : function(){
                return $http.get(apiPath + 'chart/growth_rate_in_value').then(function(result){
//                console.log(result.data);
                    return chartFormatTool1(result.data, 0);
                })["catch"](errorHandler);
            },

            netMarketPrice : function(){
                return $http.get(apiPath + 'chart/net_market_price').then(function(result){
//                console.log(result.data);
                    return chartFormatTool1(result.data, 0);
                })["catch"](errorHandler);
            },

            segmentValueShareTotalMarket : function(){
                return $http.get(apiPath + 'chart/segment_value_share_total_market').then(function(result){
//                console.log(result.data);
                    return chartFormatTool1(result.data, 2);
                })["catch"](errorHandler);
            }
        };

        return factory;
    }



    function tableReportModel($http){

        var tableResult = {
            series: [],
            data: []
        };

        var factory = {


            // Table Report A1
            companyStatus : function(){
                return $http.get(apiPath + 'report/company_status').then(function(result){
//                console.log(result.data);

                    return result.data;
                })["catch"](errorHandler);
            },

            // Table Report A2
            financialReport : function(){
                return $http.get(apiPath + 'report/financial_report').then(function(result){
//                console.log(result.data);

                    return result.data;
                })["catch"](errorHandler);
            },

            // Table Report B2
            profitabilityEvolution : function(){
                return $http.get(apiPath + 'report/profitability_evolution').then(function(result){
//                console.log(result.data);

                    return result.data;
                })["catch"](errorHandler);
            },

            // Table Report B2
            competitorIntelligence : function(){
                return $http.get(apiPath + 'report/competitor_intelligence').then(function(result){
//                console.log(result.data);

                    return result.data;
                })["catch"](errorHandler);
            },

            // Table Report C3
            segmentDistribution : function(){
                return $http.get(apiPath + 'report/segment_distribution').then(function(result){
//                console.log(result.data);

                    return result.data;
                })["catch"](errorHandler);
            },

            // Table Report C5
            marketTrends : function(){
                return $http.get(apiPath + 'report/market_trends').then(function(result){
//                console.log(result.data);

                    return result.data;
                })["catch"](errorHandler);
            },

            // Table Report C6
            marketIndicators : function(){
                return $http.get(apiPath + 'report/market_indicators').then(function(result){
//                console.log(result.data);

                    return result.data;
                })["catch"](errorHandler);
            }
        };

        return factory;
    }



    function helpModel($http){

        var factory = {

            getFAQ : function(){
                return $http.get(apiPath + 'faq').then(function(result){
                    return result.data;
                })["catch"](errorHandler);
            },
            getManualChinese : function(){
                return $http.get('/marksimos/manual/zh_CN').then(function(result){
                    return result.data;
                })["catch"](errorHandler);
            },
            getManualEnglish : function(){
                return $http.get('/marksimos/manual/en_US').then(function(result){
                    return result.data;
                })["catch"](errorHandler);
            }

        };
        return factory;
    }






    /*JSONKit pretty isVisible mdParse sanitize for markdown*/
    angular.module('marksimos.model').factory('JSONKit', function () {
        return window.JSONKit;
    });

    angular.module('marksimos.model').factory('pretty', function () {
        return window.prettyPrint;
    });

    angular.module('marksimos.model').factory('isVisible', function () {
        return function (element) {
            var rect = element[0].getBoundingClientRect();
            return Boolean(rect.bottom - rect.top);
        };
    });

    angular.module('marksimos.model').factory('mdParse', ['JSONKit',
        function (JSONKit) {
            return function (html) {
                return window.marked(JSONKit.toStr(html));
            };
        }
    ]);

    angular.module('marksimos.model').factory('sanitize', ['JSONKit',
        function (JSONKit) {

            /**
             * Copyright (c) 2010 by Gabriel Birke
             *
             * Permission is hereby granted, free of charge, to any person obtaining a copy
             * of this software and associated documentation files (the 'Software'), to deal
             * in the Software without restriction, including without limitation the rights
             * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
             * copies of the Software, and to permit persons to whom the Software is
             * furnished to do so, subject to the following conditions:
             *
             * The above copyright notice and this permission notice shall be included in all
             * copies or substantial portions of the Software.
             *
             * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
             * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
             * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
             * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
             * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
             * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
             * SOFTWARE.
             */

            function Sanitize(){
                var i, e, options;
                options = arguments[0] || {};
                this.config = {};
                this.config.elements = options.elements ? options.elements : [];
                this.config.attributes = options.attributes ? options.attributes : {};
                this.config.attributes[Sanitize.ALL] = this.config.attributes[Sanitize.ALL] ? this.config.attributes[Sanitize.ALL] : [];
                this.config.allow_comments = options.allow_comments ? options.allow_comments : false;
                this.allowed_elements = {};
                this.config.protocols = options.protocols ? options.protocols : {};
                this.config.add_attributes = options.add_attributes ? options.add_attributes  : {};
                this.dom = options.dom ? options.dom : document;
                for(i=0;i<this.config.elements.length;i++) {
                    this.allowed_elements[this.config.elements[i]] = true;
                }
                this.config.remove_element_contents = {};
                this.config.remove_all_contents = false;
                if(options.remove_contents) {

                    if(options.remove_contents instanceof Array) {
                        for(i=0;i<options.remove_contents.length;i++) {
                            this.config.remove_element_contents[options.remove_contents[i]] = true;
                        }
                    }
                    else {
                        this.config.remove_all_contents = true;
                    }
                }
                this.transformers = options.transformers ? options.transformers : [];
            }

            Sanitize.REGEX_PROTOCOL = /^([A-Za-z0-9\+\-\.\&\;\*\s]*?)(?:\:|&*0*58|&*x0*3a)/i;
            Sanitize.RELATIVE = '__relative__'; // emulate Ruby symbol with string constant

            Sanitize.prototype.clean_node = function(container) {
                var that = this;
                var fragment = that.dom.createDocumentFragment();
                that.current_element = fragment;
                that.whitelist_nodes = [];



                /**
                 * Utility function to check if an element exists in an array
                 */
                function _array_index(needle, haystack) {
                    var i;
                    for(i=0; i < haystack.length; i++) {
                        if(haystack[i] == needle)
                            return i;
                    }
                    return -1;
                }

                function _merge_arrays_uniq() {
                    var result = [];
                    var uniq_hash = {};
                    var i,j;
                    for(i=0;i<arguments.length;i++) {
                        if(!arguments[i] || !arguments[i].length)
                            continue;
                        for(j=0;j<arguments[i].length;j++) {
                            if(uniq_hash[arguments[i][j]])
                                continue;
                            uniq_hash[arguments[i][j]] = true;
                            result.push(arguments[i][j]);
                        }
                    }
                    return result;
                }

                /**
                 * Clean function that checks the different node types and cleans them up accordingly
                 * @param elem DOM Node to clean
                 */
                function _clean(elem) {
                    var clone;
                    switch(elem.nodeType) {
                        // Element
                        case 1:
                            _clean_element.call(that, elem);
                            break;
                        // Text
                        case 3:
                            clone = elem.cloneNode(false);
                            that.current_element.appendChild(clone);
                            break;
                        // Entity-Reference (normally not used)
                        case 5:
                            clone = elem.cloneNode(false);
                            that.current_element.appendChild(clone);
                            break;
                        // Comment
                        case 8:
                            if(that.config.allow_comments) {
                                clone = elem.cloneNode(false);
                                that.current_element.appendChild(clone);
                            }
                            break;
                        default:
                            if (console && console.log) console.log("unknown node type", elem.nodeType);
                            break;
                    }

                }

                function _clean_element(elem) {
                    var i, j, clone, parent_element, name, allowed_attributes, attr, attr_name, attr_node, protocols, del, attr_ok;
                    var transform = _transform_element.call(that, elem);

                    elem = transform.node;
                    name = elem.nodeName.toLowerCase();

                    // check if element itself is allowed
                    parent_element = that.current_element;
                    if(that.allowed_elements[name] || transform.whitelist) {
                        that.current_element = that.dom.createElement(elem.nodeName);
                        parent_element.appendChild(that.current_element);

                        // clean attributes
                        var attrs = that.config.attributes;
                        allowed_attributes = _merge_arrays_uniq(attrs[name], attrs['__ALL__'], transform.attr_whitelist);
                        for(i=0;i<allowed_attributes.length;i++) {
                            attr_name = allowed_attributes[i];
                            attr = elem.attributes[attr_name];
                            if(attr) {
                                attr_ok = true;
                                // Check protocol attributes for valid protocol
                                if(that.config.protocols[name] && that.config.protocols[name][attr_name]) {
                                    protocols = that.config.protocols[name][attr_name];
                                    del = attr.value.toLowerCase().match(Sanitize.REGEX_PROTOCOL);
                                    if(del) {
                                        attr_ok = (_array_index(del[1], protocols) != -1);
                                    }
                                    else {
                                        attr_ok = (_array_index(Sanitize.RELATIVE, protocols) != -1);
                                    }
                                }
                                if(attr_ok) {
                                    attr_node = document.createAttribute(attr_name);
                                    attr_node.value = attr.value;
                                    that.current_element.setAttributeNode(attr_node);
                                }
                            }
                        }

                        // Add attributes
                        if(that.config.add_attributes[name]) {
                            for(attr_name in that.config.add_attributes[name]) {
                                attr_node = document.createAttribute(attr_name);
                                attr_node.value = that.config.add_attributes[name][attr_name];
                                that.current_element.setAttributeNode(attr_node);
                            }
                        }
                    } // End checking if element is allowed
                    // If this node is in the dynamic whitelist array (built at runtime by
                    // transformers), let it live with all of its attributes intact.
                    else if(_array_index(elem, that.whitelist_nodes) != -1) {
                        that.current_element = elem.cloneNode(true);
                        // Remove child nodes, they will be sanitiazied and added by other code
                        while(that.current_element.childNodes.length > 0) {
                            that.current_element.removeChild(that.current_element.firstChild);
                        }
                        parent_element.appendChild(that.current_element);
                    }

                    // iterate over child nodes
                    if(!that.config.remove_all_contents && !that.config.remove_element_contents[name]) {
                        for(i=0;i<elem.childNodes.length;i++) {
                            _clean.call(that, elem.childNodes[i]);
                        }
                    }

                    // some versions of IE don't support normalize.
                    if(that.current_element.normalize) {
                        that.current_element.normalize();
                    }
                    that.current_element = parent_element;
                } // END clean_element function

                function _transform_element(node) {
                    var output = {
                        attr_whitelist:[],
                        node: node,
                        whitelist: false
                    };
                    var i, j, transform;
                    for(i=0;i<that.transformers.length;i++) {
                        transform = that.transformers[i]({
                            allowed_elements: that.allowed_elements,
                            config: that.config,
                            node: node,
                            node_name: node.nodeName.toLowerCase(),
                            whitelist_nodes: that.whitelist_nodes,
                            dom: that.dom
                        });
                        if (transform === null)
                            continue;
                        else if(typeof transform == 'object') {
                            if(transform.whitelist_nodes && transform.whitelist_nodes instanceof Array) {
                                for(j=0;j<transform.whitelist_nodes.length;j++) {
                                    if(_array_index(transform.whitelist_nodes[j], that.whitelist_nodes) == -1) {
                                        that.whitelist_nodes.push(transform.whitelist_nodes[j]);
                                    }
                                }
                            }
                            output.whitelist = transform.whitelist ? true : false;
                            if(transform.attr_whitelist) {
                                output.attr_whitelist = _merge_arrays_uniq(output.attr_whitelist, transform.attr_whitelist);
                            }
                            output.node = transform.node ? transform.node : output.node;
                        }
                        else {
                            throw new Error("transformer output must be an object or null");
                        }
                    }
                    return output;
                }

                for(var i=0;i<container.childNodes.length;i++) {
                    _clean.call(this, container.childNodes[i]);
                }

                if(fragment.normalize) {
                    fragment.normalize();
                }

                return fragment;

            };

            if(!Sanitize.Config) {
                Sanitize.Config = {};
            }

            Sanitize.Config.BASIC = {
                elements: [
                    'a', 'b', 'blockquote', 'br', 'cite', 'code', 'dd', 'dl', 'dt', 'em',
                    'i', 'li', 'ol', 'p', 'pre', 'q', 'small', 'strike', 'strong', 'sub',
                    'sup', 'u', 'ul'],

                attributes: {
                    'a'         : ['href'],
                    'blockquote': ['cite'],
                    'q'         : ['cite']
                },

                add_attributes: {
                    'a': {'rel': 'nofollow'}
                },

                protocols: {
                    'a'         : {'href': ['ftp', 'http', 'https', 'mailto', Sanitize.RELATIVE]},
                    'blockquote': {'cite': ['http', 'https', Sanitize.RELATIVE]},
                    'q'         : {'cite': ['http', 'https', Sanitize.RELATIVE]}
                }
            };

            Sanitize.Config.RELAXED = {
                elements: [
                    'a', 'b', 'blockquote', 'br', 'caption', 'cite', 'code', 'col',
                    'colgroup', 'dd', 'dl', 'dt', 'em', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',
                    'i', 'img', 'li', 'ol', 'p', 'pre', 'q', 'small', 'strike', 'strong',
                    'sub', 'sup', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'u',
                    'ul', 'div'],

                attributes: {
                    'a'         : ['href', 'title'],
                    'blockquote': ['cite'],
                    'col'       : ['span', 'width'],
                    'colgroup'  : ['span', 'width'],
                    'img'       : ['align', 'alt', 'height', 'src', 'title', 'width'],
                    'ol'        : ['start', 'type'],
                    'q'         : ['cite'],
                    'table'     : ['summary', 'width'],
                    'td'        : ['abbr', 'axis', 'colspan', 'rowspan', 'width'],
                    'th'        : ['abbr', 'axis', 'colspan', 'rowspan', 'scope',    'width'],
                    'ul'        : ['type'],
                    'div'       : ['class']
                },

                protocols: {
                    'a'         : {'href': ['ftp', 'http', 'https', 'mailto', Sanitize.RELATIVE]},
                    'blockquote': {'cite': ['http', 'https', Sanitize.RELATIVE]},
                    'img'       : {'src' : ['http', 'https', Sanitize.RELATIVE]},
                    'q'         : {'cite': ['http', 'https', Sanitize.RELATIVE]}
                }
            };

            Sanitize.Config.RESTRICTED = {
                elements: ['b', 'em', 'i', 'strong', 'u']
            };


            /********************  Ending of Sanitize ********************/


            var sanitize = [
                new Sanitize({}),
                new Sanitize(Sanitize.Config.RESTRICTED),
                new Sanitize(Sanitize.Config.BASIC),
                new Sanitize(Sanitize.Config.RELAXED)
            ];

            // level: 0, 1, 2, 3
            return function (html, level) {
                var innerDOM = document.createElement('div'),
                    outerDOM = document.createElement('div');
                level = level >= 0 ? level : 3;
                innerDOM.innerHTML = JSONKit.toStr(html);
                outerDOM.appendChild(sanitize[level].clean_node(innerDOM));
                return outerDOM.innerHTML;
            };
        }
    ]);



})();



























/**
 * Created by jinwyp on 7/8/14 and.
 */



/**
 * recommended
 *
 * no globals are left behind
 */

(function () {
    'use strict';


    angular.module('marksimos.translation', ['marksimos.model']);


    angular.module('marksimos.translation').config(['$translateProvider',  function($translateProvider){

    // Adding a translation table for the English language
        $translateProvider.translations('en_US', {

            //Labels for Login
            "LoginPageLabelWelcome"           : "Welcome !",
            "LoginPageLabelSignIn"            : "Sign In",
            "LoginPageLabelEmail"             : "Email :",
            "LoginPageLabelPassword"          : "Password :",
            "LoginPageLabelPasswordErrorInfo" : "Password Incorrect !",
            "LoginPageButtonSignIn"           : "Sign In",


            //Labels for Introduction
            "IntroPageSeminarListTitle" : "List of the Game Enrolled :",
            "IntroPageSeminarListLabelSeminarID" : "Seminar ID",
            "IntroPageSeminarListLabelSeminarDescription" : "Seminar Description",
            "IntroPageSeminarListLabelTotalRound" : "Total Round",
            "IntroPageSeminarListLabelCompetitor" : "Competitor",
            "IntroPageSeminarListLabelDateOfCommencement" : "Date of Commencement",
            "IntroPageSeminarListLabelSeminarStatus" : "Seminar Status",
            "IntroPageSeminarListLabelCountry" : "Country",
            "IntroPageSeminarListLabelProvince" : "Province(State)",
            "IntroPageSeminarListLabelCity" : "City",
            "IntroPageSeminarListLabelVenue" : "Venue",


            "IntroPageSentence1" : "Who am I?",
            "IntroPageSentence2" : "I am leading company",
            "IntroPageSentence3" : "I manage",
            "IntroPageSentence4" : "products",
            "IntroPageSentence5" : "under",
            "IntroPageSentence6" : "brands",
            "IntroPageSentence7" : "I compete with",
            "IntroPageSentence8" : "other companies",

            "IntroPageSentence21" : "My company’s mission is to get the",
            "IntroPageSentence22" : "highest Market Share",
            "IntroPageSentence23" : "and",
            "IntroPageSentence24" : "Profit",



            //Labels for Items on Home page - Top Menu Bar
            "HomePageMenuBarLabelsHome"     : "Home",
            "HomePageMenuBarLabelsReport"     : "Reports",
            "HomePageMenuBarLabelsDecision"   : "Decision",
            "HomePageMenuBarLabelsScore"      : "Score",
            "HomePageMenuBarLabelsLanguage"   : "Language",
            "HomePageMenuBarLabelsHelp"       : "Help",
            "HomePageMenuBarLabelsHelpFAQ"    : "FAQ",
            "HomePageMenuBarLabelsHelpVideo"  : "Video",
            "HomePageMenuBarLabelsHelpManual" : "Manual",
            "HomePageMenuBarLabelsAbout"      : "About MarkSimos",
            "HomePageMenuBarLabelsLogout"     : "Log Out",


            //Labels for Segment
            "HomePageSegmentLabelPriceSensitive" : "1 Price Sensitive",
            "HomePageSegmentLabelPretenders"     : "2 Pretenders",
            "HomePageSegmentLabelModerate"       : "3 Moderate",
            "HomePageSegmentLabelGoodLife"       : "4 Good Life",
            "HomePageSegmentLabelUltimate"       : "5 Ultimate",
            "HomePageSegmentLabelPragmatic"      : "6 Pragmatic",
            "HomePageSegmentLabelAllSegments"    : "All Segments",




            //Labels for Items on Home page - Second Menu Bar
            "HomePageSecondMenuBarLabelsCompany"           : "Company",
            "HomePageSecondMenuBarLabelsCompanies"         : "Companies",
            "HomePageSecondMenuBarLabelsTimeLeft"          : "left",
            "HomePageSecondMenuBarLabelsTimeLeftForSubmit" : "for submitting decision",
            "HomePageSecondMenuBarLabelsMission"           : "Mission: Market Share + Profit",
            "HomePageSecondMenuBarLabelsMakeDecision"      : "Make Decision",
            "HomePageSecondMenuBarCurrentPeriod"           : "Period",

            "HomePageSecondMenuBarCompareData"           : "Compare Data",

            //Labels for Items on Home page - Three Boxes
            "HomePageYourCompanyTableLabel"                 : "Your Company",
            "HomePageYourCompanyCompanyStatus"              : "Company Status",
            "HomePageYourCompanyFinancialReport"            : "Financial Report",
            "HomePageYourCompanyInventoryReport"            : "Inventory Report",
            "HomePageYourCompanyProfitabilityEvolution"     : "Profitability Evolution",
            "HomePageYourCompetitorTableLabel"              : "Your Competitor",
            "HomePageYourCompetitorMarketShare"             : "Market Share",
            "HomePageYourCompetitorCompetitorIntelligence"  : "Competitor Intelligence",
            "HomePageYourCompetitorInvestmentsandProfits"   : "Investments and Profits",
            "HomePageYourCompetitorMarketSalesandInventory" : "Market Sales and Inventory",
            "HomePageMarketLandscapeTableLabel"             : "Market Landscape",
            "HomePageMarketLandscapeSegmentLeaderTop5"      : "Segment Leader Top 5",
            "HomePageMarketLandscapePerceptionMap"          : "Perception Map",
            "HomePageMarketLandscapeSegmentDistributions"   : "Segment Distributions",
            "HomePageMarketLandscapeMarketEvolution"        : "Market Evolution",
            "HomePageMarketLandscapeMarketTrends"           : "Market Trends",
            "HomePageMarketLandscapeMarketIndicators"       : "Market Indicators",


            //Labels for Items on Reports page - reports menu
            "ReportYourCompany"                : "Your Company",
            "ReportMenuCompanyStatus"          : "Company Status",
            "ReportMenuFinancialReport"        : "Financial Report",
            "ReportMenuInventoryReport"        : "Inventory Report",
            "ReportMenuProfitabilityEvolution" : "Profitability Evolution",

            "ReportYourCompetitors"            : "Your Competitors",
            "ReportMenuMarketShare"            : "Market Share",
            "ReportMenuCompetitorIntelligence" : "Competitor Intelligence",
            "ReportMenuInvestmentProfits"      : "Investment & Profits",
            "ReportMenuMarketSalesInventory"   : "Market Sales & Inventory",

            "ReportMarketLandscape"            : "Market Landscape",
            "ReportMenuSegmentLeaderTop5"      : "Segment Leader Top5",
            "ReportMenuPerceptionMap"          : "Perception Map",
            "ReportMenuSegmentDistributions"   : "Segment Distributions",
            "ReportMenuMarketEvolution"        : "Market Evolution",
            "ReportMenuMarketTrends"           : "Market Trends",
            "ReportMenuMarketIndicator"        : "Market Indicator",



            //Labels for Company Status Report Tab Menu
            "ReportTabLabelSKU"    : "SKU",
            "ReportTabLabelBrand"  : "Brand",
            "ReportTabLabelGlobal" : "Global",

            "ReportTabLabelTableChartDisplayLine"  : "Line Chart",
            "ReportTabLabelTableChartDisplayBar"   : "Bar Chart",
            "ReportTabLabelTableChartDisplayPoint" : "Point Chart",
            "ReportTabLabelTableChartDisplayArea"  : "Area Chart",
            "ReportTabLabelTableChartDisplayPie"   : "Pie Chart",

            //Labels for Company Status Report - SKU Level
            "ReportCompanyStatusSKUQuarter" : "Quarter",

            "ReportCompanyStatusSKUMarketShareValue"                             : "Market Share (value %)",
            "ReportCompanyStatusSKUMarketShareVolume"                            : "Market Share (volume %)",
            "ReportCompanyStatusSKUMarketSalesVolumeStd"                         : "Market Sales Volume (mln std. packs)",
            "ReportCompanyStatusSKULostSalesVolumeDueToOOSStd"                   : "Lost Sales Volume due to OOS (mln std. packs)",
            "ReportCompanyStatusSKUNumericalDistribution"                        : "Numerical Distribution (%)",
            "ReportCompanyStatusSKUVolumeWeightedDistribution"                   : "Volume-weighted Distribution (%)",
            "ReportCompanyStatusSKUShelfSpace"                                   : "Shelf Space (%)",
            "ReportCompanyStatusSKUAwareness"                                    : "Awareness (%)",
            "ReportCompanyStatusSKUAverageNetMarketPrice"                        : "Average Net Market Price ($/std. pack)",
            "ReportCompanyStatusSKUAverageDisplayPrice"                          : "Average Display Price ($/std. pack)",
            "ReportCompanyStatusSKUPriceRankingIndex"                            : "Price Ranking Index",
            "ReportCompanyStatusSKUTargetConsumerSegment"                        : "Target Consumer Segment",
            "ReportCompanyStatusSKUTargetConsumerSegmentExpectedValuePerception" : "Target Consumer Segment Expected Value Perception",
            "ReportCompanyStatusSKUValuePerception"                              : "Value Perception",
            "ReportCompanyStatusSKUTargetConsumerSegmentExpectedImagePerception" : "Target Consumer Segment Expected Image Perception",
            "ReportCompanyStatusSKUImagePerception"                              : "Image Perception",

            "ReportCompanyStatusSKUIngredientsQualityIndex"	:	"Ingredients Quality Index",
            "ReportCompanyStatusSKUAppliedTechnologyIndex"	:	"Applied Technology Index",

            "ReportCompanyStatusSKUMarketSalesValue"        : "Market Sales Value ($ mln)",
            "ReportCompanyStatusSKUConsumerPricePromotions" : "Consumer Price Promotions ($ mln)",
            "ReportCompanyStatusSKUMarketNetSalesValue"     : "Market Net Sales Value ($ mln)",

            "ReportCompanyStatusSKULostSalesVolumeDueToOOS"    : "Lost Sales Volume due to OOS (mln packs)",
            "ReportCompanyStatusSKUNumberOfOutOfStockEpisodes" : "Number of Out-of-stock Episodes",

            "ReportCompanyStatusSKUMarketSalesVolume"             : "Market Sales Volume (mln packs)",
            "ReportCompanyStatusSKURetailersPurchasesVolume"      : "Retailers Purchases Volume (mln packs)",
            "ReportCompanyStatusSKUShipmentsToWholesalers"        : "Shipments to Wholesalers (mln packs)",
            "ReportCompanyStatusSKUProductionVolume"              : "Production Volume (mln packs)",
            "ReportCompanyStatusSKUInventoryVolumeAtManufacturer" : "Inventory Volume At Manufacturer (mln packs)",
            "ReportCompanyStatusSKUInventoryVolumeAtWholesalers"  : "Inventory Volume At Wholesalers (mln packs)",
            "ReportCompanyStatusSKUInventoryVolumeAtRetailers"    : "Inventory Volume At Retailers (mln packs)",

            "ReportCompanyStatusSKUStocksCoverAtRetailers"   : "Stocks Cover At Retailers (weeks)",
            "ReportCompanyStatusSKUStocksCoverAtWholesalers" : "Stocks Cover At Wholesalers (weeks)",

            //Labels for Company Status Report - Brand Level
            "ReportCompanyStatusBrandMarketShareValue"           : "Market Share (value %)",
            "ReportCompanyStatusBrandMarketShareVolume"          : "Market Share (volume %)",
            "ReportCompanyStatusBrandMarketSalesVolumeStd"       : "Market Sales Volume (mln std. packs)",
            "ReportCompanyStatusBrandLostSalesVolumeDueToOOSStd" : "Lost Sales Volume due to OOS (mln std. packs)",
            "ReportCompanyStatusBrandNumericalDistribution"      : "Numerical Distribution (%)",
            "ReportCompanyStatusBrandVolumeWeightedDistribution" : "Volume-weighted Distribution (%)",
            "ReportCompanyStatusBrandShelfSpace"                 : "Shelf Space (%)",
            "ReportCompanyStatusBrandAwareness"                  : "Awareness (%)",
            "ReportCompanyStatusBrandAverageNetMarketPrice"      : "Average Net Market Price ($/std. pack)",
            "ReportCompanyStatusBrandAverageDisplayPrice"        : "Average Display Price ($/std. pack)",
            "ReportCompanyStatusBrandPriceRankingIndex"          : "Price Ranking Index",
            "ReportCompanyStatusBrandValuePerception"            : "Value Perception",
            "ReportCompanyStatusBrandImagePerception"            : "Image Perception",
            "ReportCompanyStatusBrandIngredientsQualityIndex"    : "Ingredients Quality Index",
            "ReportCompanyStatusBrandAppliedTechnologyIndex"     : "Applied Technology Index",

            "ReportCompanyStatusBrandMarketSalesValue"        : "Market Sales Value ($ mln)",
            "ReportCompanyStatusBrandConsumerPricePromotions" : "Consumer Price Promotions ($ mln)",
            "ReportCompanyStatusBrandMarketNetSalesValue"     : "Market Net Sales Value ($ mln)",

            "ReportCompanyStatusBrandLostSalesVolumeDueToOOS"    : "Lost Sales Volume due to OOS (mln packs)",
            "ReportCompanyStatusBrandNumberOfOutOfStockEpisodes" : "Number of Out-of-stock Episodes",

            "ReportCompanyStatusBrandMarketSalesVolume"             : "Market Sales Volume (mln packs)",
            "ReportCompanyStatusBrandRetailersPurchasesVolume"      : "Retailers Purchases Volume (mln packs)",
            "ReportCompanyStatusBrandShipmentsToWholesalers"        : "Shipments to Wholesalers (mln packs)",
            "ReportCompanyStatusBrandProductionVolume"              : "Production Volume (mln packs)",
            "ReportCompanyStatusBrandInventoryVolumeAtManufacturer" : "Inventory Volume At Manufacturer (mln packs)",
            "ReportCompanyStatusBrandInventoryVolumeAtWholesalers"  : "Inventory Volume At Wholesalers (mln packs)",
            "ReportCompanyStatusBrandInventoryVolumeAtRetailers"    : "Inventory Volume At Retailers (mln packs)",

            "ReportCompanyStatusBrandStocksCoverAtRetailers"   : "Stocks Cover At Retailers (weeks)",
            "ReportCompanyStatusBrandStocksCoverAtWholesalers" : "Stocks Cover At Wholesalers (weeks)",

            //Labels for Company Status Report - Global Level
            "ReportCompanyStatusGlobalMarketShareValue"           : "Market Share (value %)",
            "ReportCompanyStatusGlobalMarketShareVolume"          : "Market Share (volume %)",
            "ReportCompanyStatusGlobalMarketSalesVolumeStd"       : "Market Sales Volume (mln std. packs)",
            "ReportCompanyStatusGlobalLostSalesVolumeDueToOOSStd" : "Lost Sales Volume due to OOS (mln std. packs)",
            "ReportCompanyStatusGlobalNumericalDistribution"      : "Numerical Distribution (%)",
            "ReportCompanyStatusGlobalVolumeWeightedDistribution" : "Volume-weighted Distribution (%)",
            "ReportCompanyStatusGlobalShelfSpace"                 : "Shelf Space (%)",
            "ReportCompanyStatusGlobalMindSpaceShare"             : "Mind Space Share (%)",
            "ReportCompanyStatusGlobalAverageNetMarketPrice"      : "Average Net Market Price ($/std. pack)",
            "ReportCompanyStatusGlobalAverageDisplayPrice"        : "Average Display Price ($/std. pack)",
            "ReportCompanyStatusGlobalIngredientsQualityIndex"    : "Ingredients Quality Index",
            "ReportCompanyStatusGlobalAppliedTechnologyIndex"     : "Applied Technology Index",

            "ReportCompanyStatusGlobalMarketSalesValue"	:	"Market Sales Value ($ mln)",
            "ReportCompanyStatusGlobalConsumerPricePromotions"	:	"Consumer Price Promotions ($ mln)",
            "ReportCompanyStatusGlobalMarketNetSalesValue"	:	"Market Net Sales Value ($ mln)",

            "ReportCompanyStatusGlobalLostSalesVolumeDueToOOS"	:	"Lost Sales Volume due to OOS (mln packs)",

            "ReportCompanyStatusGlobalMarketSalesVolume"	:	"Market Sales Volume (mln packs)",
            "ReportCompanyStatusGlobalRetailersPurchasesVolume"	:	"Retailers Purchases Volume (mln packs)",
            "ReportCompanyStatusGlobalShipmentsToWholesalers"	:	"Shipments to Wholesalers (mln packs)",
            "ReportCompanyStatusGlobalProductionVolume"	:	"Production Volume (mln packs)",
            "ReportCompanyStatusGlobalInventoryVolumeAtManufacturer"	:	"Inventory Volume At Manufacturer (mln packs)",
            "ReportCompanyStatusGlobalInventoryVolumeAtWholesalers"	:	"Inventory Volume At Wholesalers (mln packs)",
            "ReportCompanyStatusGlobalInventoryVolumeAtRetailers"	:	"Inventory Volume At Retailers (mln packs)",

            "ReportCompanyStatusGlobalStocksCoverAtRetailers"	:	"Stocks Cover At Retailers (weeks)",
            "ReportCompanyStatusGlobalStocksCoverAtWholesalers"	:	"Stocks Cover At Wholesalers (weeks)",

            //Labels for Financial Report - Brand Level
            "ReportFinancialReportBrandSalesValue"                           : "Sales Value ($ mln)",
            "ReportFinancialReportBrandChangeVersusPreviousPeriodSalesValue" : "(%) Change Versus Previous period",
            "ReportFinancialReportBrandShareInBrandTotalSalesValue"          : "Share In Brand Total Sales Value (%)",
            "ReportFinancialReportBrandCostOfGoodsSold"                      : "Cost of Goods Sold ($ mln)",
            "ReportFinancialReportBrandObsoleteGoodsCost"                    : "Obsolete Goods Cost ($ mln)",
            "ReportFinancialReportBrandDiscontinuedGoodsCost"                : "Discontinued Goods Cost ($ mln)",
            "ReportFinancialReportBrandInventoryHoldingCost"                 : "Inventory Holding Cost ($ mln)",
            "ReportFinancialReportBrandTotalMaterialCost"                    : "Total Material Cost ($ mln)",

            "ReportFinancialReportBrandGrossProfit"                           : "Gross Profit ($ mln)",
            "ReportFinancialReportBrandChangeVersusPreviousPeriodGrossProfit" : "(%) Change Versus Previous Period",
            "ReportFinancialReportBrandGrossProfitMargin"                     : "Gross Profit Margin (%)",
            "ReportFinancialReportBrandShareInBrandGrossProfitLosses"         : "Share In Brand Gross Profit/Losses (%)",

            "ReportFinancialReportBrandAdvertising"                                  : "Advertising ($ mln)",
            "ReportFinancialReportBrandConsumerPromotionCost"                        : "Consumer Promotion Cost ($ mln)",
            "ReportFinancialReportBrandTradeInvestment"                              : "Trade Investment ($ mln)",
            "ReportFinancialReportBrandSalesForceCost"                               : "Sales Force Cost ($ mln)",
            "ReportFinancialReportBrandAdditionalTradeMarginCost"                    : "Additional Trade Margin Cost ($ mln)",
            "ReportFinancialReportBrandVolumeDiscountCost"                           : "Volume Discount Cost ($ mln)",
            "ReportFinancialReportBrandTotalTradeAndMarketingExpenses"               : "Total Trade and Marketing Expenses ($ mln)",
            "ReportFinancialReportBrandTradeAndMarketingExpensesasaOfSales"          : "Trade and Marketing Expenses as a (%) of Sales",
            "ReportFinancialReportBrandShareOfTradeAndMarketingExpensesInBrandTotal" : "Share of Trade and Marketing Expenses in Brand Total (%)",

            "ReportFinancialReportBrandGeneralExpenses" : "General Expenses ($ mln)",
            "ReportFinancialReportBrandAmortisation"    : "Amortisation ($ mln)",

            "ReportFinancialReportBrandOperatingProfit"                           : "Operating Profit ($ mln)",
            "ReportFinancialReportBrandChangeVersusPreviousPeriodOperatingProfit" : "(%) Change Versus Previous period",
            "ReportFinancialReportBrandOperatingProfitMargin"                     : "Operating Profit Margin (%)",
            "ReportFinancialReportBrandShareInBrandOperatingProfitLoss"           : "Share in Brand Operating Profit/Loss (%)",

            "ReportFinancialReportBrandInterests"             : "Interests ($ mln)",
            "ReportFinancialReportBrandTaxes"                 : "Taxes ($ mln)",
            "ReportFinancialReportBrandExceptionalCostProfit" : "Exceptional Cost/Profit ($ mln)",

            "ReportFinancialReportBrandNetProfit"                           : "Net Profit ($ mln)",
            "ReportFinancialReportBrandChangeVersusPreviousPeriodNetProfit" : "(%) Change Versus Previous period",
            "ReportFinancialReportBrandNetProfitMargin"                     : "Net Profit Margin (%)",
            "ReportFinancialReportBrandShareInBrandNetProfitLoss"           : "Share in Brand Net Profit/Loss (%)",

            "ReportFinancialReportBrandProductionCost" : "Production Cost ($ mln)",
            "ReportFinancialReportBrandInventoryValue" : "Inventory Value ($ mln)",

            //Labels for Financial Report - All Brands
            "ReportFinancialReportAllBrandSalesValue"                           : "Sales Value ($ mln)",
            "ReportFinancialReportAllBrandChangeVersusPreviousPeriodSalesValue" : "(%) Change Versus Previous period",
            "ReportFinancialReportAllBrandShareInCompanyTotalSalesValue"        : "Share In Company Total Sales Value (%)",
            "ReportFinancialReportAllBrandCostOfGoodsSold"                      : "Cost of Goods Sold ($ mln)",
            "ReportFinancialReportAllBrandObsoleteGoodsCost"                    : "Obsolete Goods Cost ($ mln)",
            "ReportFinancialReportAllBrandDiscontinuedGoodsCost"                : "Discontinued Goods Cost ($ mln)",
            "ReportFinancialReportAllBrandInventoryHoldingCost"                 : "Inventory Holding Cost ($ mln)",
            "ReportFinancialReportAllBrandTotalMaterialCost"                    : "Total Material Cost ($ mln)",

            "ReportFinancialReportAllBrandGrossProfit"                           : "Gross Profit ($ mln)",
            "ReportFinancialReportAllBrandChangeVersusPreviousperiodGrossProfit" : "(%) Change Versus Previous period",
            "ReportFinancialReportAllBrandGrossProfitMargin"                     : "Gross Profit Margin (%)",
            "ReportFinancialReportAllBrandShareInCompanyGrossProfitLosses"       : "Share In Company Gross Profit/Losses (%)",

            "ReportFinancialReportAllBrandAdvertising"                                  : "Advertising ($ mln)",
            "ReportFinancialReportAllBrandConsumerPromotionCost"                        : "Consumer Promotion Cost ($ mln)",
            "ReportFinancialReportAllBrandTradeInvestment"                              : "Trade Investment ($ mln)",
            "ReportFinancialReportAllBrandSalesForceCost"                               : "Sales Force Cost ($ mln)",
            "ReportFinancialReportAllBrandAdditionalTradeMarginCost"                    : "Additional Trade Margin Cost ($ mln)",
            "ReportFinancialReportAllBrandVolumeDiscountCost"                           : "Volume Discount Cost ($ mln)",
            "ReportFinancialReportAllBrandTotalTradeAndMarketingExpenses"               : "Total Trade and Marketing Expenses ($ mln)",
            "ReportFinancialReportAllBrandTradeAndMarketingExpensesasaOfSales"          : "Trade and Marketing Expenses as a (%) of Sales",
            "ReportFinancialReportAllBrandShareOfTradeAndMarketingExpensesInBrandTotal" : "Share of Trade and Marketing Expenses in Company Total (%)",

            "ReportFinancialReportAllBrandGeneralExpenses" : "General Expenses ($ mln)",
            "ReportFinancialReportAllBrandAmortisation"    : "Amortisation ($ mln)",

            "ReportFinancialReportAllBrandOperatingProfit"                           : "Operating Profit ($ mln)",
            "ReportFinancialReportAllBrandChangeVersusPreviousPeriodOperatingProfit" : "(%) Change Versus Previous period",
            "ReportFinancialReportAllBrandOperatingProfitMargin"                     : "Operating Profit Margin (%)",
            "ReportFinancialReportAllBrandShareInBrandOperatingProfitLoss"           : "Share in Company Operating Profit/Loss (%)",

            "ReportFinancialReportAllBrandInterests"             : "Interests ($ mln)",
            "ReportFinancialReportAllBrandTaxes"                 : "Taxes ($ mln)",
            "ReportFinancialReportAllBrandExceptionalCostProfit" : "Exceptional Cost/Profit ($ mln)",

            "ReportFinancialReportAllBrandNetProfit"                           : "Net Profit ($ mln)",
            "ReportFinancialReportAllBrandChangeVersusPreviousPeriodNetProfit" : "(%) Change Versus Previous period",
            "ReportFinancialReportAllBrandNetProfitMargin"                     : "Net Profit Margin (%)",
            "ReportFinancialReportAllBrandShareInCompanyNetProfitLoss"     : "Share in Company Net Profit/Loss (%)",

            "ReportFinancialReportAllBrandProductionCost" : "Production Cost ($ mln)",
            "ReportFinancialReportAllBrandInventoryValue" : "Inventory Value ($ mln)",

            //Labels for Inventory Report
            "ReportInventoryReportLabelCloseToExpireInventory" : "Close to Expire Inventory",
    //        "ReportInventoryReportLabelPreviousInventory"      : "Previous Inventory",
            "ReportInventoryReportLabelPreviousInventory"      : "Close to Expire Inventory",
            "ReportInventoryReportLabelFreshInventory"         : "Fresh Inventory",
            "ReportInventoryReportTableLabelX"                 : "Total Stock (millions of standard pack) = Factory Stock + Trade Stock + Retailer Stock",
            "ReportInventoryReportTableLabelY"                 : "Million Units",


            //Labels for Profitability Evolution - SKU Level
            "ReportProfitabilityEvolutionSKUQuarter" : "Quarter",

            "ReportProfitabilityEvolutionSKUManufacturerSalesValue" : "Manufacturer Sales Value ($ mln)",

            "ReportProfitabilityEvolutionSKUCostOfGoodsSold"       : "Cost of Goods Sold ($ mln)",
            "ReportProfitabilityEvolutionSKUInventoryHolding"      : "Inventory Holding ($ mln)",
            "ReportProfitabilityEvolutionSKUObsoleteGoods"         : "Obsolete Goods ($ mln)",
            "ReportProfitabilityEvolutionSKUDiscontinuedGoodsCost" : "Discontinued Goods Cost ($ mln)",
            "ReportProfitabilityEvolutionSKUGrossProfit"           : "Gross Profit ($ mln)",

            "ReportProfitabilityEvolutionSKUAdvertising"                    : "Advertising ($ mln)",
            "ReportProfitabilityEvolutionSKUConsumerPromotionsCost"         : "Consumer Promotions Cost ($ mln)",
            "ReportProfitabilityEvolutionSKUTradeInvestment"                : "Trade Investment ($ mln)",
            "ReportProfitabilityEvolutionSKUSalesForceCost"                 : "Sales Force Cost ($ mln)",
            "ReportProfitabilityEvolutionSKUVolumeDiscountCost"             : "Volume Discount Cost ($ mln)",
            "ReportProfitabilityEvolutionSKUAdditionalTradeMarginCost"      : "Additional Trade Margin Cost ($ mln)",
            "ReportProfitabilityEvolutionSKUTotalTradeAndMarketingExpenses" : "Total Trade and Marketing Expenses ($ mln)",

            "ReportProfitabilityEvolutionSKUGeneralExpenses" : "General Expenses ($ mln)",
            "ReportProfitabilityEvolutionSKUAmortisation"    : "Amortisation ($ mln)",
            "ReportProfitabilityEvolutionSKUOperatingProfit" : "Operating Profit ($ mln)",

            "ReportProfitabilityEvolutionSKUInterests"             : "Interests ($ mln)",
            "ReportProfitabilityEvolutionSKUExceptionalCostProfit" : "Exceptional Cost/Profit ($ mln)",
            "ReportProfitabilityEvolutionSKUTaxes"                 : "Taxes ($ mln)",
            "ReportProfitabilityEvolutionSKUNetProfit"             : "Net Profit ($ mln)",

            "ReportProfitabilityEvolutionSKUSurchargeForSupplementaryInvestmentBudget"	:	"Surcharge for supplementary InvestmentBudget ($ mln)",
            "ReportProfitabilityEvolutionSKUNetResult"	:	"Net Result ($ mln)",

            "ReportProfitabilityEvolutionSKUShareInBrandTotalSalesValue"                  : "Share In Brand Total Sales Value (%)",
            "ReportProfitabilityEvolutionSKUShareInBrandGrossProfitLosses"                : "Share In Brand Gross Profit/Losses (%)",
            "ReportProfitabilityEvolutionSKUShareOfTradeAndMarketingExpensesInBrandTotal" : "Share of Trade and Marketing Expenses In Brand Total (%)",
            "ReportProfitabilityEvolutionSKUShareInBrandOperatingProfitLosses"            : "Share In Brand Operating Profit/Losses (%)",
            "ReportProfitabilityEvolutionSKUShareInBrandNetProfitLosses"                  : "Share In Brand Net Profit/Losses (%)",

            "ReportProfitabilityEvolutionSKUGrossProfitMargin"                   : "Gross Profit Margin (%)",
            "ReportProfitabilityEvolutionSKUTradeAndMarketingExpensesasaOfSales" : "Trade and Marketing Expenses as a(%) of Sales",
            "ReportProfitabilityEvolutionSKUGeneralExpensesasaOfSales"           : "General Expenses as a(%) of Sales",
            "ReportProfitabilityEvolutionSKUOperatingProfitMargin"               : "Operating Profit Margin (%)",
            "ReportProfitabilityEvolutionSKUNetProfitMargin"                     : "Net Profit Margin (%)",

            "ReportProfitabilityEvolutionSKUReturnOnInvestment" : "Return on Investment (%)",

            "ReportProfitabilityEvolutionSKUAverageNetMarketPrice"             : "Average Net Market Price ($/pack)",
            "ReportProfitabilityEvolutionSKUAverageWholesalesPrice"            : "Average Wholesales Price ($/pack)",
            "ReportProfitabilityEvolutionSKUAverageManufacturerPrice"          : "Average Manufacturer Price ($/pack)",
            "ReportProfitabilityEvolutionSKUAverageProductionCost"             : "Average Production Cost ($/pack)",
            "ReportProfitabilityEvolutionSKUMarketSalesValue"                  : "Market Sales Value ($ mln)",
            "ReportProfitabilityEvolutionSKUConsumerPricePromotions"           : "Consumer Price Promotions ($ mln)",
            "ReportProfitabilityEvolutionSKUMarketNetSalesValue"               : "Market Net Sales Value ($ mln)",
            "ReportProfitabilityEvolutionSKUAdditionalRetailersMargin"         : "Additional Retailers Margin (%)",
            "ReportProfitabilityEvolutionSKUWholesalersBonusRate"              : "Wholesalers Bonus Rate (%)",
            "ReportProfitabilityEvolutionSKUMinimalPurchaseQualifyingForBonus" : "Minimal Purchase Qualifying for Bonus (mln std. packs)",
            "ReportProfitabilityEvolutionSKUProductionCost"                    : "Production Cost ($ mln)",
            "ReportProfitabilityEvolutionSKUInventoryValue"                    : "Inventory Value ($ mln)",

            //Labels for Profitability Evolution - Brand Level
            "ReportProfitabilityEvolutionBrandManufacturerSalesValue" : "Manufacturer Sales Value ($ mln)",

            "ReportProfitabilityEvolutionBrandCostOfGoodsSold"       : "Cost of Goods Sold ($ mln)",
            "ReportProfitabilityEvolutionBrandInventoryHolding"      : "Inventory Holding ($ mln)",
            "ReportProfitabilityEvolutionBrandObsoleteGoods"         : "Obsolete Goods ($ mln)",
            "ReportProfitabilityEvolutionBrandDiscontinuedGoodsCost" : "Discontinued Goods Cost ($ mln)",
            "ReportProfitabilityEvolutionBrandGrossProfit"           : "Gross Profit ($ mln)",

            "ReportProfitabilityEvolutionBrandAdvertising"                    : "Advertising ($ mln)",
            "ReportProfitabilityEvolutionBrandConsumerPromotionsCost"         : "Consumer Promotions Cost ($ mln)",
            "ReportProfitabilityEvolutionBrandTradeInvestment"                : "Trade Investment ($ mln)",
            "ReportProfitabilityEvolutionBrandSalesForceCost"                 : "Sales Force Cost ($ mln)",
            "ReportProfitabilityEvolutionBrandVolumeDiscountCost"             : "Volume Discount Cost ($ mln)",
            "ReportProfitabilityEvolutionBrandAdditionalTradeMarginCost"      : "Additional Trade Margin Cost ($ mln)",
            "ReportProfitabilityEvolutionBrandTotalTradeAndMarketingExpenses" : "Total Trade and Marketing Expenses ($ mln)",

            "ReportProfitabilityEvolutionBrandGeneralExpenses" : "General Expenses ($ mln)",
            "ReportProfitabilityEvolutionBrandAmortisation"    : "Amortisation ($ mln)",
            "ReportProfitabilityEvolutionBrandOperatingProfit" : "Operating Profit ($ mln)",

            "ReportProfitabilityEvolutionBrandInterests"             : "Interests ($ mln)",
            "ReportProfitabilityEvolutionBrandExceptionalCostProfit" : "Exceptional Cost/Profit ($ mln)",
            "ReportProfitabilityEvolutionBrandTaxes"                 : "Taxes ($ mln)",
            "ReportProfitabilityEvolutionBrandNetProfit"             : "Net Profit ($ mln)",

            "ReportProfitabilityEvolutionBrandSurchargeForSupplementaryInvestmentBudget" : "Surcharge for supplementary InvestmentBudget ($ mln)",
            "ReportProfitabilityEvolutionBrandNetResult"                                 : "Net Result ($ mln)",

            "ReportProfitabilityEvolutionBrandShareInCompanyTotalSalesValue"                  : "Share In Company Total Sales Value (%)",
            "ReportProfitabilityEvolutionBrandShareInCompanyGrossProfitLosses"                : "Share In Company Gross Profit/Losses (%)",
            "ReportProfitabilityEvolutionBrandShareOfTradeAndMarketingExpensesInCompanyTotal" : "Share of Trade and Marketing Expenses In Company Total (%)",
            "ReportProfitabilityEvolutionBrandShareInCompanyOperatingProfitLosses"            : "Share In Company Operating Profit/Losses (%)",
            "ReportProfitabilityEvolutionBrandShareInCompanyNetProfitLosses"                  : "Share In Company Net Profit/Losses (%)",

            "ReportProfitabilityEvolutionBrandGrossProfitMargin"                   : "Gross Profit Margin (%)",
            "ReportProfitabilityEvolutionBrandTradeAndMarketingExpensesasaOfSales" : "Trade and Marketing Expenses as a(%) of Sales",
            "ReportProfitabilityEvolutionBrandGeneralExpensesasaOfSales"           : "General Expenses as a(%) of Sales",
            "ReportProfitabilityEvolutionBrandOperatingProfitMargin"               : "Operating Profit Margin (%)",
            "ReportProfitabilityEvolutionBrandNetProfitMargin"                     : "Net Profit Margin (%)",

            "ReportProfitabilityEvolutionBrandReturnOnInvestment" : "Return on Investment (%)",

            "ReportProfitabilityEvolutionBrandAverageNetMarketPrice"    : "Average Net Market Price ($/pack)",
            "ReportProfitabilityEvolutionBrandAverageWholesalesPrice"   : "Average Wholesales Price ($/pack)",
            "ReportProfitabilityEvolutionBrandAverageManufacturerPrice" : "Average Manufacturer Price ($/pack)",
            "ReportProfitabilityEvolutionBrandAverageProductionCost"    : "Average Production Cost ($/pack)",

            "ReportProfitabilityEvolutionBrandMarketSalesValue"        : "Market Sales Value ($ mln)",
            "ReportProfitabilityEvolutionBrandConsumerPricePromotions" : "Consumer Price Promotions ($ mln)",
            "ReportProfitabilityEvolutionBrandMarketNetSalesValue"     : "Market Net Sales Value ($ mln)",

            "ReportProfitabilityEvolutionBrandProductionCost"                    : "Production Cost ($ mln)",
            "ReportProfitabilityEvolutionBrandInventoryValue"                    : "Inventory Value ($ mln)",


            //Labels for Profitability Evolution - Global Level
            "ReportProfitabilityEvolutionGlobalManufacturerSalesValue" : "Manufacturer Sales Value ($ mln)",
            "ReportProfitabilityEvolutionGlobalCostOfGoodsSold"        : "Cost of Goods Sold ($ mln)",
            "ReportProfitabilityEvolutionGlobalInventoryHolding"       : "Inventory Holding ($ mln)",
            "ReportProfitabilityEvolutionGlobalObsoleteGoods"          : "Obsolete Goods ($ mln)",
            "ReportProfitabilityEvolutionGlobalDiscontinuedGoodsCost"  : "Discontinued Goods Cost ($ mln)",
            "ReportProfitabilityEvolutionGlobalGrossProfit"            : "Gross Profit ($ mln)",

            "ReportProfitabilityEvolutionGlobalAdvertising"                    : "Advertising ($ mln)",
            "ReportProfitabilityEvolutionGlobalConsumerPromotionsCost"         : "Consumer Promotions Cost ($ mln)",
            "ReportProfitabilityEvolutionGlobalTradeInvestment"                : "Trade Investment ($ mln)",
            "ReportProfitabilityEvolutionGlobalSalesForceCost"                 : "Sales Force Cost ($ mln)",
            "ReportProfitabilityEvolutionGlobalVolumeDiscountCost"             : "Volume Discount Cost ($ mln)",
            "ReportProfitabilityEvolutionGlobalAdditionalTradeMarginCost"      : "Additional Trade Margin Cost ($ mln)",
            "ReportProfitabilityEvolutionGlobalTotalTradeAndMarketingExpenses" : "Total Trade and Marketing Expenses ($ mln)",

            "ReportProfitabilityEvolutionGlobalOverhead"                                 : "Overhead ($ mln)",
            "ReportProfitabilityEvolutionGlobalInvestmentToImproveTechnologyLevel"       : "Investment to Improve Technology Level ($ mln)",
            "ReportProfitabilityEvolutionGlobalInvestmentToIncreaseProductionEfficiency" : "Investment to Increase Production Efficiency ($ mln)",

            "ReportProfitabilityEvolutionGlobalProductionCapacityDisposalCost" : "Production Capacity Disposal Cost ($ mln)",
            "ReportProfitabilityEvolutionGlobalOvertimeShiftsCost"             : "Overtime Shifts Cost ($ mln)",
            "ReportProfitabilityEvolutionGlobalTotalGeneralExpenses"           : "Total General Expenses ($ mln)",
            "ReportProfitabilityEvolutionGlobalAmortisation"                   : "Amortisation ($ mln)",
            "ReportProfitabilityEvolutionGlobalOperatingProfit"                : "Operating Profit ($ mln)",

            "ReportProfitabilityEvolutionGlobalInterests"             : "Interests ($ mln)",
            "ReportProfitabilityEvolutionGlobalExceptionalCostProfit" : "Exceptional Cost/Profit ($ mln)",
            "ReportProfitabilityEvolutionGlobalTaxes"                 : "Taxes ($ mln)",
            "ReportProfitabilityEvolutionGlobalNetProfit"             : "Net Profit ($ mln)",

            "ReportProfitabilityEvolutionGlobalSurchargeForSupplementaryInvestmentBudget" : "Surcharge for supplementary InvestmentBudget ($ mln)",
            "ReportProfitabilityEvolutionGlobalNetResult"                                 : "Net Result ($ mln)",

            "ReportProfitabilityEvolutionGlobalGrossProfitMargin"                   : "Gross Profit Margin (%)",
            "ReportProfitabilityEvolutionGlobalTradeAndMarketingExpensesasaOfSales" : "Trade and Marketing Expenses as a(%) of Sales",
            "ReportProfitabilityEvolutionGlobalGeneralExpensesasaOfSales"           : "General Expenses as a(%) of Sales",
            "ReportProfitabilityEvolutionGlobalOperatingProfitMargin"               : "Operating Profit Margin (%)",
            "ReportProfitabilityEvolutionGlobalNetProfitMargin"                     : "Net Profit Margin (%)",

            "ReportProfitabilityEvolutionGlobalReturnOnInvestment" : "Return on Investment (%)",

            "ReportProfitabilityEvolutionGlobalAverageNetMarketPrice"    : "Average Net Market Price ($/pack)",
            "ReportProfitabilityEvolutionGlobalAverageWholesalesPrice"   : "Average Wholesales Price ($/pack)",
            "ReportProfitabilityEvolutionGlobalAverageManufacturerPrice" : "Average Manufacturer Price ($/pack)",
            "ReportProfitabilityEvolutionGlobalAverageProductionCost"    : "Average Production Cost ($/pack)",

            "ReportProfitabilityEvolutionGlobalMarketSalesValue"        : "Market Sales Value ($ mln)",
            "ReportProfitabilityEvolutionGlobalConsumerPricePromotions" : "Consumer Price Promotions ($ mln)",
            "ReportProfitabilityEvolutionGlobalMarketNetSalesValue"     : "Market Net Sales Value ($ mln)",

            "ReportProfitabilityEvolutionGlobalProductionCost" : "Production Cost ($ mln)",
            "ReportProfitabilityEvolutionGlobalInventoryValue" : "Inventory Value ($ mln)",

            "ReportProfitabilityEvolutionGlobalCapacityUtilisationRate"         : "Capacity Utilisation Rate (%)",
            "ReportProfitabilityEvolutionGlobalChangeInProductionCapacity"      : "Change In Production Capacity (mln std. packs)",
            "ReportProfitabilityEvolutionGlobalNextPeriodAvailableProdCapacity" : "Next Period Available Prod. Capacity (mln std. packs)",

            "ReportProfitabilityEvolutionGlobalAvailableTechnologyLevel"                             : "Available Technology Level",
            "ReportProfitabilityEvolutionGlobalExtraBudgetRequiredToIncreaseTechnologyLevelBy1Step"  : "Extra Budget Required to Increase Technology Level by 1 Step",
            "ReportProfitabilityEvolutionGlobalExtraBudgetRequiredToIncreaseTechnologyLevelBy2Steps" : "Extra Budget Required to Increase Technology Level by 2 Steps",

            "ReportProfitabilityEvolutionGlobalAcquiredProductionAndLogisticsEfficiency"         : "Acquired Production and Logistics Efficiency (%)",
            "ReportProfitabilityEvolutionGlobalExtraBudgetRequiredToIncreaseEfficiencyBy2points" : "Extra Budget Required to Increase Efficiency by 2% points",
            "ReportProfitabilityEvolutionGlobalExtraBudgetRequiredToIncreaseEfficiencyBy5points" : "Extra Budget Required to Increase Efficiency by 5% points",

            "ReportProfitabilityEvolutionGlobalAcquiredProductionPlanningFlexibility"             : "Acquired Production Planning Flexibility (%)",
            "ReportProfitabilityEvolutionGlobalExtraBudgetRequiredToIncreaseFlexibilityBy2points" : "Extra Budget Required to Increase Flexibility by 2% points",
            "ReportProfitabilityEvolutionGlobalExtraBudgetRequiredToIncreaseFlexibilityBy5points" : "Extra Budget Required to Increase Flexibility by 5% points",

            //Labels for Market Share
            "ReportMarketShareChartTitleMarketShareInValue"  : "Market Share in Value (%)",
            "ReportMarketShareChartTitleMarketShareInVolume" : "Market Share in Volume (%)",
            "ReportMarketShareChartTitleMindSpaceShare"      : "Mind Space Share (%)",
            "ReportMarketShareChartTitleShelfSpaceShare"     : "Shelf Space Share (%)",

            //Labels for Competitor Intelligence
            "ReportCompetitorIntelligenceTableTitleTechnology"                               : "Technology",
            "ReportCompetitorIntelligenceTechnologyAcquiredProductionAndLogisticsEfficiency" : "Acquired Production and Logistics Efficiency (%)",
            "ReportCompetitorIntelligenceTechnologyAcquiredProductionPlanningFlexibility"    : "Acquired Production Planning Flexibility (%)",
            "ReportCompetitorIntelligenceTechnologyAvailableTechnologyLevel"                 : "Available Technology Level",

            "ReportCompetitorIntelligenceTableTitleMarketingSales"                : "Marketing & Sales",
            "ReportCompetitorIntelligenceMarketingSalesAdditionalTradeMarginCost" : "Additional Trade Margin Cost ($ mln)",
            "ReportCompetitorIntelligenceMarketingSalesAdvertising"               : "Advertising ($ mln)",
            "ReportCompetitorIntelligenceMarketingSalesConsumerPromotionsCost"    : "Consumer Promotions Cost ($ mln)",
            "ReportCompetitorIntelligenceMarketingSalesRetailerPurchaseVolume"    : "Retailers Purchase Volume (mln std. packs)",
            "ReportCompetitorIntelligenceMarketingSalesSalesForceCost"            : "Sales Force Cost ($ mln)",
            "ReportCompetitorIntelligenceMarketingSalesShipmentToWholesalers"     : "Shipments to Wholesalers (mln std. packs)",
            "ReportCompetitorIntelligenceMarketingSalesTradeInvestments"          : "Trade Investments ($ mln)",
            "ReportCompetitorIntelligenceMarketingSalesVolumeDiscountCost"        : "Volume Discount Cost ($ mln)",

            "ReportCompetitorIntelligenceTableTitleOperations"                      : "Operations",
            "ReportCompetitorIntelligenceOperationsCapacityUtilisationRate"         : "Capacity Utilisation Rate (%)",
            "ReportCompetitorIntelligenceOperationsInventoryVolumeAtManufacturer"   : "Inventory Volume at Manufacturer (mln std. packs)",
            "ReportCompetitorIntelligenceOperationsInventoryVolumeAtRetailers"      : "Inventory Volume at Retailers (mln std. packs)",
            "ReportCompetitorIntelligenceOperationsInventoryVolumeAtWholesalers"    : "Inventory Volume at Wholesalers (mln std. packs)",
            "ReportCompetitorIntelligenceOperationsNextPeriodAvailableProdCapacity" : "Next Period Available Prod.Capacity (mln std. packs)",
            "ReportCompetitorIntelligenceOperationsProductionVolume"                : "Production Volume (mln std. packs)",

            "ReportCompetitorIntelligenceTableTitleInvestments"                               : "Investments",
            "ReportCompetitorIntelligenceInvestmentsInvestmentToImproveTechnologyLevel"       : "Investment to Improve Technology Level ($ mln)",
            "ReportCompetitorIntelligenceInvestmentsInvestmentToIncreaseProductionEfficiency" : "Investment to Increase Production Efficiency ($ mln)",

            //Labels for Investments and Profits
            "ReportInvestmentsAndProfitsChartTitleTotalInvestment"        : "Total Investment ($ mln)",
            "ReportInvestmentsAndProfitsChartTitleNetProfitByCompanies"   : "Net Profit By Companies ($ mln)",
            "ReportInvestmentsAndProfitsChartTitleReturnOnInvestment"     : "Return on Investment (%)",
            "ReportInvestmentsAndProfitsChartTitleInvestmentVersusBudget" : "Investment Versus Budget (%)",

            //Labels for Market Sales and Inventory
            "ReportMarketSalesAndInventoryChartTitleMarketSalesValue"        : "Market Sales Value ($ mln)",
            "ReportMarketSalesAndInventoryChartTitleMarketSalesVolume"       : "Market Sales Volume (mln std. packs)",
            "ReportMarketSalesAndInventoryChartTitleTotalInventoryAtFactory" : "Total Inventory at Factory (mln std. packs)",
            "ReportMarketSalesAndInventoryChartTitleTotalInventoryAtTrade"   : "Total Inventory at Trade (mln std. packs)",
            "ReportMarketSalesAndInventoryChartBottomTextPeriod"   : "Period",

            //Labels for Segment Leader Top 5
            "ReportSegmentLeaderTop5ChartTitlePriceSensitive" : "1. Price Sensitive (%)",
            "ReportSegmentLeaderTop5ChartTitlePretenders"     : "2. Pretenders (%)",
            "ReportSegmentLeaderTop5ChartTitleModerate"       : "3. Moderate (%)",
            "ReportSegmentLeaderTop5ChartTitleGoodLife"       : "4. Good Life (%)",
            "ReportSegmentLeaderTop5ChartTitleUltimate"       : "5. Ultimate (%)",
            "ReportSegmentLeaderTop5ChartTitlePragmatic"      : "6. Pragmatic (%)",

            //Labels for Perception Map
            "ReportPerceptionMapAxisLabelSegment"         : "Segment",
            "ReportPerceptionMapAxisTitleValuePerception" : "Value Perception",
            "ReportPerceptionMapAxisTitleImagePerception" : "Image Perception",
            "ReportPerceptionMapHoverTooltipMarketShareValue" : "Market Share (Value %)",
            "ReportPerceptionMapHoverTooltipAverageDisplayPrice" : "Average Display Price",
            "ReportPerceptionMapHoverTooltipAppliedTechnologyIndex" : "Applied Technology Index",
            "ReportPerceptionMapHoverTooltipIngredientsQualityIndex" : "Ingredients Quality Index",
            "ReportPerceptionMapHoverTooltipAwareness" : "Awareness (%)",
            "ReportPerceptionMapHoverTooltipShelfSpace" : "Shelf Space (%)",
            "ReportPerceptionMapHoverTooltipValuePerceptionChange" : "Value Perception Change",
            "ReportPerceptionMapHoverTooltipImagePerceptionChange" : "Image Perception Change",

            //Labels for Segment Distributions
            "ReportSegmentDistributionsTableTitleMarketShareValue"      : "Market Share (value %)",
            "ReportSegmentDistributionsTableTitleMarketShareVolume"     : "Market Share (volume %)",
            "ReportSegmentDistributionsTableTitleMarketSalesValue"      : "Market Sales Value ($ mln)",
            "ReportSegmentDistributionsTableTitleMarketSalesVolume"     : "Market Sales Volume (mln std. packs)",
            "ReportSegmentDistributionsTableTitleAverageNetMarketPrice" : "Average Net Market Price ($/std. pack)",
            "ReportSegmentDistributionsTableTitleValuePerception"       : "Value Perception",
            "ReportSegmentDistributionsTableTitleImagePerception"       : "Image Perception",

            //Labels for Market Evolution
            "ReportMarketEvolutionChartTitleGrowthRateInVolume"             : "Growth Rate In Volume (Period -3 = 100)",
            "ReportMarketEvolutionChartTitleGrowthRateInValue"              : "Growth Rate In Value (Period -3 = 100)",
            "ReportMarketEvolutionChartTitleNetMarketPrice"                 : "Net Market Price (Period -3 = 100)",
            "ReportMarketEvolutionChartTitleSegmentValueShareInTotalMarket" : "Segment Value Share In Total Market (%)",

            //Labels for Market Trends - SKU Level
            "ReportMarketTrendsSKUTableTitleMarketFigures"            : "Market Figures", //Market Figures
            "ReportMarketTrendsSKUMarketFiguresAverageDisplayPrice"   : "Average Display Price ($/std. pack)",
            "ReportMarketTrendsSKUMarketFiguresAverageNetMarketPrice" : "Average Net Market Price ($/std. pack)",
            "ReportMarketTrendsSKUMarketFiguresBrandAwareness"        : "Brand Awareness (%)",
            "ReportMarketTrendsSKUMarketFiguresImagePerception"       : "Image Perception",
            "ReportMarketTrendsSKUMarketFiguresMarketNetSalesValue"   : "Market Net Sales Value ($ mln)",
            "ReportMarketTrendsSKUMarketFiguresMarketNetSalesVolume"  : "Market Net Sales Volume (mln std. packs)",
            "ReportMarketTrendsSKUMarketFiguresMarketShareValue"      : "Market Share (value %)",
            "ReportMarketTrendsSKUMarketFiguresMarketShareVolume"     : "Market Share (volume %)",

            "ReportMarketTrendsSKUTableTitleMiscellaneous"              : "Miscellaneous",		//Miscellaneous
            "ReportMarketTrendsSKUMiscellaneousLostSalesVolumeduetoOOS" : "Lost Sales Volume due to OOS (mln std. packs)",
            "ReportMarketTrendsSKUMiscellaneousNumericalDistribution"   : "Numerical Distribution (%)",
            "ReportMarketTrendsSKUMiscellaneousTotalInventoryAtTrade"   : "Total Inventory at Trade (mln std. packs)",
            "ReportMarketTrendsSKUMiscellaneousPriceRankingIndex"       : "Price Ranking Index",
            "ReportMarketTrendsSKUMiscellaneousShelfSpace"              : "Shelf Space (%)",

            "ReportMarketTrendsSKUTableTitleSegmentWiseValueShare"                      : "Value Share by Segment",		//Segment-wise Value Share
            "ReportMarketTrendsSKUSegmentWiseValueShareValueSharePriceSensitiveSegment" : "Value Share (%) in 1. Price Sensitive Segment",
            "ReportMarketTrendsSKUSegmentWiseValueShareValueSharePretendersSegment"     : "Value Share (%) in 2. Pretenders Segment",
            "ReportMarketTrendsSKUSegmentWiseValueShareValueShareModerateSegment"       : "Value Share (%) in 3. Moderate Segment",
            "ReportMarketTrendsSKUSegmentWiseValueShareValueShareGoodLifeSegment"       : "Value Share (%) in 4. Good Life Segment",
            "ReportMarketTrendsSKUSegmentWiseValueShareValueShareUltimateSegment"       : "Value Share (%) in 5. Ultimate Segment",
            "ReportMarketTrendsSKUSegmentWiseValueShareValueSharePragmaticSegment"      : "Value Share (%) in 6. Pragmatic Segment",

            "ReportMarketTrendsSKUTableTitleSegmentWiseVolumeShare"                       : "Volume Share by Segment",	//Segment-wise Volume Share
            "ReportMarketTrendsSKUSegmentWiseVolumeShareVolumeSharePriceSensitiveSegment" : "Volume Share (%) in 1. Price Sensitive Segment",
            "ReportMarketTrendsSKUSegmentWiseVolumeShareVolumeSharePretendersSegment"     : "Volume Share (%) in 2. Pretenders Segment",
            "ReportMarketTrendsSKUSegmentWiseVolumeShareVolumeShareModerateSegment"       : "Volume Share (%) in 3. Moderate Segment",
            "ReportMarketTrendsSKUSegmentWiseVolumeShareVolumeShareGoodLifeSegment"       : "Volume Share (%) in 4. Good Life Segment",
            "ReportMarketTrendsSKUSegmentWiseVolumeShareVolumeShareUltimateSegment"       : "Volume Share (%) in 5. Ultimate Segment",
            "ReportMarketTrendsSKUSegmentWiseVolumeShareVolumeSharePragmaticSegment"      : "Volume Share (%) in 6. Pragmatic Segment",
            "ReportMarketTrendsSKUSegmentWiseVolumeShareVolumeWeightedDistribution"       : "Volume-weighted Distribution (%)",

            //Labels for Market Trends - Brand Level
            "ReportMarketTrendsBrandMarketFiguresAverageDisplayPrice"   : "Average Display Price ($/std. pack)",
            "ReportMarketTrendsBrandMarketFiguresAverageNetMarketPrice" : "Average Net Market Price ($/std. pack)",
            "ReportMarketTrendsBrandMarketFiguresBrandAwareness"        : "Brand Awareness (%)",
            "ReportMarketTrendsBrandMarketFiguresImagePerception"       : "Image Perception",
            "ReportMarketTrendsBrandMarketFiguresMarketNetSalesValue"   : "Market Net Sales Value ($ mln)",
            "ReportMarketTrendsBrandMarketFiguresMarketNetSalesVolume"  : "Market Net Sales Volume (mln std. packs)",
            "ReportMarketTrendsBrandMarketFiguresMarketShareValue"      : "Market Share (value %)",
            "ReportMarketTrendsBrandMarketFiguresMarketShareVolume"     : "Market Share (volume %)",

            "ReportMarketTrendsBrandMiscellaneousLostSalesVolumeduetoOOS" : "Lost Sales Volume due to OOS (mln std. packs)",
            "ReportMarketTrendsBrandMiscellaneousNumericalDistribution"   : "Numerical Distribution (%)",
            "ReportMarketTrendsBrandMiscellaneousTotalInventoryAtTrade"   : "Total Inventory at Trade (mln std. packs)",
            "ReportMarketTrendsBrandMiscellaneousPriceRankingIndex"       : "Price Ranking Index",
            "ReportMarketTrendsBrandMiscellaneousShelfSpace"              : "Shelf Space (%)",

            "ReportMarketTrendsBrandSegmentWiseValueShareValueSharePriceSensitiveSegment" : "Value Share (%) in 1. Price Sensitive Segment",
            "ReportMarketTrendsBrandSegmentWiseValueShareValueSharePretendersSegment"     : "Value Share (%) in 2. Pretenders Segment",
            "ReportMarketTrendsBrandSegmentWiseValueShareValueShareModerateSegment"       : "Value Share (%) in 3. Moderate Segment",
            "ReportMarketTrendsBrandSegmentWiseValueShareValueShareGoodLifeSegment"       : "Value Share (%) in 4. Good Life Segment",
            "ReportMarketTrendsBrandSegmentWiseValueShareValueShareUltimateSegment"       : "Value Share (%) in 5. Ultimate Segment",
            "ReportMarketTrendsBrandSegmentWiseValueShareValueSharePragmaticSegment"      : "Value Share (%) in 6. Pragmatic Segment",

            "ReportMarketTrendsBrandSegmentWiseVolumeShareVolumeSharePriceSensitiveSegment" : "Volume Share (%) in 1. Price Sensitive Segment",
            "ReportMarketTrendsBrandSegmentWiseVolumeShareVolumeSharePretendersSegment"     : "Volume Share (%) in 2. Pretenders Segment",
            "ReportMarketTrendsBrandSegmentWiseVolumeShareVolumeShareModerateSegment"       : "Volume Share (%) in 3. Moderate Segment",
            "ReportMarketTrendsBrandSegmentWiseVolumeShareVolumeShareGoodLifeSegment"       : "Volume Share (%) in 4. Good Life Segment",
            "ReportMarketTrendsBrandSegmentWiseVolumeShareVolumeShareUltimateSegment"       : "Volume Share (%) in 5. Ultimate Segment",
            "ReportMarketTrendsBrandSegmentWiseVolumeShareVolumeSharePragmaticSegment"      : "Volume Share (%) in 6. Pragmatic Segment",
            "ReportMarketTrendsBrandSegmentWiseVolumeShareVolumeWeightedDistribution"       : "Volume-weighted Distribution (%)",

            //Labels for Market Trends - Global Level
            "ReportMarketTrendsGlobalMarketFiguresAverageNetMarketPrice" : "Average Net Market Price ($/std. pack)",
            "ReportMarketTrendsGlobalMarketFiguresMarketNetSalesValue"   : "Market Net Sales Value ($ mln)",
            "ReportMarketTrendsGlobalMarketFiguresMarketNetSalesVolume"  : "Market Net Sales Volume (mln std. packs)",
            "ReportMarketTrendsGlobalMarketFiguresMarketShareValue"      : "Market Share (value %)",
            "ReportMarketTrendsGlobalMarketFiguresMarketShareVolume"     : "Market Share (volume %)",

            "ReportMarketTrendsGlobalMiscellaneousLostSalesVolumeduetoOOS" : "Lost Sales Volume due to OOS (mln std. packs)",
            "ReportMarketTrendsGlobalMiscellaneousNumericalDistribution"   : "Numerical Distribution (%)",
            "ReportMarketTrendsGlobalMiscellaneousTotalInventoryAtTrade"   : "Total Inventory at Trade (mln std. packs)",
            "ReportMarketTrendsGlobalMiscellaneousPriceRankingIndex"       : "Price Ranking Index",
            "ReportMarketTrendsGlobalMiscellaneousShelfSpace"              : "Shelf Space (%)",

            "ReportMarketTrendsGlobalSegmentWiseValueShareValueSharePriceSensitiveSegment" : "Value Share (%) in 1. Price Sensitive Segment",
            "ReportMarketTrendsGlobalSegmentWiseValueShareValueSharePretendersSegment"     : "Value Share (%) in 2. Pretenders Segment",
            "ReportMarketTrendsGlobalSegmentWiseValueShareValueShareModerateSegment"       : "Value Share (%) in 3. Moderate Segment",
            "ReportMarketTrendsGlobalSegmentWiseValueShareValueShareGoodLifeSegment"       : "Value Share (%) in 4. Good Life Segment",
            "ReportMarketTrendsGlobalSegmentWiseValueShareValueShareUltimateSegment"       : "Value Share (%) in 5. Ultimate Segment",
            "ReportMarketTrendsGlobalSegmentWiseValueShareValueSharePragmaticSegment"      : "Value Share (%) in 6. Pragmatic Segment",

            "ReportMarketTrendsGlobalSegmentWiseVolumeShareVolumeSharePriceSensitiveSegment" : "Volume Share (%) in 1. Price Sensitive Segment",
            "ReportMarketTrendsGlobalSegmentWiseVolumeShareVolumeSharePretendersSegment"     : "Volume Share (%) in 2. Pretenders Segment",
            "ReportMarketTrendsGlobalSegmentWiseVolumeShareVolumeShareModerateSegment"       : "Volume Share (%) in 3. Moderate Segment",
            "ReportMarketTrendsGlobalSegmentWiseVolumeShareVolumeShareGoodLifeSegment"       : "Volume Share (%) in 4. Good Life Segment",
            "ReportMarketTrendsGlobalSegmentWiseVolumeShareVolumeShareUltimateSegment"       : "Volume Share (%) in 5. Ultimate Segment",
            "ReportMarketTrendsGlobalSegmentWiseVolumeShareVolumeSharePragmaticSegment"      : "Volume Share (%) in 6. Pragmatic Segment",
            "ReportMarketTrendsGlobalSegmentWiseVolumeShareVolumeWeightedDistribution"       : "Volume-weighted Distribution (%)",

            //Labels for Market Indicator
            "ReportMarketIndicatorCorporateTaxRate"	:	"Corporate Tax Rate",
            "ReportMarketIndicatorInflationRate"	:	"Inflation Rate",
            "ReportMarketIndicatorDepositRate"	:	"Deposit Rate",
            "ReportMarketIndicatorBorrowingRate"	:	"Borrowing Rate",
            "ReportMarketIndicatorAdditionalInvestmentBudgetSurchargeRate"	:	"Additional Investment Budget Surcharge Rate",
            "ReportMarketIndicatorInventoryHoldingCost"	:	"Inventory Holding Cost (as a % of inventory value)",
            "ReportMarketIndicatorObsoleteGoodsCost"	:	"Obsolete Goods Cost (as a % of purchase cost)",
            "ReportMarketIndicatorDiscontinuedGoodsCost"	:	"Discontinued Goods Cost (as a % of purchase cost)",



            //Labels for Items on Decision Page - Second Menu Bar

            "DecisionPageSecondMenuBarLabelsTotalAvailableBudget" : "Total Available Budget",
            "DecisionPageSecondMenuBarLabelsNormalCapacity"       : "Normal Capacity Left",
            "DecisionPageSecondMenuBarLabelsOvertimeCapacity"     : "Overtime Capacity Left",
            "DecisionPageSecondMenuBarLabelsAdditionalBudget"     : "Additional Budget",


            //Labels for Items on Decision Page - DecisionTab
            "DecisionPageDecisionTabMAKEDECISIONS"     : "MAKE DECISIONS",
            "DecisionPageDecisionTabMission"           : "Market Share + Profit",
            "DecisionPageDecisionTabAddNewBrand"       : "Add New Brand",
            "DecisionPageDecisionTabSalesForce"        : "Sales Force ($ mln)",
            "DecisionPageDecisionTabAddNewSKU"         : "Add New SKU",
            "DecisionPageDecisionTabName"              : "SKU Name",
            "DecisionPageDecisionTabLabelBrandName"    : "Brand Name :",
            "DecisionPageDecisionTabLabelFirstSKUName" : "First SKU Name :",
            "DecisionPageDecisionTabLabelSKUName"      : "SKU Name :",

            "DecisionPageDecisionTabDiscontinue"           : "Discontinue?",
            "DecisionPageDecisionTabProcessingTechnology"  : "Processing Technology",
            "DecisionPageDecisionTabIngredientsQuality"    : "Ingredients Quality",
            "DecisionPageDecisionTabPackagingSize"         : "Packaging Size",
            "DecisionPageDecisionTabPackagingSizeSmall"    : "Small",
            "DecisionPageDecisionTabPackagingSizeStandard" : "Standard",
            "DecisionPageDecisionTabPackagingSizeLarge"    : "Large",

            "DecisionPageDecisionTabProductionVolume"               : "Production Volume (mln packs)",
            "DecisionPageDecisionTabManufacturerPrice"              : "Manufacturer Price ($)",
            "DecisionPageDecisionTabRepriceFactoryStock"            : "Reprice Factory Stock?",
            "DecisionPageDecisionTabConsumerCommunication"          : "Consumer Communication ($ mln)",
            "DecisionPageDecisionTabTargetConsumerSegment"          : "Target Consumer Segment",
            "DecisionPageDecisionTabConsumerPromotions"             : "Consumer Promotions ($ mln)",
            "DecisionPageDecisionTabConsumerPromotionsSchedule"     : "Consumer Promotions Schedule",
            "DecisionPageDecisionTabConsumerPromotionsScheduleWeek" : "Week",
            "DecisionPageDecisionTabTradeExpenses"                  : "Trade Expenses ($ mln)",
            "DecisionPageDecisionTabAdditionalTradeMargin"          : "Additional Trade Margin (%)",
            "DecisionPageDecisionTabWholesaleMinimumVolume"         : "Wholesale Minimum Volume (mln packs)",
            "DecisionPageDecisionTabWholesaleBonusRate"             : "Wholesale Bonus Rate (%)",

            "DecisionPageDecisionNewProductDevelopmentInvestment"                                 : "New Product Development Investment",
            "DecisionPageDecisionNewProductDevelopmentInvestmentInvestmentInProductionEfficiency" : "Investment in Production Efficiency ($ mln)",
            "DecisionPageDecisionNewProductDevelopmentInvestmentInvestmentInProcessingTechnology" : "Investment in Processing Technology ($ mln)",

            "DecisionPageDecisionNewProductDevelopmentInvestmentName"                                                   : "Name",
            "DecisionPageDecisionNewProductDevelopmentInvestmentRequiredAmount"                                         : "Required Amount ($ mln)",
            "DecisionPageDecisionNewProductDevelopmentInvestmentExtraBudgetRequiredToIncreaseEfficiencyBy25points"      : "Extra Budget Required to Increase Efficiency by 2% / 5% points",
            "DecisionPageDecisionNewProductDevelopmentInvestmentExtraBudgetRequiredToIncreaseFlexibilityBy25points"     : "Extra Budget Required to Increase Flexibility by 2% / 5% points",
            "DecisionPageDecisionNewProductDevelopmentInvestmentExtraBudgetRequiredToIncreaseTechnologyLevelBy12points" : "Extra Budget Required to Increase Technology Level by 1 / 2 Step(s)",
            "DecisionPageDecisionNewProductDevelopmentInvestmentNote"                                                   : "Note: Investment on Efficiency could increase Flexibility at the same time",


            //Labels for Items on Decision Page - Future Projections Calculator
            "DecisionPageFutureProjectionsTableTitleDATAREFERENCE"		:	"DATA REFERENCE",

            "DecisionPageFutureProjectionsCalculatorLabel"       : "Future Projection Calculator",
            "DecisionPageFutureProjectionsCalculatorTablePeriod" : "Period",

            "DecisionPageFutureProjectionsCalculatorTable1InPackUnits"     : "In Pack Units",
            "DecisionPageFutureProjectionsCalculatorTable1InStandardUnits" : "In Standard Units",

            "DecisionPageFutureProjectionsCalculatorTable1StocksAtFactory"     : "Stocks at Factory (mln)",
            "DecisionPageFutureProjectionsCalculatorTable1StocksAtWholesales"  : "Stocks at Wholesalers (mln)",
            "DecisionPageFutureProjectionsCalculatorTable1StocksAtRetailers"   : "Stocks at Retailers  (mln)",
            "DecisionPageFutureProjectionsCalculatorTable1UnitProductionCost"  : "Unit Production Cost ($)",
            "DecisionPageFutureProjectionsCalculatorTable1WholesalePrice"      : "Wholesale Price ($)",
            "DecisionPageFutureProjectionsCalculatorTable1RecommendedConsumer" : "Recommended Consumer Price ($)",

            "DecisionPageFutureProjectionsCalculatorTable2MarketSales"           : "Market Sales (mln Packs)",
            "DecisionPageFutureProjectionsCalculatorTable2ShipmentsToRetailers"  : "Shipments to retailers (mln Packs)",
            "DecisionPageFutureProjectionsCalculatorTable2UnitProductionCost"    : "Unit Production Cost ($)",
            "DecisionPageFutureProjectionsCalculatorTable2AverageConsumerPrice"  : "Average Consumer Price",
            "DecisionPageFutureProjectionsCalculatorTable2ConsumerCommunication" : "Consumer Communication ($ mln)",
            "DecisionPageFutureProjectionsCalculatorTable2ConsumerPromotions"    : "Consumer Promotions ($ mln)",

            "DecisionPageFutureProjectionsCalculatorTable3SKUExpectedSales"        : "SKU: Expected Sales",
            "DecisionPageFutureProjectionsCalculatorTable3AdditionalInformation"   : "Additional Information (SKU)",
            "DecisionPageFutureProjectionsCalculatorTable3ExpectedMaximalSales"    : "Expected Maximal Sales ($ mln)",
            "DecisionPageFutureProjectionsCalculatorTable3ExpectedGrossMargin"     : "Expected Gross Margin (%)",
            "DecisionPageFutureProjectionsCalculatorTable3ExpectedOperatingMargin" : "Expected Operating Margin (%)",


            //Labels for Items on Decision Page - Product Portfolio
            "DecisionPageProductPortfolioLabel"		:	"Product Portfolio",

            "DecisionPageProductPortfolioTable1CurrentProduction"  : "Current Production",
            "DecisionPageProductPortfolioTable1SKUName"            : "SKU Name",
            "DecisionPageProductPortfolioTable1TargetSegment"      : "Target Segment",
            "DecisionPageProductPortfolioTable1FactoryPrice"       : "Factory Price",
            "DecisionPageProductPortfolioTable1IngredientsQuality" : "Ingredients Quality",
            "DecisionPageProductPortfolioTable1TechnologyLevel"    : "Technology Level",
            "DecisionPageProductPortfolioTable1ProductionVolume"   : "Production Volume",

            "DecisionPageProductPortfolioTable2PreviousInventory"             : "Previous Inventory",
            "DecisionPageProductPortfolioTable2SKUName"                       : "SKU Name",
            "DecisionPageProductPortfolioTable2AverageFactoryPrice"           : "Average Factory Price",
            "DecisionPageProductPortfolioTable2AverageIngredientQuality"      : "Average Ingredient Quality",
            "DecisionPageProductPortfolioTable2AverageTechnologyLevel"        : "Average Technology Level",
            "DecisionPageProductPortfolioTable2TotalInventoryVolumeAtFactory" : "Total Inventory Volume at Factory",


            //Labels for Items on Decision Page - Spending Details
            "DecisionPageSpendingDetailsLabel" : "Spending Details",

            "DecisionPageSpendingDetailsTable1BrandName" : "Brand Name",
            "DecisionPageSpendingDetailsTable1Total"     : "Total",

            "DecisionPageSpendingDetailsTable1SalesForce"                         : "Sales Force ($ mln)",
            "DecisionPageSpendingDetailsTable1ConsumerCommunication"              : "Consumer Communication ($ mln)",
            "DecisionPageSpendingDetailsTable1ConsumerPromotions"                 : "Consumer Promotions ($ mln)",
            "DecisionPageSpendingDetailsTable1TradeExpenses"                      : "Trade Expenses ($ mln)",
            "DecisionPageSpendingDetailsTable1EstimatedAdditionalTradeMarginCost" : "Estimated Additional Trade Margin Cost ($ mln)",
            "DecisionPageSpendingDetailsTable1EstimatedWholesaleBonusCost"        : "Estimated Wholesale Bonus Cost ($ mln)",

            "DecisionPageSpendingDetailsTable2Company"		:	"Company",
            "DecisionPageSpendingDetailsTable2Total"		:	"Total",


            "DecisionPageSpendingDetailsTable2InvestmentInProductionEfficiency"    : "Investment in Production Efficiency ($ mln)",
            "DecisionPageSpendingDetailsTable2InvestmentInProcessingTechnology"    : "Investment in Processing Technology ($ mln)",
            "DecisionPageSpendingDetailsTable2TotalInvestment"                     : "(-) Estimated Spending this period ($ mln)",
            "DecisionPageSpendingDetailsTable2AverageBudgetPerPeriod"              : "Average Budget per Period ($ mln)",
            "DecisionPageSpendingDetailsTable2TotalInvestmentBudget"               : "Total Investment Budget ($ mln)",
            "DecisionPageSpendingDetailsTable2CumulatedPreviousInvestments"        : "(-) Cumulated Previous Investments ($ mln)",
            "DecisionPageSpendingDetailsTable2AvailableBudget"                     : "(=) Estimated Total Budget Left ($ mln)",
            "DecisionPageSpendingDetailsTable2NormalCapacity"                      : "Normal Capacity Left This Period (mln Packs)",
            "DecisionPageSpendingDetailsTable2AvailableOvertimeCapacityExtension"  : "Available Overtime Capacity Extension Left This Period (mln Packs)",
            "DecisionPageSpendingDetailsTable2AcquiredEfficiency"                  : "Acquired Efficiency (%)",
            "DecisionPageSpendingDetailsTable2AcquiredProductionVolumeFlexibility" : "Acquired Production Volume Flexibility (%)",
            "DecisionPageSpendingDetailsTable2AcquiredTechnologyLevel"             : "Acquired Technology Level",

            //Labels for Final Score page
            "FinalScorePageScore"          : "Score",
            "FinalScorePageButtonOriginal" : "Original",
            "FinalScorePageButtonRescaled" : "Rescaled",
            "FinalScorePageWeightFactor"   : "Weight / Factor",

            "FinalScorePageIncrementalMarketShare"         : "Incremental market share (value)",
            "FinalScorePageCumulatedNetProfit"             : "Cumulated net profit",
            "FinalScorePageSpendingVersusBudgets"          : "Spending versus budgets",

            "FinalScorePageShareInBrandTotalSalesValue"    : "Share in Brand Total Sales Value",
            "FinalScorePageAchievementOfInitialObjectives" : "Achievement of initial objectives",
            "FinalScorePageFinalScore"                     : "Final Score",

            "FinalScorePageCompany"             : "Company",
            "FinalScorePagePeriod"              : "Period",
            "FinalScorePageCongratulations"     : "Congratulations ! You finish the game",
            "FinalScorePageCongratulationsInfo" : "Please take 5 minutes to provide feedback to MarkSimos. Your feedback will help us to improve our service",
            "FinalScorePageProvideFeedback"     : "Provide Feedback",


            //Labels for Questionnaire Page
            "QuestionnairePageQuestionnaire"                             : "Questionnaire",
            "QuestionnairePageVeryPoor"                                  : "Very poor",
            "QuestionnairePageAverage"                                   : "Average",
            "QuestionnairePageExcellent"                                 : "Excellent",
            "QuestionnairePageOverallSatisfactionWiththeProgram"         : "Overall Satisfaction With the Program",
            "QuestionnairePageChallengeStrategicThinkingAbility"         : "Challenge strategic thinking ability",
            "QuestionnairePageDevelopAnIntegratedPerspective"            : "Develop an integrated perspective",
            "QuestionnairePageTestPersonalAbilityOfBalancingRisks"       : "Test personal ability of balancing risks",
            "QuestionnairePageChallengeLeadershipAndTeamworkAbility"     : "Challenge leadership and teamwork ability",
            "QuestionnairePageChallengeAnalysisAndDecisionMakingAbility" : "Challenge analysis and decision-making ability",
            "QuestionnairePageSimulationInteresting"                     : "Simulation interesting",
            "QuestionnairePageTeachingTeam"                              : "Teaching Team",
            "QuestionnairePageFacilitator"                               : "Facilitator",
            "QuestionnairePageNormanYen"                                 : "Norman Yen",
            "QuestionnairePageFeedbackOnSimulationDecisions"             : "Feedback on simulation decisions",
            "QuestionnairePageExpandingViewAndInspireThinking"           : "Expanding view and inspire thinking",
            "QuestionnairePageLectures"                                  : "Lectures",
            "QuestionnairePageProduct"                                   : "Product",
            "QuestionnairePageOverallProductUsageExperience"             : "Overall Product Usage Experience",
            "QuestionnairePageUserInterfaceExperience"                   : "User Interface Experience",
            "QuestionnairePageEaseOfNavigation"                          : "Ease of Navigation",
            "QuestionnairePageClarityOfWordsUsed"                        : "Clarity of words used",
            "QuestionnairePageInterpreter"                               : "Interpreter",
            "QuestionnairePageOlive"                                     : "Olive",
            "QuestionnairePageAccuracyANDPresentation"                   : "Accuracy & Presentation",
            "QuestionnairePageTeachingSupport"                           : "Teaching Support",
            "QuestionnairePageMayYu"                                     : "May Yu",
            "QuestionnairePageHelpfulness"                               : "Helpfulness",
            "QuestionnairePageQualityOfTechnicalSupport"                 : "Quality of Technical Support",

            "QuestionnairePageOthers"             : "Others",
            "QuestionnairePageMostBenefit"        : "Which format of the program would benefit you the most",
            "QuestionnairePageJoinProgram"        : "Join Program with other companies",
            "QuestionnairePageCompanyInHouse"     : "Company In-House Program with other functions",
            "QuestionnairePageOpenClass"          : "Open class",
            "QuestionnairePageRecommendMarkSimos" : "Would you like to recommend MarkSimos to other companies or business school",
            "QuestionnairePageYes"                : "Yes",
            "QuestionnairePageNo"                 : "No",
            "QuestionnairePageBringYou"           : "What is the best benefit or experience MarkSimos bring to you ? Is there something special you learned that you like was unique / different compared to what you learned before",

            //Labels for Help page
            "HelpPageMenuFAQ"                     : "FAQ",
            "HelpPageMenuVideo"                   : "Video",
            "HelpPageMenuManual"                  : "Manual",

            //Labels for FAQ Page
            "FAQPageTitle"                        : "Frequently Asked Questions",
            "FAQPageSubTitle"                     : "This FAQ will attempt to cover the most asked questions about Marksimos game.",

            "ManualPageTitle"    : "Manual",
            "ManualPageDownload" : "Download"







        });










        // Adding a translation table for the Chinese language
        $translateProvider.translations('zh_CN', {


            //Labels for Login
            "LoginPageLabelWelcome" : "欢迎使用MarkSimos !",
            "LoginPageLabelSignIn" : "登录",
            "LoginPageLabelEmail" : "邮箱 :",
            "LoginPageLabelPassword" : "密码 :",
            "LoginPageLabelPasswordErrorInfo" : "邮箱或密码错误 !",
            "LoginPageButtonSignIn" : "点击登录",


            //Labels for Introduction
            "IntroPageSeminarListTitle"                   : "目前已有的游戏列表",
            "IntroPageSeminarListLabelSeminarID"          : "课程号",
            "IntroPageSeminarListLabelSeminarDescription" : "课程说明",
            "IntroPageSeminarListLabelTotalRound"         : "总阶段数",
            "IntroPageSeminarListLabelCompetitor"         : "参与竞争者",
            "IntroPageSeminarListLabelDateOfCommencement" : "开始时间",
            "IntroPageSeminarListLabelSeminarStatus"      : "课程状态",
            "IntroPageSeminarListLabelCountry"            : "国家",
            "IntroPageSeminarListLabelProvince"           : "省(州)",
            "IntroPageSeminarListLabelCity"               : "城市",
            "IntroPageSeminarListLabelVenue"              : "地点或场所",


            "IntroPageSentence1" : "我的角色",
            "IntroPageSentence2" : "我正在接管公司",
            "IntroPageSentence3" : "运营管理",
            "IntroPageSentence4" : "商品，",
            "IntroPageSentence5" : "共",
            "IntroPageSentence6" : "个品牌",
            "IntroPageSentence7" : "还要与另外",
            "IntroPageSentence8" : "个对手竞争",


            "IntroPageSentence21" : "公司的最终目标是要获得",
            "IntroPageSentence22" : "最高的市场份额",
            "IntroPageSentence23" : "和",
            "IntroPageSentence24" : "净利润",


            //Labels for Items on Home page - Top Menu Bar
            "HomePageMenuBarLabelsHome"       : "首页",
            "HomePageMenuBarLabelsReport"     : "报告",
            "HomePageMenuBarLabelsDecision"   : "决策",
            "HomePageMenuBarLabelsScore"      : "得分",
            "HomePageMenuBarLabelsLanguage"   : "语言",
            "HomePageMenuBarLabelsHelp"       : "帮助",
            "HomePageMenuBarLabelsHelpFAQ"    : "FAQ",
            "HomePageMenuBarLabelsHelpVideo"  : "视频",
            "HomePageMenuBarLabelsHelpManual" : "手册",
            "HomePageMenuBarLabelsAbout"      : "关于 MarkSimos",
            "HomePageMenuBarLabelsLogout"     : "登出",

            //Labels for Segment
            "HomePageSegmentLabelPriceSensitive" : "1 价格敏感型",
            "HomePageSegmentLabelPretenders"     : "2 虚荣型",
            "HomePageSegmentLabelModerate"       : "3 适中型",
            "HomePageSegmentLabelGoodLife"       : "4 享受生活型",
            "HomePageSegmentLabelUltimate"       : "5 追求极致型",
            "HomePageSegmentLabelPragmatic"      : "6 实用型",
            "HomePageSegmentLabelAllSegments"    : "所有消费者类型",



            //Labels for Items on Home page - Second Menu Bar
            "HomePageSecondMenuBarLabelsCompany"           : "公司",
            "HomePageSecondMenuBarLabelsCompanies"         : "个公司",
            "HomePageSecondMenuBarLabelsTimeLeft"          : "剩余",
            "HomePageSecondMenuBarLabelsTimeLeftForSubmit" : "时间做决策",
            "HomePageSecondMenuBarLabelsMission"           : "目标：市场份额+利润",
            "HomePageSecondMenuBarLabelsMakeDecision"      : "做决策",
            "HomePageSecondMenuBarCurrentPeriod"           : "阶段",

            "HomePageSecondMenuBarCompareData"           : "数据报告对比",

            //Labels for Items on Home page - Three Boxes
            "HomePageYourCompanyTableLabel"                 : "您的公司",
            "HomePageYourCompanyCompanyStatus"              : "公司基本信息",
            "HomePageYourCompanyFinancialReport"            : "财务报告",
            "HomePageYourCompanyInventoryReport"            : "库存报告",
            "HomePageYourCompanyProfitabilityEvolution"     : "盈利变化",
            "HomePageYourCompetitorTableLabel"              : "你的竞争对手",
            "HomePageYourCompetitorMarketShare"             : "市场份额",
            "HomePageYourCompetitorCompetitorIntelligence"  : "竞争对手情报",
            "HomePageYourCompetitorInvestmentsandProfits"   : "投资与利润",
            "HomePageYourCompetitorMarketSalesandInventory" : "销售与库存状况",
            "HomePageMarketLandscapeTableLabel"             : "市场前景",
            "HomePageMarketLandscapeSegmentLeaderTop5"      : "细分市场领导者",
            "HomePageMarketLandscapePerceptionMap"          : "感知图",
            "HomePageMarketLandscapeSegmentDistributions"   : "细分市场数据",
            "HomePageMarketLandscapeMarketEvolution"        : "市场演变趋势",
            "HomePageMarketLandscapeMarketTrends"           : "市场趋势",
            "HomePageMarketLandscapeMarketIndicators"       : "宏观市场参数",


            //Labels for Items on Reports page - reports menu
            "ReportYourCompany"                : "你的公司",
            "ReportMenuCompanyStatus"          : "公司基本信息",
            "ReportMenuFinancialReport"        : "财务报告",
            "ReportMenuInventoryReport"        : "库存报告",
            "ReportMenuProfitabilityEvolution" : "盈利变化",
            "ReportYourCompetitors"            : "你的竞争对手",
            "ReportMenuMarketShare"            : "市场份额",
            "ReportMenuCompetitorIntelligence" : "竞争对手情报",
            "ReportMenuInvestmentProfits"      : "投资与利润",
            "ReportMenuMarketSalesInventory"   : "销售与库存状况",
            "ReportMarketLandscape"            : "市场前景",
            "ReportMenuSegmentLeaderTop5"      : "细分市场领导者",
            "ReportMenuPerceptionMap"          : "感知图",
            "ReportMenuSegmentDistributions"   : "细分市场数据",
            "ReportMenuMarketEvolution"        : "市场演变趋势",
            "ReportMenuMarketTrends"           : "市场趋势",
            "ReportMenuMarketIndicator"        : "宏观市场参数",


            //Labels for Company Status Report Tab Menu
            "ReportTabLabelSKU"    : "按单品",
            "ReportTabLabelBrand"  : "按品牌",
            "ReportTabLabelGlobal" : "公司",

            "ReportTabLabelTableChartDisplayLine" : "折线图",
            "ReportTabLabelTableChartDisplayBar" : "柱状图",
            "ReportTabLabelTableChartDisplayPoint" : "散点图",
            "ReportTabLabelTableChartDisplayArea"  : "面积图",
            "ReportTabLabelTableChartDisplayPie"   : "饼图",

            //Labels for Company Status Report - SKU Level
            "ReportCompanyStatusSKUQuarter" : "阶段",

            "ReportCompanyStatusSKUMarketShareValue"                             : "市场份额 (销售额 %)",
            "ReportCompanyStatusSKUMarketShareVolume"                            : "市场份额 (销量 %)",
            "ReportCompanyStatusSKUMarketSalesVolumeStd"                         : "市场销量 (百万标准包)",
            "ReportCompanyStatusSKULostSalesVolumeDueToOOSStd"                   : "因缺货损失的销售量 (百万标准包)",
            "ReportCompanyStatusSKUNumericalDistribution"                        : "数值分销率 (%)",
            "ReportCompanyStatusSKUVolumeWeightedDistribution"                   : "加权分销率 (%)",
            "ReportCompanyStatusSKUShelfSpace"                                   : "货架空间 (%)",
            "ReportCompanyStatusSKUAwareness"                                    : "知名度 (%)",
            "ReportCompanyStatusSKUAverageNetMarketPrice"                        : "平均净市场价 ($/标准包)",
            "ReportCompanyStatusSKUAverageDisplayPrice"                          : "平均陈列价格 ($/标准包)",
            "ReportCompanyStatusSKUPriceRankingIndex"                            : "价格排序指数",
            "ReportCompanyStatusSKUTargetConsumerSegment"                        : "目标细分市场",
            "ReportCompanyStatusSKUTargetConsumerSegmentExpectedValuePerception" : "目标细分市场 预计 价值感知",
            "ReportCompanyStatusSKUValuePerception"                              : "价值感知",
            "ReportCompanyStatusSKUTargetConsumerSegmentExpectedImagePerception" : "目标细分市场 预计 形象感知",
            "ReportCompanyStatusSKUImagePerception"                              : "形象感知",

            "ReportCompanyStatusSKUIngredientsQualityIndex" : "成分质量指数",
            "ReportCompanyStatusSKUAppliedTechnologyIndex"  : "应用的技术指数",

            "ReportCompanyStatusSKUMarketSalesValue"        : "市场销售额 (RMB 百万)",
            "ReportCompanyStatusSKUConsumerPricePromotions" : "消费者价格促销 (RMB 百万)",
            "ReportCompanyStatusSKUMarketNetSalesValue"     : "市场净销售额  (RMB 百万)",

            "ReportCompanyStatusSKULostSalesVolumeDueToOOS"    : "因缺货损失的销售量 (百万包)",
            "ReportCompanyStatusSKUNumberOfOutOfStockEpisodes" : "缺货周数",

            "ReportCompanyStatusSKUMarketSalesVolume"             : "市场销售量 (百万包)",
            "ReportCompanyStatusSKURetailersPurchasesVolume"      : "零售商购买量 (百万包)",
            "ReportCompanyStatusSKUShipmentsToWholesalers"        : "经销商购买量 (百万包)",
            "ReportCompanyStatusSKUProductionVolume"              : "产量 (百万包)",
            "ReportCompanyStatusSKUInventoryVolumeAtManufacturer" : "厂商持有的库存量 (百万包)",
            "ReportCompanyStatusSKUInventoryVolumeAtWholesalers"  : "经销商持有的库存量 (百万包)",
            "ReportCompanyStatusSKUInventoryVolumeAtRetailers"    : "零售商持有的库存量 (百万包)",

            "ReportCompanyStatusSKUStocksCoverAtRetailers"   : "零售商的库存维持期 (周)",
            "ReportCompanyStatusSKUStocksCoverAtWholesalers" : "经销商的库存维持期 (周)",

            //Labels for Company Status Report - Brand Level
            "ReportCompanyStatusBrandMarketShareValue"           : "市场份额 (销售额 %)",
            "ReportCompanyStatusBrandMarketShareVolume"          : "市场份额 (销量 %)",
            "ReportCompanyStatusBrandMarketSalesVolumeStd"       : "市场销量 (百万标准包)",
            "ReportCompanyStatusBrandLostSalesVolumeDueToOOSStd" : "因缺货损失的销售量 (百万标准包)",
            "ReportCompanyStatusBrandNumericalDistribution"      : "数值分销率 (%)",
            "ReportCompanyStatusBrandVolumeWeightedDistribution" : "加权分销率 (%)",
            "ReportCompanyStatusBrandShelfSpace"                 : "货架空间 (%)",
            "ReportCompanyStatusBrandAwareness"                  : "知名度 (%)",
            "ReportCompanyStatusBrandAverageNetMarketPrice"      : "平均净市场价 ($/标准包)",
            "ReportCompanyStatusBrandAverageDisplayPrice"        : "平均陈列价格 ($/标准包)",
            "ReportCompanyStatusBrandPriceRankingIndex"          : "价格排序指数",
            "ReportCompanyStatusBrandValuePerception"            : "价值感知",
            "ReportCompanyStatusBrandImagePerception"            : "形象感知",
            "ReportCompanyStatusBrandIngredientsQualityIndex"    : "成分质量指数",
            "ReportCompanyStatusBrandAppliedTechnologyIndex"     : "应用的技术指数",

            "ReportCompanyStatusBrandMarketSalesValue"	:	"市场销售额 (RMB 百万)",
            "ReportCompanyStatusBrandConsumerPricePromotions"	:	"消费者价格促销 (RMB 百万)",
            "ReportCompanyStatusBrandMarketNetSalesValue"	:	"市场净销售额  (RMB 百万)",
            "ReportCompanyStatusBrandLostSalesVolumeDueToOOS"	:	"因缺货损失的销售量 (百万包)",
            "ReportCompanyStatusBrandNumberOfOutOfStockEpisodes"	:	"缺货周数",
            "ReportCompanyStatusBrandMarketSalesVolume"	:	"市场销售量 (百万包)",
            "ReportCompanyStatusBrandRetailersPurchasesVolume"	:	"零售商购买量 (百万包)",
            "ReportCompanyStatusBrandShipmentsToWholesalers"	:	"经销商购买量 (百万包)",
            "ReportCompanyStatusBrandProductionVolume"	:	"产量 (百万包)",
            "ReportCompanyStatusBrandInventoryVolumeAtManufacturer"	:	"厂商持有的库存量 (百万包)",
            "ReportCompanyStatusBrandInventoryVolumeAtWholesalers"	:	"经销商持有的库存量 (百万包)",
            "ReportCompanyStatusBrandInventoryVolumeAtRetailers"	:	"零售商持有的库存量 (百万包)",

            "ReportCompanyStatusBrandStocksCoverAtRetailers"	:	"零售商的库存维持期 (周)",
            "ReportCompanyStatusBrandStocksCoverAtWholesalers"	:	"经销商的库存维持期 (周)",

            //Labels for Company Status Report - Global Level
            "ReportCompanyStatusGlobalMarketShareValue"           : "市场份额 (销售额 %)",
            "ReportCompanyStatusGlobalMarketShareVolume"          : "市场份额 (销量 %)",
            "ReportCompanyStatusGlobalMarketSalesVolumeStd"       : "市场销量 (百万标准包)",
            "ReportCompanyStatusGlobalLostSalesVolumeDueToOOSStd" : "因缺货损失的销售量 (百万标准包)",
            "ReportCompanyStatusGlobalNumericalDistribution"      : "数值分销率 (%)",
            "ReportCompanyStatusGlobalVolumeWeightedDistribution" : "加权分销率 (%)",
            "ReportCompanyStatusGlobalShelfSpace"                 : "货架空间 (%)",
            "ReportCompanyStatusGlobalMindSpaceShare"             : "思维空间份额（%）",
            "ReportCompanyStatusGlobalAverageNetMarketPrice"      : "平均净市场价 ($/标准包)",
            "ReportCompanyStatusGlobalAverageDisplayPrice"        : "平均陈列价格 ($/标准包)",
            "ReportCompanyStatusGlobalIngredientsQualityIndex"    : "成分质量指数",
            "ReportCompanyStatusGlobalAppliedTechnologyIndex"     : "应用的技术指数",

            "ReportCompanyStatusGlobalMarketSalesValue"        : "市场销售额 (RMB 百万)",
            "ReportCompanyStatusGlobalConsumerPricePromotions" : "消费者价格促销 (RMB 百万)",
            "ReportCompanyStatusGlobalMarketNetSalesValue"     : "市场净销售额  (RMB 百万)",

            "ReportCompanyStatusGlobalLostSalesVolumeDueToOOS" : "因缺货损失的销售量 (百万包)",

            "ReportCompanyStatusGlobalNumberOfOutOfStockEpisodes"	:	"缺货周数",
            "ReportCompanyStatusGlobalMarketSalesVolume"	:	"市场销售量 (百万包)",
            "ReportCompanyStatusGlobalRetailersPurchasesVolume"	:	"零售商购买量 (百万包)",
            "ReportCompanyStatusGlobalShipmentsToWholesalers"	:	"经销商购买量 (百万包)",
            "ReportCompanyStatusGlobalProductionVolume"	:	"产量 (百万包)",
            "ReportCompanyStatusGlobalInventoryVolumeAtManufacturer"	:	"厂商持有的库存量 (百万包)",
            "ReportCompanyStatusGlobalInventoryVolumeAtWholesalers"	:	"经销商持有的库存量 (百万包)",
            "ReportCompanyStatusGlobalInventoryVolumeAtRetailers"	:	"零售商持有的库存量 (百万包)",
            "ReportCompanyStatusGlobalStocksCoverAtRetailers"	:	"零售商的库存维持期 (周)",
            "ReportCompanyStatusGlobalStocksCoverAtWholesalers"	:	"经销商的库存维持期 (周)",

            //Labels for Financial Report - Brand Level
            "ReportFinancialReportBrandSalesValue"	:	"销售额 (RMB 百万)",
            "ReportFinancialReportBrandChangeVersusPreviousPeriodSalesValue"	:	"(%) 相对于上阶段的改变",
            "ReportFinancialReportBrandShareInBrandTotalSalesValue"	:	"占该品牌总销售额的份额 (%)",
            "ReportFinancialReportBrandCostOfGoodsSold"	:	"售出商品成本 (RMB 百万)",
            "ReportFinancialReportBrandObsoleteGoodsCost"	:	"处理商品成本 (RMB 百万)",
            "ReportFinancialReportBrandDiscontinuedGoodsCost"	:	"停产商品成本 (RMB 百万)",
            "ReportFinancialReportBrandInventoryHoldingCost"	:	"库存持有成本 (RMB 百万)",
            "ReportFinancialReportBrandTotalMaterialCost"	:	"总材料成本 (RMB 百万)",

            "ReportFinancialReportBrandGrossProfit"	:	"毛利额 (RMB 百万)",
            "ReportFinancialReportBrandChangeVersusPreviousPeriodGrossProfit"	:	"(%) 相对于上阶段的改变",
            "ReportFinancialReportBrandGrossProfitMargin"	:	"毛利率 (%)",
            "ReportFinancialReportBrandShareInBrandGrossProfitLosses"	:	"占该品牌 毛利/负毛利 的份额 (%)",

            "ReportFinancialReportBrandAdvertising"	:	"广告费用 (RMB 百万)",
            "ReportFinancialReportBrandConsumerPromotionCost"	:	"促销成本 (RMB 百万)",
            "ReportFinancialReportBrandTradeInvestment"	:	"零售终端费用 (RMB 百万)",
            "ReportFinancialReportBrandSalesForceCost"	:	"销售团队成本 (RMB 百万)",
            "ReportFinancialReportBrandAdditionalTradeMarginCost"	:	"额外零售终端返利 (RMB 百万)",
            "ReportFinancialReportBrandVolumeDiscountCost"	:	"经销商进货折扣成本 (RMB 百万)",
            "ReportFinancialReportBrandTotalTradeAndMarketingExpenses"	:	"总的通路和营销费用 (RMB 百万)",
            "ReportFinancialReportBrandTradeAndMarketingExpensesasaOfSales"	:	"通路和营销费用占销售额的百分比",
            "ReportFinancialReportBrandShareOfTradeAndMarketingExpensesInBrandTotal"	:	"占该品牌通路和营销总额的份额 (%)",

            "ReportFinancialReportBrandGeneralExpenses"	:	"一般性开支 (RMB 百万)",
            "ReportFinancialReportBrandAmortisation"	:	"摊销费用 (RMB 百万)",

            "ReportFinancialReportBrandOperatingProfit"	:	"运营利润 (RMB 百万)",
            "ReportFinancialReportBrandChangeVersusPreviousPeriodOperatingProfit"	:	"(%) 相对于上阶段的改变",
            "ReportFinancialReportBrandOperatingProfitMargin"	:	"运营利润率 (%)",
            "ReportFinancialReportBrandShareInBrandOperatingProfitLoss"	:	"占该品牌 运营利润/运营亏损 的份额 (%)",

            "ReportFinancialReportBrandInterests"	:	"利息 (RMB 百万)",
            "ReportFinancialReportBrandTaxes"	:	"税 (RMB 百万)",
            "ReportFinancialReportBrandExceptionalCostProfit"	:	"额外开支/利润  (RMB 百万)",

            "ReportFinancialReportBrandNetProfit"	:	"净利润 (RMB 百万)",
            "ReportFinancialReportBrandChangeVersusPreviousPeriodNetProfit"	:	"(%) 相对于上阶段的改变",
            "ReportFinancialReportBrandNetProfitMargin"	:	"净利率 (%)",
            "ReportFinancialReportBrandShareInBrandNetProfitLoss"	:	"占该品牌 净利润/净亏损 的份额 (%)",

            "ReportFinancialReportBrandProductionCost"	:	"生产成本 (RMB 百万)",
            "ReportFinancialReportBrandInventoryValue"	:	"库存价值 (RMB 百万)",


            //Labels for Financial Report - All Brands
            "ReportFinancialReportAllBrandSalesValue"                           : "销售额 (RMB 百万)",
            "ReportFinancialReportAllBrandChangeVersusPreviousPeriodSalesValue" : "(%) 相对于上阶段的改变",
            "ReportFinancialReportAllBrandShareInCompanyTotalSalesValue"        : "占公司总销售额的份额 (%)",
            "ReportFinancialReportAllBrandCostOfGoodsSold"                      : "售出商品成本 (RMB 百万)",
            "ReportFinancialReportAllBrandObsoleteGoodsCost"                    : "处理商品成本 (RMB 百万)",
            "ReportFinancialReportAllBrandDiscontinuedGoodsCost"                : "停产商品成本 (RMB 百万)",
            "ReportFinancialReportAllBrandInventoryHoldingCost"                 : "库存持有成本 (RMB 百万)",
            "ReportFinancialReportAllBrandTotalMaterialCost"                    : "总材料成本 (RMB 百万)",

            "ReportFinancialReportAllBrandGrossProfit"                                  : "毛利额 (RMB 百万)",
            "ReportFinancialReportAllBrandChangeVersusPreviousperiodGrossProfit"        : "(%) 相对于上阶段的改变",
            "ReportFinancialReportAllBrandGrossProfitMargin"                            : "毛利率 (%)",
            "ReportFinancialReportAllBrandShareInCompanyGrossProfitLosses"              : "占公司 总毛利/总负毛利 的份额 (%)",
            "ReportFinancialReportAllBrandAdvertising"                                  : "广告费用 (RMB 百万)",
            "ReportFinancialReportAllBrandConsumerPromotionCost"                        : "促销成本 (RMB 百万)",
            "ReportFinancialReportAllBrandTradeInvestment"                              : "零售终端费用 (RMB 百万)",
            "ReportFinancialReportAllBrandSalesForceCost"                               : "销售团队成本 (RMB 百万)",
            "ReportFinancialReportAllBrandAdditionalTradeMarginCost"                    : "额外零售终端返利 (RMB 百万)",
            "ReportFinancialReportAllBrandVolumeDiscountCost"                           : "经销商进货折扣成本 (RMB 百万)",
            "ReportFinancialReportAllBrandTotalTradeAndMarketingExpenses"               : "总的通路和营销费用 (RMB 百万)",
            "ReportFinancialReportAllBrandTradeAndMarketingExpensesasaOfSales"          : "通路和营销费用占销售额的百分比",
            "ReportFinancialReportAllBrandShareOfTradeAndMarketingExpensesInBrandTotal" : "占公司通路和营销总费用的份额 (%)",

            "ReportFinancialReportAllBrandGeneralExpenses" : "一般性开支 (RMB 百万)",
            "ReportFinancialReportAllBrandAmortisation"    : "摊销费用 (RMB 百万)",

            "ReportFinancialReportAllBrandOperatingProfit"                           : "运营利润 (RMB 百万)",
            "ReportFinancialReportAllBrandChangeVersusPreviousPeriodOperatingProfit" : "(%) 相对于上阶段的改变",
            "ReportFinancialReportAllBrandOperatingProfitMargin"                     : "运营利润率 (%)",
            "ReportFinancialReportAllBrandShareInBrandOperatingProfitLoss"           : "占公司 总运营利润/总运营亏损 的份额 (%)",

            "ReportFinancialReportAllBrandInterests"	:	"利息 (RMB 百万)",
            "ReportFinancialReportAllBrandTaxes"	:	"税 (RMB 百万)",
            "ReportFinancialReportAllBrandExceptionalCostProfit"	:	"额外开支/利润  (RMB 百万)",

            "ReportFinancialReportAllBrandNetProfit"	:	"净利润 (RMB 百万)",
            "ReportFinancialReportAllBrandChangeVersusPreviousPeriodNetProfit"	:	"(%) 相对于上阶段的改变",
            "ReportFinancialReportAllBrandNetProfitMargin"	:	"净利率 (%)",
            "ReportFinancialReportAllBrandShareInCompanyNetProfitLoss"	:	"占公司 净利润/净亏损 的份额 (%)",

            "ReportFinancialReportAllBrandProductionCost"	:	"生产成本 (RMB 百万)",
            "ReportFinancialReportAllBrandInventoryValue"	:	"库存价值 (RMB 百万)",


            //Labels for Inventory Report
            "ReportInventoryReportLabelCloseToExpireInventory" : "将要过期的库存",
    //        "ReportInventoryReportLabelPreviousInventory"      : "以前的库存",
            "ReportInventoryReportLabelPreviousInventory"      : "将要过期的库存",
            "ReportInventoryReportLabelFreshInventory"         : "新库存",
            "ReportInventoryReportTableLabelX"                 : "总库存 (百万标准包) = 工厂库存＋渠道以及零售商库存",
            "ReportInventoryReportTableLabelY"                 : "百万件",


            //Labels for Profitability Evolution - SKU Level
            "ReportProfitabilityEvolutionSKUQuarter"	:	"阶段",

            "ReportProfitabilityEvolutionSKUManufacturerSalesValue" : "厂商销售额 (RMB 百万)",

            "ReportProfitabilityEvolutionSKUCostOfGoodsSold"       : "售出商品成本 (RMB 百万)",
            "ReportProfitabilityEvolutionSKUInventoryHolding"      : "库存持有成本 (RMB 百万)",
            "ReportProfitabilityEvolutionSKUObsoleteGoods"         : "处理商品成本 (RMB 百万)",
            "ReportProfitabilityEvolutionSKUDiscontinuedGoodsCost" : "停产商品成本 (RMB 百万)",
            "ReportProfitabilityEvolutionSKUGrossProfit"           : "毛利额 (RMB 百万)",

            "ReportProfitabilityEvolutionSKUAdvertising"                    : "广告费用 (RMB 百万)",
            "ReportProfitabilityEvolutionSKUConsumerPromotionsCost"         : "促销成本 (RMB 百万)",
            "ReportProfitabilityEvolutionSKUTradeInvestment"                : "零售终端费用 (RMB 百万)",
            "ReportProfitabilityEvolutionSKUSalesForceCost"                 : "销售团队成本 (RMB 百万)",
            "ReportProfitabilityEvolutionSKUVolumeDiscountCost"             : "经销商进货折扣成本 (RMB 百万)",
            "ReportProfitabilityEvolutionSKUAdditionalTradeMarginCost"      : "额外零售终端返利 (RMB 百万)",
            "ReportProfitabilityEvolutionSKUTotalTradeAndMarketingExpenses" : "总的通路和营销费用 (RMB 百万)",

            "ReportProfitabilityEvolutionSKUGeneralExpenses" : "一般性开支 (RMB 百万)",
            "ReportProfitabilityEvolutionSKUAmortisation"    : "摊销费用 (RMB 百万)",
            "ReportProfitabilityEvolutionSKUOperatingProfit" : "运营利润 (RMB 百万)",

            "ReportProfitabilityEvolutionSKUInterests"             : "利息 (RMB 百万)",
            "ReportProfitabilityEvolutionSKUExceptionalCostProfit" : "额外开支/利润  (RMB 百万)",
            "ReportProfitabilityEvolutionSKUTaxes"                 : "税 (RMB 百万)",
            "ReportProfitabilityEvolutionSKUNetProfit"             : "净利润 (RMB 百万)",

            "ReportProfitabilityEvolutionSKUSurchargeForSupplementaryInvestmentBudget"	:	"追加投资预算产生的额外费用 (RMB 百万)",
            "ReportProfitabilityEvolutionSKUNetResult"	:	"净利额 (RMB 百万)",

            "ReportProfitabilityEvolutionSKUShareInBrandTotalSalesValue"	:	"占该品牌总销售额的份额 (%)",
            "ReportProfitabilityEvolutionSKUShareInBrandGrossProfitLosses"	:	"占该品牌 毛利/负毛利 的份额 (%)",
            "ReportProfitabilityEvolutionSKUShareOfTradeAndMarketingExpensesInBrandTotal"	:	"占公司通路和营销总费用的份额 (%)",
            "ReportProfitabilityEvolutionSKUShareInBrandOperatingProfitLosses"	:	"占该品牌 运营利润/运营亏损 的份额 (%)",
            "ReportProfitabilityEvolutionSKUShareInBrandNetProfitLosses"	:	"占该品牌 净利润/净亏损 的份额 (%)",

            "ReportProfitabilityEvolutionSKUGrossProfitMargin"	:	"毛利率 (%)",
            "ReportProfitabilityEvolutionSKUTradeAndMarketingExpensesasaOfSales"	:	"通路和营销费用占销售额的百分比",
            "ReportProfitabilityEvolutionSKUGeneralExpensesasaOfSales"	:	"一般费用占销售额的百分比",
            "ReportProfitabilityEvolutionSKUOperatingProfitMargin"	:	"运营利润率 (%)",
            "ReportProfitabilityEvolutionSKUNetProfitMargin"	:	"净利率 (%)",

            "ReportProfitabilityEvolutionSKUReturnOnInvestment"	:	"投资回报率 (%)",

            "ReportProfitabilityEvolutionSKUAverageNetMarketPrice"	:	"平均净市场价 ($/包)",
            "ReportProfitabilityEvolutionSKUAverageWholesalesPrice"	:	"平均批发价 ($/包)",
            "ReportProfitabilityEvolutionSKUAverageManufacturerPrice"	:	"平均出厂价 ($/包)",
            "ReportProfitabilityEvolutionSKUAverageProductionCost"	:	"平均生产成本 ($/包)",

            "ReportProfitabilityEvolutionSKUMarketSalesValue"	:	"市场销售额 (RMB 百万)",
            "ReportProfitabilityEvolutionSKUConsumerPricePromotions"	:	"消费者价格促销 (RMB 百万)",
            "ReportProfitabilityEvolutionSKUMarketNetSalesValue"	:	"市场净销售额  (RMB 百万)",

            "ReportProfitabilityEvolutionSKUAdditionalRetailersMargin"	:	"给零售商的额外折扣 (%)",
            "ReportProfitabilityEvolutionSKUWholesalersBonusRate"	:	"经销商进货折扣率 (%)",
            "ReportProfitabilityEvolutionSKUMinimalPurchaseQualifyingForBonus"	:	"享受进货折扣的最低订货量 (百万标准包)",

            "ReportProfitabilityEvolutionSKUProductionCost"	:	"生产成本 (RMB 百万)",
            "ReportProfitabilityEvolutionSKUInventoryValue"	:	"库存价值 (RMB 百万)",

            //Labels for Profitability Evolution - Brand Level
            "ReportProfitabilityEvolutionBrandManufacturerSalesValue" : "厂商销售额 (RMB 百万)",

            "ReportProfitabilityEvolutionBrandCostOfGoodsSold"       : "售出商品成本 (RMB 百万)",
            "ReportProfitabilityEvolutionBrandInventoryHolding"      : "库存持有成本 (RMB 百万)",
            "ReportProfitabilityEvolutionBrandObsoleteGoods"         : "处理商品成本 (RMB 百万)",
            "ReportProfitabilityEvolutionBrandDiscontinuedGoodsCost" : "停产商品成本 (RMB 百万)",
            "ReportProfitabilityEvolutionBrandGrossProfit"           : "毛利额 (RMB 百万)",

            "ReportProfitabilityEvolutionBrandAdvertising"                    : "广告费用 (RMB 百万)",
            "ReportProfitabilityEvolutionBrandConsumerPromotionsCost"         : "促销成本 (RMB 百万)",
            "ReportProfitabilityEvolutionBrandTradeInvestment"                : "零售终端费用 (RMB 百万)",
            "ReportProfitabilityEvolutionBrandSalesForceCost"                 : "销售团队成本 (RMB 百万)",
            "ReportProfitabilityEvolutionBrandVolumeDiscountCost"             : "经销商进货折扣成本 (RMB 百万)",
            "ReportProfitabilityEvolutionBrandAdditionalTradeMarginCost"      : "额外零售终端返利 (RMB 百万)",
            "ReportProfitabilityEvolutionBrandTotalTradeAndMarketingExpenses" : "总的通路和营销费用 (RMB 百万)",

            "ReportProfitabilityEvolutionBrandGeneralExpenses" : "一般性开支 (RMB 百万)",
            "ReportProfitabilityEvolutionBrandAmortisation"    : "摊销费用 (RMB 百万)",
            "ReportProfitabilityEvolutionBrandOperatingProfit" : "运营利润 (RMB 百万)",

            "ReportProfitabilityEvolutionBrandInterests"             : "利息 (RMB 百万)",
            "ReportProfitabilityEvolutionBrandExceptionalCostProfit" : "额外开支/利润  (RMB 百万)",
            "ReportProfitabilityEvolutionBrandTaxes"                 : "税 (RMB 百万)",
            "ReportProfitabilityEvolutionBrandNetProfit"             : "净利润 (RMB 百万)",

            "ReportProfitabilityEvolutionBrandSurchargeForSupplementaryInvestmentBudget" : "追加投资预算产生的额外费用 (RMB 百万)",
            "ReportProfitabilityEvolutionBrandNetResult"                                 : "净利额 (RMB 百万)",

            "ReportProfitabilityEvolutionBrandShareInCompanyTotalSalesValue"                  : "占公司总销售额的份额 (%)",
            "ReportProfitabilityEvolutionBrandShareInCompanyGrossProfitLosses"                : "占公司 毛利/负毛利 的份额 (%)",
            "ReportProfitabilityEvolutionBrandShareOfTradeAndMarketingExpensesInCompanyTotal" : "占公司通路和营销总费用的份额 (%)",
            "ReportProfitabilityEvolutionBrandShareInCompanyOperatingProfitLosses"            : "占公司 总运营利润/总运营亏损 的份额 (%)",
            "ReportProfitabilityEvolutionBrandShareInCompanyNetProfitLosses"                  : "占公司 净利润/净亏损 的份额 (%)",

            "ReportProfitabilityEvolutionBrandGrossProfitMargin"	:	"毛利率 (%)",
            "ReportProfitabilityEvolutionBrandTradeAndMarketingExpensesasaOfSales"	:	"通路和营销费用占销售额的百分比",
            "ReportProfitabilityEvolutionBrandGeneralExpensesasaOfSales"	:	"一般费用占销售额的百分比",
            "ReportProfitabilityEvolutionBrandOperatingProfitMargin"	:	"运营利润率 (%)",
            "ReportProfitabilityEvolutionBrandNetProfitMargin"	:	"净利率 (%)",

            "ReportProfitabilityEvolutionBrandReturnOnInvestment"	:	"投资回报率 (%)",

            "ReportProfitabilityEvolutionBrandAverageNetMarketPrice"    : "平均净市场价 ($/包)",
            "ReportProfitabilityEvolutionBrandAverageWholesalesPrice"   : "平均批发价 ($/包)",
            "ReportProfitabilityEvolutionBrandAverageManufacturerPrice" : "平均出厂价 ($/包)",
            "ReportProfitabilityEvolutionBrandAverageProductionCost"    : "平均生产成本 ($/包)",

            "ReportProfitabilityEvolutionBrandMarketSalesValue"        : "市场销售额 (RMB 百万)",
            "ReportProfitabilityEvolutionBrandConsumerPricePromotions" : "消费者价格促销 (RMB 百万)",
            "ReportProfitabilityEvolutionBrandMarketNetSalesValue"     : "市场净销售额  (RMB 百万)",

            "ReportProfitabilityEvolutionBrandProductionCost" : "生产成本 (RMB 百万)",
            "ReportProfitabilityEvolutionBrandInventoryValue" : "库存价值 (RMB 百万)",

            //Labels for Profitability Evolution - Global Level
            "ReportProfitabilityEvolutionGlobalManufacturerSalesValue" : "厂商销售额 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalCostOfGoodsSold"        : "售出商品成本 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalInventoryHolding"       : "库存持有成本 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalObsoleteGoods"          : "处理商品成本 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalDiscontinuedGoodsCost"  : "停产商品成本 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalGrossProfit"            : "毛利额 (RMB 百万)",

            "ReportProfitabilityEvolutionGlobalAdvertising"                    : "广告费用 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalConsumerPromotionsCost"         : "促销成本 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalTradeInvestment"                : "零售终端费用 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalSalesForceCost"                 : "销售团队成本 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalVolumeDiscountCost"             : "经销商进货折扣成本 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalAdditionalTradeMarginCost"      : "额外零售终端返利 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalTotalTradeAndMarketingExpenses" : "总的通路和营销费用 (RMB 百万)",

            "ReportProfitabilityEvolutionGlobalOverhead"                                 : "管理费用 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalInvestmentToImproveTechnologyLevel"       : "技术水平投资 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalInvestmentToIncreaseProductionEfficiency" : "生产效率投资 (RMB 百万)",

            "ReportProfitabilityEvolutionGlobalProductionCapacityDisposalCost" : "产能处置成本 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalOvertimeShiftsCost"             : "加班成本 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalTotalGeneralExpenses"           : "一般性费用总额  (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalAmortisation"                   : "摊销费用 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalOperatingProfit"                : "运营利润 (RMB 百万)",

            "ReportProfitabilityEvolutionGlobalInterests"             : "利息 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalExceptionalCostProfit" : "额外开支/利润  (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalTaxes"                 : "税 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalNetProfit"             : "净利润 (RMB 百万)",

            "ReportProfitabilityEvolutionGlobalSurchargeForSupplementaryInvestmentBudget" : "追加投资预算产生的额外费用 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalNetResult"                                 : "净利额 (RMB 百万)",

            "ReportProfitabilityEvolutionGlobalGrossProfitMargin"                   : "毛利率 (%)",
            "ReportProfitabilityEvolutionGlobalTradeAndMarketingExpensesasaOfSales" : "通路和营销费用占销售额的百分比",
            "ReportProfitabilityEvolutionGlobalGeneralExpensesasaOfSales"           : "一般费用占销售额的百分比",
            "ReportProfitabilityEvolutionGlobalOperatingProfitMargin"               : "运营利润率 (%)",
            "ReportProfitabilityEvolutionGlobalNetProfitMargin"                     : "净利率 (%)",

            "ReportProfitabilityEvolutionGlobalReturnOnInvestment" : "投资回报率 (%)",

            "ReportProfitabilityEvolutionGlobalAverageNetMarketPrice"    : "平均净市场价 ($/包)",
            "ReportProfitabilityEvolutionGlobalAverageWholesalesPrice"   : "平均批发价 ($/包)",
            "ReportProfitabilityEvolutionGlobalAverageManufacturerPrice" : "平均出厂价 ($/包)",
            "ReportProfitabilityEvolutionGlobalAverageProductionCost"    : "平均生产成本 ($/包)",

            "ReportProfitabilityEvolutionGlobalMarketSalesValue"        : "市场销售额 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalConsumerPricePromotions" : "消费者价格促销 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalMarketNetSalesValue"     : "市场净销售额  (RMB 百万)",

            "ReportProfitabilityEvolutionGlobalProductionCost" : "生产成本 (RMB 百万)",
            "ReportProfitabilityEvolutionGlobalInventoryValue" : "库存价值 (RMB 百万)",

            "ReportProfitabilityEvolutionGlobalCapacityUtilisationRate"         : "产能利用率 (%)",
            "ReportProfitabilityEvolutionGlobalChangeInProductionCapacity"      : "产能变化 (百万标准包)",
            "ReportProfitabilityEvolutionGlobalNextPeriodAvailableProdCapacity" : "下一阶段产能 (百万标准包)",

            "ReportProfitabilityEvolutionGlobalAvailableTechnologyLevel"                             : "最高技术水平",
            "ReportProfitabilityEvolutionGlobalExtraBudgetRequiredToIncreaseTechnologyLevelBy1Step"  : "每提高一个级别的技术水平，预计所需的额外预算",
            "ReportProfitabilityEvolutionGlobalExtraBudgetRequiredToIncreaseTechnologyLevelBy2Steps" : "每提高两个级别的技术水平，预计所需的额外预算 ",

            "ReportProfitabilityEvolutionGlobalAcquiredProductionAndLogisticsEfficiency"         : "当前拥有的生产效率 (%)",
            "ReportProfitabilityEvolutionGlobalExtraBudgetRequiredToIncreaseEfficiencyBy2points" : "提高2%生产灵活性，预计所需的额外预算 ",
            "ReportProfitabilityEvolutionGlobalExtraBudgetRequiredToIncreaseEfficiencyBy5points" : "提高5%生产灵活性，预计所需的额外预算",

            "ReportProfitabilityEvolutionGlobalAcquiredProductionPlanningFlexibility"             : "当前拥有的生产灵活度 (%)",
            "ReportProfitabilityEvolutionGlobalExtraBudgetRequiredToIncreaseFlexibilityBy2points" : "提高2%生产灵活性，预计所需的额外预算",
            "ReportProfitabilityEvolutionGlobalExtraBudgetRequiredToIncreaseFlexibilityBy5points" : "提高5%生产灵活性，预计所需的额外预算",


            //Labels for Market Share
            "ReportMarketShareChartTitleMarketShareInValue"  : "市场份额 （按销售额计%)",
            "ReportMarketShareChartTitleMarketShareInVolume" : "市场份额 （按销量计%)",
            "ReportMarketShareChartTitleMindSpaceShare"      : "思维空间份额（%）",
            "ReportMarketShareChartTitleShelfSpaceShare"     : "货架空间份额（%）",

            //Labels for Competitor Intelligence
            "ReportCompetitorIntelligenceTableTitleTechnology"                               : "技术",
            "ReportCompetitorIntelligenceTechnologyAcquiredProductionAndLogisticsEfficiency" : "当前拥有的生产效率 (%)",
            "ReportCompetitorIntelligenceTechnologyAcquiredProductionPlanningFlexibility"    : "当前拥有的生产灵活度 (%)",
            "ReportCompetitorIntelligenceTechnologyAvailableTechnologyLevel"                 : "最高技术水平",

            "ReportCompetitorIntelligenceTableTitleMarketingSales"                : "市场营销和销售",
            "ReportCompetitorIntelligenceMarketingSalesAdditionalTradeMarginCost" : "额外零售终端返利 (RMB 百万)",
            "ReportCompetitorIntelligenceMarketingSalesAdvertising"               : "广告费用 (RMB 百万)",
            "ReportCompetitorIntelligenceMarketingSalesConsumerPromotionsCost"    : "促销成本 (RMB 百万)",
            "ReportCompetitorIntelligenceMarketingSalesRetailerPurchaseVolume"    : "零售商购买量 (百万标准包)",
            "ReportCompetitorIntelligenceMarketingSalesSalesForceCost"            : "销售团队成本 (RMB 百万)",
            "ReportCompetitorIntelligenceMarketingSalesShipmentToWholesalers"     : "经销商购买量 (百万标准包)",
            "ReportCompetitorIntelligenceMarketingSalesTradeInvestments"          : "零售终端费用 (RMB 百万)",
            "ReportCompetitorIntelligenceMarketingSalesVolumeDiscountCost"        : "经销商进货折扣成本 (RMB 百万)",

            "ReportCompetitorIntelligenceTableTitleOperations"                      : "运营",
            "ReportCompetitorIntelligenceOperationsCapacityUtilisationRate"         : "产能利用率 (%)",
            "ReportCompetitorIntelligenceOperationsInventoryVolumeAtManufacturer"   : "厂商持有的库存量 (百万标准包)",
            "ReportCompetitorIntelligenceOperationsInventoryVolumeAtRetailers"      : "零售商持有的库存量 (百万标准包)",
            "ReportCompetitorIntelligenceOperationsInventoryVolumeAtWholesalers"    : "经销商持有的库存量 (百万标准包)",
            "ReportCompetitorIntelligenceOperationsNextPeriodAvailableProdCapacity" : "下一阶段产能 (百万标准包)",
            "ReportCompetitorIntelligenceOperationsProductionVolume"                : "产量 (百万标准包)",

            "ReportCompetitorIntelligenceTableTitleInvestments"                               : "投资",
            "ReportCompetitorIntelligenceInvestmentsInvestmentToImproveTechnologyLevel"       : "技术水平投资 (RMB 百万)",
            "ReportCompetitorIntelligenceInvestmentsInvestmentToIncreaseProductionEfficiency" : "生产效率投资 (RMB 百万)",

            //Labels for Investments and Profits
            "ReportInvestmentsAndProfitsChartTitleTotalInvestment"        : "预计的当期投资总额 (RMB 百万)",
            "ReportInvestmentsAndProfitsChartTitleNetProfitByCompanies"   : "公司净利额  (RMB 百万)",
            "ReportInvestmentsAndProfitsChartTitleReturnOnInvestment"     : "投资回报率（%)",
            "ReportInvestmentsAndProfitsChartTitleInvestmentVersusBudget" : "投资占预算比例(%)",


            //Labels for Market Sales and Inventory
            "ReportMarketSalesAndInventoryChartTitleMarketSalesValue"        : "市场销售额 (RMB 百万)",
            "ReportMarketSalesAndInventoryChartTitleMarketSalesVolume"       : "市场销售量 (百万标准包)",
            "ReportMarketSalesAndInventoryChartTitleTotalInventoryAtFactory" : "工厂中的库存量 (百万标准包)",
            "ReportMarketSalesAndInventoryChartTitleTotalInventoryAtTrade"   : "渠道中的库存量 (百万标准包)",
            "ReportMarketSalesAndInventoryChartBottomTextPeriod"   : "阶段",

            //Labels for Segment Leader Top 5
            "ReportSegmentLeaderTop5ChartTitlePriceSensitive" : "1. 价格敏感型 (%)",
            "ReportSegmentLeaderTop5ChartTitlePretenders"     : "2. 虚荣型 (%)",
            "ReportSegmentLeaderTop5ChartTitleModerate"       : "3. 适中型 (%)",
            "ReportSegmentLeaderTop5ChartTitleGoodLife"       : "4. 享受生活型 (%)",
            "ReportSegmentLeaderTop5ChartTitleUltimate"       : "5. 追求极致型 (%)",
            "ReportSegmentLeaderTop5ChartTitlePragmatic"      : "6. 实用型 (%)",

            //Labels for Perception Map
            "ReportPerceptionMapAxisLabelSegment"         : "消费者细分",
            "ReportPerceptionMapAxisTitleValuePerception" : "价值感知",
            "ReportPerceptionMapAxisTitleImagePerception" : "形象感知",
            "ReportPerceptionMapHoverTooltipMarketShareValue"        : "市场份额 (销售额 %)",
            "ReportPerceptionMapHoverTooltipAverageDisplayPrice"     : "平均陈列价格 ($/标准包)",
            "ReportPerceptionMapHoverTooltipAppliedTechnologyIndex"  : "应用的技术指数",
            "ReportPerceptionMapHoverTooltipIngredientsQualityIndex" : "成分质量指数",
            "ReportPerceptionMapHoverTooltipAwareness"               : "知名度 (%)",
            "ReportPerceptionMapHoverTooltipShelfSpace"              : "货架空间 (%)",
            "ReportPerceptionMapHoverTooltipValuePerceptionChange"   : "价值感知浮动",
            "ReportPerceptionMapHoverTooltipImagePerceptionChange"   : "形象感知浮动",

            //Labels for Segment Distributions
            "ReportSegmentDistributionsTableTitleMarketShareValue"      : "市场份额 (销售额 %)",
            "ReportSegmentDistributionsTableTitleMarketShareVolume"     : "市场份额 (销量 %)",
            "ReportSegmentDistributionsTableTitleMarketSalesValue"      : "市场销售额 (RMB 百万)",
            "ReportSegmentDistributionsTableTitleMarketSalesVolume"     : "市场销售量 (百万标准包)",
            "ReportSegmentDistributionsTableTitleAverageNetMarketPrice" : "平均净市场价 ($/标准包)",
            "ReportSegmentDistributionsTableTitleValuePerception"       : "价值感知",
            "ReportSegmentDistributionsTableTitleImagePerception"       : "形象感知",

            //Labels for Market Evolution
            "ReportMarketEvolutionChartTitleGrowthRateInVolume"             : "基于销量的增长率 (阶段-3 = 100)",
            "ReportMarketEvolutionChartTitleGrowthRateInValue"              : "基于销售额的增长率 (阶段-3 = 100)",
            "ReportMarketEvolutionChartTitleNetMarketPrice"                 : "净市场价 (阶段-3 = 100)",
            "ReportMarketEvolutionChartTitleSegmentValueShareInTotalMarket" : "细分市场占总市场的销售份额（%）",

            //Labels for Market Trends - SKU Level
            "ReportMarketTrendsSKUTableTitleMarketFigures"            : "市场数据",	//Market Figures
            "ReportMarketTrendsSKUMarketFiguresAverageDisplayPrice"   : "平均陈列价格 ($/标准包)",
            "ReportMarketTrendsSKUMarketFiguresAverageNetMarketPrice" : "平均净市场价 ($/标准包)",
            "ReportMarketTrendsSKUMarketFiguresBrandAwareness"        : "品牌知名度 (%)",
            "ReportMarketTrendsSKUMarketFiguresImagePerception"       : "形象感知",
            "ReportMarketTrendsSKUMarketFiguresMarketNetSalesValue"   : "市场净销售额  (RMB 百万)",
            "ReportMarketTrendsSKUMarketFiguresMarketNetSalesVolume"  : "市场销量  (百万标准包)",
            "ReportMarketTrendsSKUMarketFiguresMarketShareValue"      : "市场份额 (销售额 %)",
            "ReportMarketTrendsSKUMarketFiguresMarketShareVolume"     : "市场份额 (销量 %)",

            "ReportMarketTrendsSKUTableTitleMiscellaneous"              : "其他",	//Miscellaneous
            "ReportMarketTrendsSKUMiscellaneousLostSalesVolumeduetoOOS" : "因缺货损失的销售量 (百万标准包)",
            "ReportMarketTrendsSKUMiscellaneousNumericalDistribution"   : "数值分销率 (%)",
            "ReportMarketTrendsSKUMiscellaneousTotalInventoryAtTrade"   : "渠道中的库存量 (百万标准包)",
            "ReportMarketTrendsSKUMiscellaneousPriceRankingIndex"       : "价格排序指数",
            "ReportMarketTrendsSKUMiscellaneousShelfSpace"              : "货架空间 (%)",

            "ReportMarketTrendsSKUTableTitleSegmentWiseValueShare"                      : "占细分市场销售额的 (%)",	//Value Share by Segment
            "ReportMarketTrendsSKUSegmentWiseValueShareValueSharePriceSensitiveSegment" : "占细分市场销售额的 (%) 1. 价格敏感型 市场",
            "ReportMarketTrendsSKUSegmentWiseValueShareValueSharePretendersSegment"     : "占细分市场销售额的 (%) 2. 虚荣型 市场",
            "ReportMarketTrendsSKUSegmentWiseValueShareValueShareModerateSegment"       : "占细分市场销售额的 (%) 3. 适中型 市场",
            "ReportMarketTrendsSKUSegmentWiseValueShareValueShareGoodLifeSegment"       : "占细分市场销售额的 (%) 4. 享受生活型 市场",
            "ReportMarketTrendsSKUSegmentWiseValueShareValueShareUltimateSegment"       : "占细分市场销售额的 (%) 5. 追求极致型 市场",
            "ReportMarketTrendsSKUSegmentWiseValueShareValueSharePragmaticSegment"      : "占细分市场销售额的 (%) 6. 实用型 市场",

            "ReportMarketTrendsSKUTableTitleSegmentWiseVolumeShare"                       : "占细分市场销量的(%)",	//Segment-wise Volume Share
            "ReportMarketTrendsSKUSegmentWiseVolumeShareVolumeSharePriceSensitiveSegment" : "占细分市场销量的 (%) 1. 价格敏感型 市场",
            "ReportMarketTrendsSKUSegmentWiseVolumeShareVolumeSharePretendersSegment"     : "占细分市场销量的 (%) 2. 虚荣型 市场",
            "ReportMarketTrendsSKUSegmentWiseVolumeShareVolumeShareModerateSegment"       : "占细分市场销量的 (%) 3. 适中型 市场",
            "ReportMarketTrendsSKUSegmentWiseVolumeShareVolumeShareGoodLifeSegment"       : "占细分市场销量的 (%) 4. 享受生活型 市场",
            "ReportMarketTrendsSKUSegmentWiseVolumeShareVolumeShareUltimateSegment"       : "占细分市场销量的 (%) 5. 追求极致型 市场",
            "ReportMarketTrendsSKUSegmentWiseVolumeShareVolumeSharePragmaticSegment"      : "占细分市场销量的 (%) 6. 实用型 市场",
            "ReportMarketTrendsSKUSegmentWiseVolumeShareVolumeWeightedDistribution"       : "加权分销率 (%)",


            //Labels for Market Trends - Brand Level
            "ReportMarketTrendsBrandMarketFiguresAverageDisplayPrice"   : "平均陈列价格 ($/标准包)",
            "ReportMarketTrendsBrandMarketFiguresAverageNetMarketPrice" : "平均净市场价 ($/标准包)",
            "ReportMarketTrendsBrandMarketFiguresBrandAwareness"        : "品牌知名度 (%)",
            "ReportMarketTrendsBrandMarketFiguresImagePerception"       : "形象感知",
            "ReportMarketTrendsBrandMarketFiguresMarketNetSalesValue"   : "市场净销售额  (RMB 百万)",
            "ReportMarketTrendsBrandMarketFiguresMarketNetSalesVolume"  : "市场销量  (百万标准包)",
            "ReportMarketTrendsBrandMarketFiguresMarketShareValue"      : "市场份额 (销售额 %)",
            "ReportMarketTrendsBrandMarketFiguresMarketShareVolume"     : "市场份额 (销量 %)",

            "ReportMarketTrendsBrandMiscellaneousLostSalesVolumeduetoOOS" : "因缺货损失的销售量 (百万标准包)",
            "ReportMarketTrendsBrandMiscellaneousNumericalDistribution"   : "数值分销率 (%)",
            "ReportMarketTrendsBrandMiscellaneousTotalInventoryAtTrade"   : "渠道中的库存量 (百万标准包)",
            "ReportMarketTrendsBrandMiscellaneousPriceRankingIndex"       : "价格排序指数",
            "ReportMarketTrendsBrandMiscellaneousShelfSpace"              : "货架空间 (%)",

            "ReportMarketTrendsBrandSegmentWiseValueShareValueSharePriceSensitiveSegment" : "占细分市场销售额的 (%) 1. 价格敏感型 市场",
            "ReportMarketTrendsBrandSegmentWiseValueShareValueSharePretendersSegment"     : "占细分市场销售额的 (%) 2. 虚荣型 市场",
            "ReportMarketTrendsBrandSegmentWiseValueShareValueShareModerateSegment"       : "占细分市场销售额的 (%) 3. 适中型 市场",
            "ReportMarketTrendsBrandSegmentWiseValueShareValueShareGoodLifeSegment"       : "占细分市场销售额的 (%) 4. 享受生活型 市场",
            "ReportMarketTrendsBrandSegmentWiseValueShareValueShareUltimateSegment"       : "占细分市场销售额的 (%) 5. 追求极致型 市场",
            "ReportMarketTrendsBrandSegmentWiseValueShareValueSharePragmaticSegment"      : "占细分市场销售额的 (%) 6. 实用型 市场",

            "ReportMarketTrendsBrandSegmentWiseVolumeShareVolumeSharePriceSensitiveSegment" : "占细分市场销量的 (%) 1. 价格敏感型 市场",
            "ReportMarketTrendsBrandSegmentWiseVolumeShareVolumeSharePretendersSegment"     : "占细分市场销量的 (%) 2. 虚荣型 市场",
            "ReportMarketTrendsBrandSegmentWiseVolumeShareVolumeShareModerateSegment"       : "占细分市场销量的 (%) 3. 适中型 市场",
            "ReportMarketTrendsBrandSegmentWiseVolumeShareVolumeShareGoodLifeSegment"       : "占细分市场销量的 (%) 4. 享受生活型 市场",
            "ReportMarketTrendsBrandSegmentWiseVolumeShareVolumeShareUltimateSegment"       : "占细分市场销量的 (%) 5. 追求极致型 市场",
            "ReportMarketTrendsBrandSegmentWiseVolumeShareVolumeSharePragmaticSegment"      : "占细分市场销量的 (%) 6. 实用型 市场",
            "ReportMarketTrendsBrandSegmentWiseVolumeShareVolumeWeightedDistribution"       : "加权分销率 (%)",

            //Labels for Market Trends - Global Level
            "ReportMarketTrendsGlobalMarketFiguresAverageNetMarketPrice" : "平均净市场价 ($/标准包)",
            "ReportMarketTrendsGlobalMarketFiguresMarketNetSalesValue"   : "市场净销售额 (RMB 百万)",
            "ReportMarketTrendsGlobalMarketFiguresMarketNetSalesVolume"  : "市场销量  (百万标准包)",
            "ReportMarketTrendsGlobalMarketFiguresMarketShareValue"      : "市场份额 (销售额 %)",
            "ReportMarketTrendsGlobalMarketFiguresMarketShareVolume"     : "市场份额 (销量 %)",

            "ReportMarketTrendsGlobalMiscellaneousLostSalesVolumeduetoOOS" : "因缺货损失的销售量 (百万标准包)",
            "ReportMarketTrendsGlobalMiscellaneousNumericalDistribution"   : "数值分销率 (%)",
            "ReportMarketTrendsGlobalMiscellaneousTotalInventoryAtTrade"   : "渠道中的库存量 (百万标准包)",
            "ReportMarketTrendsGlobalMiscellaneousPriceRankingIndex"       : "价格排序指数",
            "ReportMarketTrendsGlobalMiscellaneousShelfSpace"              : "货架空间 (%)",

            "ReportMarketTrendsGlobalSegmentWiseValueShareValueSharePriceSensitiveSegment" : "占细分市场销售额的 (%) 1. 价格敏感型 市场",
            "ReportMarketTrendsGlobalSegmentWiseValueShareValueSharePretendersSegment"     : "占细分市场销售额的 (%) 2. 虚荣型 市场",
            "ReportMarketTrendsGlobalSegmentWiseValueShareValueShareModerateSegment"       : "占细分市场销售额的 (%) 3. 适中型 市场",
            "ReportMarketTrendsGlobalSegmentWiseValueShareValueShareGoodLifeSegment"       : "占细分市场销售额的 (%) 4. 享受生活型 市场",
            "ReportMarketTrendsGlobalSegmentWiseValueShareValueShareUltimateSegment"       : "占细分市场销售额的 (%) 5. 追求极致型 市场",
            "ReportMarketTrendsGlobalSegmentWiseValueShareValueSharePragmaticSegment"      : "占细分市场销售额的 (%) 6. 实用型 市场",

            "ReportMarketTrendsGlobalSegmentWiseVolumeShareVolumeSharePriceSensitiveSegment" : "占细分市场销量的 (%) 1. 价格敏感型 市场",
            "ReportMarketTrendsGlobalSegmentWiseVolumeShareVolumeSharePretendersSegment"     : "占细分市场销量的 (%) 2. 虚荣型 市场",
            "ReportMarketTrendsGlobalSegmentWiseVolumeShareVolumeShareModerateSegment"       : "占细分市场销量的 (%) 3. 适中型 市场",
            "ReportMarketTrendsGlobalSegmentWiseVolumeShareVolumeShareGoodLifeSegment"       : "占细分市场销量的 (%) 4. 享受生活型 市场",
            "ReportMarketTrendsGlobalSegmentWiseVolumeShareVolumeShareUltimateSegment"       : "占细分市场销量的 (%) 5. 追求极致型 市场",
            "ReportMarketTrendsGlobalSegmentWiseVolumeShareVolumeSharePragmaticSegment"      : "占细分市场销量的 (%) 6. 实用型 市场",
            "ReportMarketTrendsGlobalSegmentWiseVolumeShareVolumeWeightedDistribution"       : "加权分销率 (%)",

            //Labels for Market Indicators
            "ReportMarketIndicatorCorporateTaxRate"	:	"公司税率",
            "ReportMarketIndicatorInflationRate"	:	"通货膨胀率",
            "ReportMarketIndicatorDepositRate"	:	"存款利率",
            "ReportMarketIndicatorBorrowingRate"	:	"借贷利率",
            "ReportMarketIndicatorAdditionalInvestmentBudgetSurchargeRate"	:	"其他投资预算附加费率",
            "ReportMarketIndicatorInventoryHoldingCost"	:	"库存持有成本（%库存量）",
            "ReportMarketIndicatorObsoleteGoodsCost"	:	"过期商品成本（%采购成本）",
            "ReportMarketIndicatorDiscontinuedGoodsCost"	:	"停产商品成本（%采购成本）",




            //Labels for Items on Decision Page - Second Menu Bar
            "DecisionPageSecondMenuBarLabelsTotalAvailableBudget" : "全部可用预算金额",
            "DecisionPageSecondMenuBarLabelsNormalCapacity"       : "剩余正常产能",
            "DecisionPageSecondMenuBarLabelsOvertimeCapacity"     : "剩余额外加班产能",
            "DecisionPageSecondMenuBarLabelsAdditionalBudget"     : "申请额外预算",


            //Labels for Items on Decision Page - DecisionTab
            "DecisionPageDecisionTabMAKEDECISIONS" : "制定决策",
            "DecisionPageDecisionTabMission"       : "目标: 市场份额+利润",
            "DecisionPageDecisionTabAddNewBrand"   : "添加新品牌",
            "DecisionPageDecisionTabSalesForce"    : "销售团队 (RMB 百万)",
            "DecisionPageDecisionTabAddNewSKU"     : "添加新产品",
            "DecisionPageDecisionTabName"          : "产品名称",
            "DecisionPageDecisionTabLabelBrandName"    : "新品牌名称 :",
            "DecisionPageDecisionTabLabelFirstSKUName" : "首个新产品名称 :",
            "DecisionPageDecisionTabLabelSKUName"      : "新产品名称 :",

            "DecisionPageDecisionTabDiscontinue"           : "是否停止运营?",
            "DecisionPageDecisionTabProcessingTechnology"  : "生产技术",
            "DecisionPageDecisionTabIngredientsQuality"    : "原料质量",
            "DecisionPageDecisionTabPackagingSize"         : "包装规格",
            "DecisionPageDecisionTabPackagingSizeSmall"    : "小包装",
            "DecisionPageDecisionTabPackagingSizeStandard" : "标准包装",
            "DecisionPageDecisionTabPackagingSizeLarge"    : "大包装",

            "DecisionPageDecisionTabProductionVolume"               : "产量(百万件)",
            "DecisionPageDecisionTabManufacturerPrice"              : "出厂价($)",
            "DecisionPageDecisionTabRepriceFactoryStock"            : "重新定价工厂库存?",
            "DecisionPageDecisionTabConsumerCommunication"          : "广告投入 (RMB 百万)",
            "DecisionPageDecisionTabTargetConsumerSegment"          : "目标细分市场",
            "DecisionPageDecisionTabConsumerPromotions"             : "促销 (RMB 百万)",
            "DecisionPageDecisionTabConsumerPromotionsSchedule"     : "促销日程",
            "DecisionPageDecisionTabConsumerPromotionsScheduleWeek" : "周",
            "DecisionPageDecisionTabTradeExpenses"                  : "零售终端费用 (RMB 百万)",
            "DecisionPageDecisionTabAdditionalTradeMargin"          : "额外零售终端返利 (%)",
            "DecisionPageDecisionTabWholesaleMinimumVolume"         : "经销商最低订货量 (百万件)",
            "DecisionPageDecisionTabWholesaleBonusRate"             : "经销商进货折扣率 (%)",

            "DecisionPageDecisionNewProductDevelopmentInvestment"                                 : "生产技术以及生产效率研发投入",
            "DecisionPageDecisionNewProductDevelopmentInvestmentInvestmentInProductionEfficiency" : "生产效率的投资 (RMB 百万)",
            "DecisionPageDecisionNewProductDevelopmentInvestmentInvestmentInProcessingTechnology" : "生产技术的投资 (RMB 百万)",

            "DecisionPageDecisionNewProductDevelopmentInvestmentName"                                                   : "名称",
            "DecisionPageDecisionNewProductDevelopmentInvestmentRequiredAmount"                                         : "所需投资金额 (RMB 百万)",
            "DecisionPageDecisionNewProductDevelopmentInvestmentExtraBudgetRequiredToIncreaseEfficiencyBy25points"      : "提高2%/5%生产效率，预计所需的额外预算",
            "DecisionPageDecisionNewProductDevelopmentInvestmentExtraBudgetRequiredToIncreaseFlexibilityBy25points"     : "提高2%/5%生产效率，预计所需的额外预算",
            "DecisionPageDecisionNewProductDevelopmentInvestmentExtraBudgetRequiredToIncreaseTechnologyLevelBy12points" : "每提高一个/两个级别的技术水平，预计所需的额外预算",
            "DecisionPageDecisionNewProductDevelopmentInvestmentNote"                                                   : "注意: 在提高生产效率中的预算投入将等量影响生产灵活性 ",


            //Labels for Items on Decision Page - Future Projections Calculator
            "DecisionPageFutureProjectionsTableTitleDATAREFERENCE"		:	"数据参考",

            "DecisionPageFutureProjectionsCalculatorLabel"       : "预期数据计算器",
            "DecisionPageFutureProjectionsCalculatorTablePeriod" : "阶段",

            "DecisionPageFutureProjectionsCalculatorTable1InPackUnits"          : "按实际包装单位",
            "DecisionPageFutureProjectionsCalculatorTable1InStandardUnits"      : "按标准包装单位",

            "DecisionPageFutureProjectionsCalculatorTable1StocksAtFactory"      : "工厂库存 (mln)",
            "DecisionPageFutureProjectionsCalculatorTable1StocksAtWholesales"   : "经销商库存 (mln)",
            "DecisionPageFutureProjectionsCalculatorTable1StocksAtRetailers"   : "零售商库存 (mln)",
            "DecisionPageFutureProjectionsCalculatorTable1UnitProductionCost"   : "单位生产成本 ($)",
            "DecisionPageFutureProjectionsCalculatorTable1WholesalePrice"      : "经销商供货价 ($)",
            "DecisionPageFutureProjectionsCalculatorTable1RecommendedConsumer" : "建议零售价 ($)",

            "DecisionPageFutureProjectionsCalculatorTable2MarketSales"           : "市场销量 （百万件）",
            "DecisionPageFutureProjectionsCalculatorTable2ShipmentsToRetailers"  : "零售商到货量 （百万件）",
            "DecisionPageFutureProjectionsCalculatorTable2UnitProductionCost"    : "单位生产成本 ($)",
            "DecisionPageFutureProjectionsCalculatorTable2AverageConsumerPrice"  : "平均零售终端价格",
            "DecisionPageFutureProjectionsCalculatorTable2ConsumerCommunication" : "广告投入 (RMB 百万)",
            "DecisionPageFutureProjectionsCalculatorTable2ConsumerPromotions"    : "促销 (RMB 百万)",

            "DecisionPageFutureProjectionsCalculatorTable3SKUExpectedSales"		:	"预计销售状况",
            "DecisionPageFutureProjectionsCalculatorTable3AdditionalInformation"		:	"额外信息 (SKU)",
            "DecisionPageFutureProjectionsCalculatorTable3ExpectedMaximalSales"		:	"预期最大销售额 (RMB 百万)",
            "DecisionPageFutureProjectionsCalculatorTable3ExpectedGrossMargin"		:	"预期毛利率 (%)",
            "DecisionPageFutureProjectionsCalculatorTable3ExpectedOperatingMargin"		:	"预期营运利润率 (%)",


            //Labels for Items on Decision Page - Product Portfolio
            "DecisionPageProductPortfolioLabel" : "产品组合",

            "DecisionPageProductPortfolioTable1CurrentProduction"  : "当前产品",
            "DecisionPageProductPortfolioTable1SKUName"            : "单品名称",
            "DecisionPageProductPortfolioTable1TargetSegment"      : "目标细分市场",
            "DecisionPageProductPortfolioTable1FactoryPrice"       : "出厂价(实际包装/标准包装)",
            "DecisionPageProductPortfolioTable1IngredientsQuality" : "原料质量",
            "DecisionPageProductPortfolioTable1TechnologyLevel"    : "技术水平",
            "DecisionPageProductPortfolioTable1ProductionVolume"   : "产品数量",

            "DecisionPageProductPortfolioTable2PreviousInventory"             : "工厂以往库存",
            "DecisionPageProductPortfolioTable2SKUName"                       : "单品名称",
            "DecisionPageProductPortfolioTable2AverageFactoryPrice"           : "平均出厂价(实际包装/标准包装)",
            "DecisionPageProductPortfolioTable2AverageIngredientQuality"      : "平均原料质量",
            "DecisionPageProductPortfolioTable2AverageTechnologyLevel"        : "平均技术水平",
            "DecisionPageProductPortfolioTable2TotalInventoryVolumeAtFactory" : "工厂总库存量",


            //Labels for Items on Decision Page - Spending Details
            "DecisionPageSpendingDetailsLabel" : "当前预算使用状况",

            "DecisionPageSpendingDetailsTable1BrandName" : "品牌名称",
            "DecisionPageSpendingDetailsTable1Total"     : "总额",

            "DecisionPageSpendingDetailsTable1SalesForce"                         : "销售团队 (RMB 百万)",
            "DecisionPageSpendingDetailsTable1ConsumerCommunication"              : "广告投入 (RMB 百万)",
            "DecisionPageSpendingDetailsTable1ConsumerPromotions"                 : "促销 (RMB 百万)",
            "DecisionPageSpendingDetailsTable1TradeExpenses"                      : "零售终端费用 (RMB 百万)",
            "DecisionPageSpendingDetailsTable1EstimatedAdditionalTradeMarginCost" : "预计的额外零售终端返利成本 (RMB 百万)",
            "DecisionPageSpendingDetailsTable1EstimatedWholesaleBonusCost"        : "预计的经销商进货让利成本 (RMB 百万)",

            "DecisionPageSpendingDetailsTable2Company"                             : "公司",
            "DecisionPageSpendingDetailsTable2Total"                               : "总额",
            "DecisionPageSpendingDetailsTable2InvestmentInProductionEfficiency"    : "生产效率的投资 (RMB 百万)",
            "DecisionPageSpendingDetailsTable2InvestmentInProcessingTechnology"    : "生产技术的投资 (RMB 百万)",
            "DecisionPageSpendingDetailsTable2TotalInvestment"                     : "(-) 预计的当期投资总额 (RMB 百万)",
            "DecisionPageSpendingDetailsTable2AverageBudgetPerPeriod"              : "每阶段平均预算 (RMB 百万)",
            "DecisionPageSpendingDetailsTable2TotalInvestmentBudget"               : "总预算 (RMB 百万)",
            "DecisionPageSpendingDetailsTable2CumulatedPreviousInvestments"        : "(-) 累计前期投资 (RMB 百万)",
            "DecisionPageSpendingDetailsTable2AvailableBudget"                     : "(=) 预计的剩余预算 (RMB 百万)",
            "DecisionPageSpendingDetailsTable2NormalCapacity"                      : "剩余正常产能 (mln Packs)",
            "DecisionPageSpendingDetailsTable2AvailableOvertimeCapacityExtension"  : "剩余额外加班产能 (mln Packs)",
            "DecisionPageSpendingDetailsTable2AcquiredEfficiency"                 : "当前拥有的生产效率 (%)",
            "DecisionPageSpendingDetailsTable2AcquiredProductionVolumeFlexibility" : "当前拥有的生产灵活度 (%)",
            "DecisionPageSpendingDetailsTable2AcquiredTechnologyLevel"             : "最高技术水平",

            //Labels for Final Score page
            "FinalScorePageScore"          : "最终得分",
            "FinalScorePageButtonOriginal" : "原始",
            "FinalScorePageButtonRescaled" : "调整",
            "FinalScorePageWeightFactor"   : "权重 / 因素",

            "FinalScorePageIncrementalMarketShare" : "相对增长的市场份额 (按零售销售额计)",
            "FinalScorePageCumulatedNetProfit"     : "累计净利润",
            "FinalScorePageSpendingVersusBudgets"  : "支出相对于预算",

            "FinalScorePageShareInBrandTotalSalesValue"    : "Share in Brand Total Sales Value",
            "FinalScorePageAchievementOfInitialObjectives" : "Achievement of initial objectives",
            "FinalScorePageFinalScore"                     : "最终得分",

            "FinalScorePageCompany"                        : "公司",
            "FinalScorePagePeriod"                         : "阶段",
            "FinalScorePageCongratulations"                : "祝贺 ! 你已完成游戏",
            "FinalScorePageCongratulationsInfo"            : "麻烦您花一些时间填写反馈. 您的反馈将更好的改进我们的产品",
            "FinalScorePageProvideFeedback"                : "Provide Feedback",


            //Labels for Questionnaire Page
            "QuestionnairePageQuestionnaire"                             : "问卷调查",
            "QuestionnairePageVeryPoor"                                  : "Very poor",
            "QuestionnairePageAverage"                                   : "Average",
            "QuestionnairePageExcellent"                                 : "Excellent",
            "QuestionnairePageOverallSatisfactionWiththeProgram"         : "Overall Satisfaction With the Program",
            "QuestionnairePageChallengeStrategicThinkingAbility"         : "Challenge strategic thinking ability",
            "QuestionnairePageDevelopAnIntegratedPerspective"            : "Develop an integrated perspective",
            "QuestionnairePageTestPersonalAbilityOfBalancingRisks"       : "Test personal ability of balancing risks",
            "QuestionnairePageChallengeLeadershipAndTeamworkAbility"     : "Challenge leadership and teamwork ability",
            "QuestionnairePageChallengeAnalysisAndDecisionMakingAbility" : "Challenge analysis and decision-making ability",
            "QuestionnairePageSimulationInteresting"                     : "Simulation interesting",
            "QuestionnairePageTeachingTeam"                              : "Teaching Team",
            "QuestionnairePageFacilitator"                               : "Facilitator",
            "QuestionnairePageNormanYen"                                 : "Norman Yen",
            "QuestionnairePageFeedbackOnSimulationDecisions"             : "Feedback on simulation decisions",
            "QuestionnairePageExpandingViewAndInspireThinking"           : "Expanding view and inspire thinking",
            "QuestionnairePageLectures"                                  : "Lectures",
            "QuestionnairePageProduct"                                   : "Product",
            "QuestionnairePageOverallProductUsageExperience"             : "Overall Product Usage Experience",
            "QuestionnairePageUserInterfaceExperience"                   : "User Interface Experience",
            "QuestionnairePageEaseOfNavigation"                          : "Ease of Navigation",
            "QuestionnairePageClarityOfWordsUsed"                        : "Clarity of words used",
            "QuestionnairePageInterpreter"                               : "Interpreter",
            "QuestionnairePageOlive"                                     : "Olive",
            "QuestionnairePageAccuracyANDPresentation"                   : "Accuracy & Presentation",
            "QuestionnairePageTeachingSupport"                           : "Teaching Support",
            "QuestionnairePageMayYu"                                     : "May Yu",
            "QuestionnairePageHelpfulness"                               : "Helpfulness",
            "QuestionnairePageQualityOfTechnicalSupport"                 : "Quality of Technical Support",

            "QuestionnairePageOthers"             : "Others",
            "QuestionnairePageMostBenefit"        : "Which format of the program would benefit you the most",
            "QuestionnairePageJoinProgram"        : "Join Program with other companies",
            "QuestionnairePageCompanyInHouse"     : "Company In-House Program with other functions",
            "QuestionnairePageOpenClass"          : "Open class",
            "QuestionnairePageRecommendMarkSimos" : "Would you like to recommend MarkSimos to other companies or business school",
            "QuestionnairePageYes"                : "Yes",
            "QuestionnairePageNo"                 : "No",
            "QuestionnairePageBringYou"           : "What is the best benefit or experience MarkSimos bring to you ? Is there something special you learned that you like was unique / different compared to what you learned before",

            //Labels for help page
            "HelpPageMenuFAQ"                     : "常见问题",
            "HelpPageMenuVideo"                   : "视频介绍",
            "HelpPageMenuManual"                  : "使用手册",

            //Labels for FAQ Page
            "FAQPageTitle"                        : "常见问题",
            "FAQPageSubTitle"                     : '"常见问题"将包含在MarkSimos项目实施中学员问得最多的问题.',

            "ManualPageTitle"    : "使用手册",
            "ManualPageDownload" : "下载"




        });

        // Tell the module what language to use by default
        $translateProvider.preferredLanguage('en_US');
    //    $translateProvider.preferredLanguage('zh_CN');

        $translateProvider.useStorage('Language');
    }]);


})();
/**
 * Created by jinwyp on 5/20/14.
 */


/**
 * recommended
 *
 * no globals are left behind
 */



(function () {
    'use strict';

    angular.module('marksimos.websitecomponent', ['marksimos.templates', 'marksimos.model', 'pascalprecht.translate', 'marksimos.translation' ]);


    angular.module('marksimos.websitecomponent').directive('userHeader', ['$window', '$translate', 'Student', userHeaderComponent ]);
    angular.module('marksimos.websitecomponent').directive('headerAdmin', ['$window', 'Student', adminHeaderComponent]);
    angular.module('marksimos.websitecomponent').directive('menuAdmin', [adminMenuComponent]);





    function userHeaderComponent($window, $translate, Student){
        return {
            scope: {
                showmenu     : '=',
                showlogout   : '=',
                menuhome     : '&clickHome',
                menureport   : '&clickReport',
                menuscore    : '&clickScore',
                menudecision : '&clickDecision',
                currentMenu : '=',
                isFeedbackShown : '=',
                currentRound : '='
            },
            restrict: 'AE',
            templateUrl: 'userheader.html',
            link: function (scope, element, attrs) {


                scope.clickMenu = function(currentmenu){
                    scope.currentMenu = currentmenu;
                    scope.isFeedbackShown = false;
                };

                scope.clickHelpMenu = function(){
                    if($window.location.href.indexOf('/marksimos/help')==-1)
                        $window.location.href='/marksimos/help';
                };

                scope.changeLanguage = function (langKey) {
                    $translate.use(langKey);
                };

                scope.clickLogout = function () {
                    Student.logOut().success(function(data, status, headers, config){

                        $window.location.href = "/marksimos/login" ;

                    }).error(function(data, status, headers, config){
                        console.log(data);
                    });
                };

            }
        };
    }


    function adminHeaderComponent($window, Student){
        return {
            scope: {
                currentuser : '='
            },
            restrict: 'AE',
            templateUrl: 'adminheader.html',
            link: function (scope, element, attrs) {

                scope.clickLogout = function () {
                    Student.logOut().success(function(data, status, headers, config){

                        $window.location.href = "/marksimos/admin/" ;

                    }).error(function(data, status, headers, config){
                        console.log(data);
                    });
                };

            }
        };
    }


    function adminMenuComponent(){
        return {
            scope: {
                currentMenu : '=',
                showtab : '=',
                currentuser : '='
            },
            restrict: 'AE',
            templateUrl: 'adminmenu.html',
            link : function(scope, element){

                scope.css = {
                    currentTab : 2,
//                currentMenu : 'DistributorList',
                    menuexpand : [false, false, true, true, true, true, true, true] // menus control expand
                };


                scope.clickTab = function(tab){

                    scope.css.menuexpand[tab] = !scope.css.menuexpand[tab];
                    scope.css.currentTab = tab;

                };

                scope.clickMenu = function(currentmenu){
                    scope.currentMenu = currentmenu;

                    if(currentmenu === 1){
                        scope.clickTab(1);
                    }
                };

            }
        };
    }


    angular.module('marksimos.websitecomponent').directive('tableReportCompanyStatusSku', function() {
        return {
            scope: {
                data : '='
            },
            restrict: 'AE',
            templateUrl: 'tablereportcompanystatussku.html'
        };
    });


    angular.module('marksimos.websitecomponent').directive('tableReportCompanyStatusBrand', function() {
        return {
            scope: {
                data : '='
            },
            restrict: 'AE',
            templateUrl: 'tablereportcompanystatusbrand.html'
        };
    });


    angular.module('marksimos.websitecomponent').directive('tableReportCompanyStatusGlobal', function() {
        return {
            scope: {
                data : '='
            },
            restrict: 'AE',
            templateUrl: 'tablereportcompanystatusglobal.html'
        };
    });


    angular.module('marksimos.websitecomponent').directive('tableReportFinancialReportBrand', function() {
        return {
            scope: {
                data : '='
            },
            restrict: 'AE',
            templateUrl: 'tablereportfinancialreportbrand.html'
        };
    });


    angular.module('marksimos.websitecomponent').directive('tableReportFinancialReportAllBrand', function() {
        return {
            scope: {
                data : '='
            },
            restrict: 'AE',
            templateUrl: 'tablereportfinancialreportallbrand.html'
        };
    });


    angular.module('marksimos.websitecomponent').directive('tableReportProfitabilityEvolutionSku', function() {
        return {
            scope: {
                data : '='
            },
            restrict: 'AE',
            templateUrl: 'tablereportprofitabilityevolutionsku.html'
        };
    });


    angular.module('marksimos.websitecomponent').directive('tableReportProfitabilityEvolutionBrand', function() {
        return {
            scope: {
                data : '='
            },
            restrict: 'AE',
            templateUrl: 'tablereportprofitabilityevolutionbrand.html'
        };
    });


    angular.module('marksimos.websitecomponent').directive('tableReportProfitabilityEvolutionGlobal', function() {
        return {
            scope: {
                data : '='
            },
            restrict: 'AE',
            templateUrl: 'tablereportprofitabilityevolutionglobal.html'
        };
    });


    angular.module('marksimos.websitecomponent').directive('tableReportCompetitorIntelligence', function() {
        return {
            scope: {
                data : '=',
                unit : '=',
                chartdata : '=',
                chartconfig : '='
            },
            restrict: 'AE',
            templateUrl: 'tablereportcompetitorintelligence.html',
            link: function (scope, element, attrs) {

                scope.plus = 1;
                scope.display = 'line';

                if(angular.isUndefined(scope.unit)) {
                    scope.unit = '';
                }else if (scope.unit === "%"){
                    scope.plus = 1;
                }

                scope.display = 'line';

            }
        };
    });


    angular.module('marksimos.websitecomponent').directive('tableReportSegmentDistribution', function() {
        return {
            scope: {
                data : '=',
                unit : '=',
                chartdata : '=',
                chartconfig : '='
            },
            restrict: 'AE',
            templateUrl: 'tablereportsegmentdistribution.html',
            link: function (scope, element, attrs) {

                scope.plus = 1;
                scope.display = 'line';

                if(angular.isUndefined(scope.unit)) {
                    scope.unit = '';
                }else if (scope.unit === "%"){
                    scope.plus = 1;
                }

            }
        };
    });


    angular.module('marksimos.websitecomponent').directive('tableReportMarketTrendsSku', function() {
        return {
            scope: {
                data : '=',
                unit : '=',
                chartdata : '=',
                chartconfig : '='
            },
            restrict: 'AE',
            templateUrl: 'tablereportmarkettrendssku.html',
            link: function (scope, element, attrs) {

                scope.plus = 1;
                scope.display = 'line';

                if(angular.isUndefined(scope.unit)) {
                    scope.unit = '';
                }

            }
        };
    });


    angular.module('marksimos.websitecomponent').directive('tableReportMarketTrendsBrand', function() {
        return {
            scope: {
                data : '=',
                unit : '=',
                chartdata : '=',
                chartconfig : '='
            },
            restrict: 'AE',
            templateUrl: 'tablereportmarkettrendsbrand.html',
            link: function (scope, element, attrs) {

                scope.plus = 1;
                scope.display = 'line';

                if(angular.isUndefined(scope.unit)) {
                    scope.unit = '';
                }
            }
        };
    });


    angular.module('marksimos.websitecomponent').directive('tableReportMarketTrendsGlobal', function() {
        return {
            scope: {
                data : '=',
                unit : '=',
                chartdata : '=',
                chartconfig : '='
            },
            restrict: 'AE',
            templateUrl: 'tablereportmarkettrendsglobal.html',
            link: function (scope, element, attrs) {

                scope.plus = 1;
                scope.display = 'line';

                if(angular.isUndefined(scope.unit)) {
                    scope.unit = '';
                }

            }
        };
    });


    angular.module('marksimos.websitecomponent').directive('tableReportMarketIndicator', [ function() {
        return {
            scope: {
                data : '=',
                unit : '@'
            },
            restrict: 'AE',
            templateUrl: 'tablereportmarketindicator.html',
            link: function (scope, element, attrs) {

                if(angular.isUndefined(scope.unit)) {
                    scope.unit = '';
                }

            }
        };
    }]);


    angular.module('marksimos.websitecomponent').directive('tableReportFinalScore', [function() {
        return {
            scope: {
                data : '=',
                selectScore: '='
            },
            restrict: 'AE',
            templateUrl: 'tablereportfinalscore.html',
            link : function(scope, element, attrs){
            }
        };
    }]);


    angular.module('marksimos.websitecomponent').directive('genParseMd', ['mdParse', 'sanitize', 'pretty', 'isVisible', '$timeout',
        function (mdParse, sanitize, pretty, isVisible, $timeout) {
            // <div gen-parse-md="document"></div>
            // document是Markdown格式或一般文档字符串，解析成DOM后插入<div>
            return function (scope, element, attr) {
                scope.$watch(attr.genParseMd, function (value) {
                    if (isVisible(element)) {
                        parseDoc(value);
                    } else {
                        $timeout(function () {
                            parseDoc(value);
                        }, 500);
                    }
                });

                function parseDoc(value) {
                    if (angular.isDefined(value)) {
                        value = mdParse(value);
                        value = sanitize(value);
                        element.html(value);
                        angular.forEach(element.find('code'), function (value) {
                            value = angular.element(value);
                            if (!value.parent().is('pre')) {
                                value.addClass('prettyline');
                            }
                        });
                        element.find('pre').addClass('prettyprint'); // linenums have bug!
                        element.find('a').attr('target', function () {
                            if (this.host !== location.host) {
                                return '_blank';
                            }
                        });
                        pretty();
                    }
                }
            };
        }
    ]);



})();




